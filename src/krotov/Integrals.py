import numpy as np
from IPython.display import display, Markdown


__all__ =['gaussiano_norm','overlap2']

def separate(V,row):
    return V[row][0],V[row][1],V[row][2],V[row][3]


def coeffscuadraticos11(V,B):
    v11,v12,v13,v14=separate(V,0)
    v21,v22,v23,v24=separate(V,1)
    v31,v32,v33,v34=separate(V,2)
    v41,v42,v43,v44=separate(V,3)
    b11,b12,b13,b14=separate(B,0)
    b21,b22,b23,b24=separate(B,1)
    b31,b32,b33,b34=separate(B,2)
    b41,b42,b43,b44=separate(B,3)
    aux0=(v13*(v24**2))+((0.5*(v14*v34))+((v14*(v22*v34))+((-0.5*(v13*v44))+(v12*(v23*v44)))));
    aux1=((-0.25*v13)+((-0.5*(v13*v22))+((0.5*(v12*v23))+aux0)))-(v13*(v22*v44));
    aux2=(0.25*(v33*v44))+((0.5*(v11*(v33*v44)))+((0.5*(v22*(v33*v44)))+(v11*(v22*(v33*v44)))));
    aux3=(0.5*(v11*(v22*v44)))+((2.*(v12*(v13*(v23*v44))))+((-0.5*((v23**2)*v44))+aux2));
    aux4=(0.25*(v11*v44))+((-0.5*((v12**2)*v44))+((-0.5*((v13**2)*v44))+((0.25*(v22*v44))+aux3)));
    aux5=(-0.5*(v11*(v34**2)))+(((v12**2)*(v34**2))+((-0.5*(v22*(v34**2)))+((0.125*v44)+aux4)));
    aux6=(-2.*(v12*(v13*(v24*v34))))+((v23*(v24*v34))+((2.*(v11*(v23*(v24*v34))))+((-0.25*(v34**2))+aux5)));
    aux7=(v13*(v14*v34))+((2.*(v13*(v14*(v22*v34))))+((-2.*(v12*(v14*(v23*v34))))+aux6));
    aux8=(0.5*(v11*(v22*v33)))+((2.*(v12*(v14*(v24*v33))))+((-0.5*((v24**2)*v33))+aux7));
    aux9=(0.25*(v11*v33))+((-0.5*((v12**2)*v33))+((-0.5*((v14**2)*v33))+((0.25*(v22*v33))+aux8)));
    aux10=(-0.25*(v24**2))+((-0.5*(v11*(v24**2)))+(((v13**2)*(v24**2))+((0.125*v33)+aux9)));
    aux11=((v14**2)*(v23**2))+((v12*(v14*v24))+((-2.*(v13*(v14*(v23*v24))))+aux10));
    aux12=(-0.5*((v14**2)*v22))+((v12*(v13*v23))+((-0.25*(v23**2))+((-0.5*(v11*(v23**2)))+aux11)));
    aux13=(-0.25*(v14**2))+((0.125*v22)+((0.25*(v11*v22))+((-0.5*((v13**2)*v22))+aux12)));
    aux14=(0.0625+((0.125*v11)+((-0.25*(v12**2))+((-0.25*(v13**2))+aux13))))-((v12**2)*(v33*v44));
    aux15=((aux14-(v11*((v23**2)*v44)))-((v13**2)*(v22*v44)))-(v11*(v22*(v34**2)));
    aux16=((0.+-1.j)*((aux1-(v12*(v24*v34)))-(v14*(v23*v24))))/((aux15-(v11*((v24**2)*v33)))-((v14**2)*(v22*v33)));
    aux17=(-0.5*(v34**2))+((0.25*v44)+((0.5*(v22*v44))+((0.5*(v33*v44))+(v22*(v33*v44)))));
    aux18=(-0.5*(v24**2))+((0.25*v33)+((0.5*(v22*v33))+((2.*(v23*(v24*v34)))+aux17)));
    aux19=((0.125+((0.25*v22)+((-0.5*(v23**2))+aux18)))-((v23**2)*v44))-(v22*(v34**2));
    aux20=(0.25*(v33*v44))+((0.5*(v11*(v33*v44)))+((0.5*(v22*(v33*v44)))+(v11*(v22*(v33*v44)))));
    aux21=(0.5*(v11*(v22*v44)))+((2.*(v12*(v13*(v23*v44))))+((-0.5*((v23**2)*v44))+aux20));
    aux22=(0.25*(v11*v44))+((-0.5*((v12**2)*v44))+((-0.5*((v13**2)*v44))+((0.25*(v22*v44))+aux21)));
    aux23=(-0.5*(v11*(v34**2)))+(((v12**2)*(v34**2))+((-0.5*(v22*(v34**2)))+((0.125*v44)+aux22)));
    aux24=(-2.*(v12*(v13*(v24*v34))))+((v23*(v24*v34))+((2.*(v11*(v23*(v24*v34))))+((-0.25*(v34**2))+aux23)));
    aux25=(v13*(v14*v34))+((2.*(v13*(v14*(v22*v34))))+((-2.*(v12*(v14*(v23*v34))))+aux24));
    aux26=(0.5*(v11*(v22*v33)))+((2.*(v12*(v14*(v24*v33))))+((-0.5*((v24**2)*v33))+aux25));
    aux27=(0.25*(v11*v33))+((-0.5*((v12**2)*v33))+((-0.5*((v14**2)*v33))+((0.25*(v22*v33))+aux26)));
    aux28=(-0.25*(v24**2))+((-0.5*(v11*(v24**2)))+(((v13**2)*(v24**2))+((0.125*v33)+aux27)));
    aux29=((v14**2)*(v23**2))+((v12*(v14*v24))+((-2.*(v13*(v14*(v23*v24))))+aux28));
    aux30=(-0.5*((v14**2)*v22))+((v12*(v13*v23))+((-0.25*(v23**2))+((-0.5*(v11*(v23**2)))+aux29)));
    aux31=(-0.25*(v14**2))+((0.125*v22)+((0.25*(v11*v22))+((-0.5*((v13**2)*v22))+aux30)));
    aux32=(0.0625+((0.125*v11)+((-0.25*(v12**2))+((-0.25*(v13**2))+aux31))))-((v12**2)*(v33*v44));
    aux33=((aux32-(v11*((v23**2)*v44)))-((v13**2)*(v22*v44)))-(v11*(v22*(v34**2)));
    aux34=(aux19-((v24**2)*v33))/((aux33-(v11*((v24**2)*v33)))-((v14**2)*(v22*v33)));
    aux35=(b13*(b24**2))+((0.5*(b14*b34))+((b14*(b22*b34))+((-0.5*(b13*b44))+(b12*(b23*b44)))));
    aux36=((-0.25*b13)+((-0.5*(b13*b22))+((0.5*(b12*b23))+aux35)))-(b13*(b22*b44));
    aux37=(0.25*(b33*b44))+((0.5*(b11*(b33*b44)))+((0.5*(b22*(b33*b44)))+(b11*(b22*(b33*b44)))));
    aux38=(0.5*(b11*(b22*b44)))+((2.*(b12*(b13*(b23*b44))))+((-0.5*((b23**2)*b44))+aux37));
    aux39=(0.25*(b11*b44))+((-0.5*((b12**2)*b44))+((-0.5*((b13**2)*b44))+((0.25*(b22*b44))+aux38)));
    aux40=(-0.5*(b11*(b34**2)))+(((b12**2)*(b34**2))+((-0.5*(b22*(b34**2)))+((0.125*b44)+aux39)));
    aux41=(-2.*(b12*(b13*(b24*b34))))+((b23*(b24*b34))+((2.*(b11*(b23*(b24*b34))))+((-0.25*(b34**2))+aux40)));
    aux42=(b13*(b14*b34))+((2.*(b13*(b14*(b22*b34))))+((-2.*(b12*(b14*(b23*b34))))+aux41));
    aux43=(0.5*(b11*(b22*b33)))+((2.*(b12*(b14*(b24*b33))))+((-0.5*((b24**2)*b33))+aux42));
    aux44=(0.25*(b11*b33))+((-0.5*((b12**2)*b33))+((-0.5*((b14**2)*b33))+((0.25*(b22*b33))+aux43)));
    aux45=(-0.25*(b24**2))+((-0.5*(b11*(b24**2)))+(((b13**2)*(b24**2))+((0.125*b33)+aux44)));
    aux46=((b14**2)*(b23**2))+((b12*(b14*b24))+((-2.*(b13*(b14*(b23*b24))))+aux45));
    aux47=(-0.5*((b14**2)*b22))+((b12*(b13*b23))+((-0.25*(b23**2))+((-0.5*(b11*(b23**2)))+aux46)));
    aux48=(-0.25*(b14**2))+((0.125*b22)+((0.25*(b11*b22))+((-0.5*((b13**2)*b22))+aux47)));
    aux49=(0.0625+((0.125*b11)+((-0.25*(b12**2))+((-0.25*(b13**2))+aux48))))-((b12**2)*(b33*b44));
    aux50=((aux49-(b11*((b23**2)*b44)))-((b13**2)*(b22*b44)))-(b11*(b22*(b34**2)));
    aux51=((0.+1.j)*((aux36-(b12*(b24*b34)))-(b14*(b23*b24))))/((aux50-(b11*((b24**2)*b33)))-((b14**2)*(b22*b33)));
    aux52=(-0.5*(b34**2))+((0.25*b44)+((0.5*(b22*b44))+((0.5*(b33*b44))+(b22*(b33*b44)))));
    aux53=(-0.5*(b24**2))+((0.25*b33)+((0.5*(b22*b33))+((2.*(b23*(b24*b34)))+aux52)));
    aux54=((0.125+((0.25*b22)+((-0.5*(b23**2))+aux53)))-((b23**2)*b44))-(b22*(b34**2));
    aux55=(0.25*(b33*b44))+((0.5*(b11*(b33*b44)))+((0.5*(b22*(b33*b44)))+(b11*(b22*(b33*b44)))));
    aux56=(0.5*(b11*(b22*b44)))+((2.*(b12*(b13*(b23*b44))))+((-0.5*((b23**2)*b44))+aux55));
    aux57=(0.25*(b11*b44))+((-0.5*((b12**2)*b44))+((-0.5*((b13**2)*b44))+((0.25*(b22*b44))+aux56)));
    aux58=(-0.5*(b11*(b34**2)))+(((b12**2)*(b34**2))+((-0.5*(b22*(b34**2)))+((0.125*b44)+aux57)));
    aux59=(-2.*(b12*(b13*(b24*b34))))+((b23*(b24*b34))+((2.*(b11*(b23*(b24*b34))))+((-0.25*(b34**2))+aux58)));
    aux60=(b13*(b14*b34))+((2.*(b13*(b14*(b22*b34))))+((-2.*(b12*(b14*(b23*b34))))+aux59));
    aux61=(0.5*(b11*(b22*b33)))+((2.*(b12*(b14*(b24*b33))))+((-0.5*((b24**2)*b33))+aux60));
    aux62=(0.25*(b11*b33))+((-0.5*((b12**2)*b33))+((-0.5*((b14**2)*b33))+((0.25*(b22*b33))+aux61)));
    aux63=(-0.25*(b24**2))+((-0.5*(b11*(b24**2)))+(((b13**2)*(b24**2))+((0.125*b33)+aux62)));
    aux64=((b14**2)*(b23**2))+((b12*(b14*b24))+((-2.*(b13*(b14*(b23*b24))))+aux63));
    aux65=(-0.5*((b14**2)*b22))+((b12*(b13*b23))+((-0.25*(b23**2))+((-0.5*(b11*(b23**2)))+aux64)));
    aux66=(-0.25*(b14**2))+((0.125*b22)+((0.25*(b11*b22))+((-0.5*((b13**2)*b22))+aux65)));
    aux67=(0.0625+((0.125*b11)+((-0.25*(b12**2))+((-0.25*(b13**2))+aux66))))-((b12**2)*(b33*b44));
    aux68=((aux67-(b11*((b23**2)*b44)))-((b13**2)*(b22*b44)))-(b11*(b22*(b34**2)));
    aux69=(aux54-((b24**2)*b33))/((aux68-(b11*((b24**2)*b33)))-((b14**2)*(b22*b33)));
    output=(0.25*(aux16-aux34))+(-0.25*(np.conjugate((aux51+aux69))));
    return output

def coeffscuadraticos12(V,B):
    v11,v12,v13,v14=separate(V,0)
    v21,v22,v23,v24=separate(V,1)
    v31,v32,v33,v34=separate(V,2)
    v41,v42,v43,v44=separate(V,3)
    b11,b12,b13,b14=separate(B,0)
    b21,b22,b23,b24=separate(B,1)
    b31,b32,b33,b34=separate(B,2)
    b41,b42,b43,b44=separate(B,3)
    aux0=(0.5*(b12*b24))+((-0.5*(b14*b33))+((b12*(b24*b33))+((0.5*(b13*b34))+(b13*(b22*b34)))));
    aux1=(((-0.25*b14)+((-0.5*(b14*b22))+((b14*(b23**2))+aux0)))-(b12*(b23*b34)))-(b14*(b22*b33));
    aux2=(0.25*(b33*b44))+((0.5*(b11*(b33*b44)))+((0.5*(b22*(b33*b44)))+(b11*(b22*(b33*b44)))));
    aux3=(0.5*(b11*(b22*b44)))+((2.*(b12*(b13*(b23*b44))))+((-0.5*((b23**2)*b44))+aux2));
    aux4=(0.25*(b11*b44))+((-0.5*((b12**2)*b44))+((-0.5*((b13**2)*b44))+((0.25*(b22*b44))+aux3)));
    aux5=(-0.5*(b11*(b34**2)))+(((b12**2)*(b34**2))+((-0.5*(b22*(b34**2)))+((0.125*b44)+aux4)));
    aux6=(-2.*(b12*(b13*(b24*b34))))+((b23*(b24*b34))+((2.*(b11*(b23*(b24*b34))))+((-0.25*(b34**2))+aux5)));
    aux7=(b13*(b14*b34))+((2.*(b13*(b14*(b22*b34))))+((-2.*(b12*(b14*(b23*b34))))+aux6));
    aux8=(0.5*(b11*(b22*b33)))+((2.*(b12*(b14*(b24*b33))))+((-0.5*((b24**2)*b33))+aux7));
    aux9=(0.25*(b11*b33))+((-0.5*((b12**2)*b33))+((-0.5*((b14**2)*b33))+((0.25*(b22*b33))+aux8)));
    aux10=(-0.25*(b24**2))+((-0.5*(b11*(b24**2)))+(((b13**2)*(b24**2))+((0.125*b33)+aux9)));
    aux11=((b14**2)*(b23**2))+((b12*(b14*b24))+((-2.*(b13*(b14*(b23*b24))))+aux10));
    aux12=(-0.5*((b14**2)*b22))+((b12*(b13*b23))+((-0.25*(b23**2))+((-0.5*(b11*(b23**2)))+aux11)));
    aux13=(-0.25*(b14**2))+((0.125*b22)+((0.25*(b11*b22))+((-0.5*((b13**2)*b22))+aux12)));
    aux14=(0.0625+((0.125*b11)+((-0.25*(b12**2))+((-0.25*(b13**2))+aux13))))-((b12**2)*(b33*b44));
    aux15=((aux14-(b11*((b23**2)*b44)))-((b13**2)*(b22*b44)))-(b11*(b22*(b34**2)));
    aux16=(aux1-(b13*(b23*b24)))/((aux15-(b11*((b24**2)*b33)))-((b14**2)*(b22*b33)));
    aux17=((b14**2)*b23)+((0.5*(b24*b34))+((b11*(b24*b34))+((b12*(b13*b44))+(-0.5*(b23*b44)))));
    aux18=((0.5*(b12*b13))+((-0.25*b23)+((-0.5*(b11*b23))+aux17)))-(b11*(b23*b44));
    aux19=(0.25*(b33*b44))+((0.5*(b11*(b33*b44)))+((0.5*(b22*(b33*b44)))+(b11*(b22*(b33*b44)))));
    aux20=(0.5*(b11*(b22*b44)))+((2.*(b12*(b13*(b23*b44))))+((-0.5*((b23**2)*b44))+aux19));
    aux21=(0.25*(b11*b44))+((-0.5*((b12**2)*b44))+((-0.5*((b13**2)*b44))+((0.25*(b22*b44))+aux20)));
    aux22=(-0.5*(b11*(b34**2)))+(((b12**2)*(b34**2))+((-0.5*(b22*(b34**2)))+((0.125*b44)+aux21)));
    aux23=(-2.*(b12*(b13*(b24*b34))))+((b23*(b24*b34))+((2.*(b11*(b23*(b24*b34))))+((-0.25*(b34**2))+aux22)));
    aux24=(b13*(b14*b34))+((2.*(b13*(b14*(b22*b34))))+((-2.*(b12*(b14*(b23*b34))))+aux23));
    aux25=(0.5*(b11*(b22*b33)))+((2.*(b12*(b14*(b24*b33))))+((-0.5*((b24**2)*b33))+aux24));
    aux26=(0.25*(b11*b33))+((-0.5*((b12**2)*b33))+((-0.5*((b14**2)*b33))+((0.25*(b22*b33))+aux25)));
    aux27=(-0.25*(b24**2))+((-0.5*(b11*(b24**2)))+(((b13**2)*(b24**2))+((0.125*b33)+aux26)));
    aux28=((b14**2)*(b23**2))+((b12*(b14*b24))+((-2.*(b13*(b14*(b23*b24))))+aux27));
    aux29=(-0.5*((b14**2)*b22))+((b12*(b13*b23))+((-0.25*(b23**2))+((-0.5*(b11*(b23**2)))+aux28)));
    aux30=(-0.25*(b14**2))+((0.125*b22)+((0.25*(b11*b22))+((-0.5*((b13**2)*b22))+aux29)));
    aux31=(0.0625+((0.125*b11)+((-0.25*(b12**2))+((-0.25*(b13**2))+aux30))))-((b12**2)*(b33*b44));
    aux32=((aux31-(b11*((b23**2)*b44)))-((b13**2)*(b22*b44)))-(b11*(b22*(b34**2)));
    aux33=((aux18-(b12*(b14*b34)))-(b13*(b14*b24)))/((aux32-(b11*((b24**2)*b33)))-((b14**2)*(b22*b33)));
    aux34=(-0.5*(b12*b33))+((b14*(b24*b33))+((b12*(b34**2))+((-0.5*(b12*b44))+(b13*(b23*b44)))));
    aux35=((-0.25*b12)+((0.5*(b13*b23))+((0.5*(b14*b24))+aux34)))-(b12*(b33*b44));
    aux36=(0.25*(b33*b44))+((0.5*(b11*(b33*b44)))+((0.5*(b22*(b33*b44)))+(b11*(b22*(b33*b44)))));
    aux37=(0.5*(b11*(b22*b44)))+((2.*(b12*(b13*(b23*b44))))+((-0.5*((b23**2)*b44))+aux36));
    aux38=(0.25*(b11*b44))+((-0.5*((b12**2)*b44))+((-0.5*((b13**2)*b44))+((0.25*(b22*b44))+aux37)));
    aux39=(-0.5*(b11*(b34**2)))+(((b12**2)*(b34**2))+((-0.5*(b22*(b34**2)))+((0.125*b44)+aux38)));
    aux40=(-2.*(b12*(b13*(b24*b34))))+((b23*(b24*b34))+((2.*(b11*(b23*(b24*b34))))+((-0.25*(b34**2))+aux39)));
    aux41=(b13*(b14*b34))+((2.*(b13*(b14*(b22*b34))))+((-2.*(b12*(b14*(b23*b34))))+aux40));
    aux42=(0.5*(b11*(b22*b33)))+((2.*(b12*(b14*(b24*b33))))+((-0.5*((b24**2)*b33))+aux41));
    aux43=(0.25*(b11*b33))+((-0.5*((b12**2)*b33))+((-0.5*((b14**2)*b33))+((0.25*(b22*b33))+aux42)));
    aux44=(-0.25*(b24**2))+((-0.5*(b11*(b24**2)))+(((b13**2)*(b24**2))+((0.125*b33)+aux43)));
    aux45=((b14**2)*(b23**2))+((b12*(b14*b24))+((-2.*(b13*(b14*(b23*b24))))+aux44));
    aux46=(-0.5*((b14**2)*b22))+((b12*(b13*b23))+((-0.25*(b23**2))+((-0.5*(b11*(b23**2)))+aux45)));
    aux47=(-0.25*(b14**2))+((0.125*b22)+((0.25*(b11*b22))+((-0.5*((b13**2)*b22))+aux46)));
    aux48=(0.0625+((0.125*b11)+((-0.25*(b12**2))+((-0.25*(b13**2))+aux47))))-((b12**2)*(b33*b44));
    aux49=((aux48-(b11*((b23**2)*b44)))-((b13**2)*(b22*b44)))-(b11*(b22*(b34**2)));
    aux50=((aux35-(b13*(b24*b34)))-(b14*(b23*b34)))/((aux49-(b11*((b24**2)*b33)))-((b14**2)*(b22*b33)));
    aux51=(0.5*(v12*v24))+((-0.5*(v14*v33))+((v12*(v24*v33))+((0.5*(v13*v34))+(v13*(v22*v34)))));
    aux52=((-0.25*v14)+((-0.5*(v14*v22))+((v14*(v23**2))+aux51)))-(v12*(v23*v34));
    aux53=(0.25*(v33*v44))+((0.5*(v11*(v33*v44)))+((0.5*(v22*(v33*v44)))+(v11*(v22*(v33*v44)))));
    aux54=(0.5*(v11*(v22*v44)))+((2.*(v12*(v13*(v23*v44))))+((-0.5*((v23**2)*v44))+aux53));
    aux55=(0.25*(v11*v44))+((-0.5*((v12**2)*v44))+((-0.5*((v13**2)*v44))+((0.25*(v22*v44))+aux54)));
    aux56=(-0.5*(v11*(v34**2)))+(((v12**2)*(v34**2))+((-0.5*(v22*(v34**2)))+((0.125*v44)+aux55)));
    aux57=(-2.*(v12*(v13*(v24*v34))))+((v23*(v24*v34))+((2.*(v11*(v23*(v24*v34))))+((-0.25*(v34**2))+aux56)));
    aux58=(v13*(v14*v34))+((2.*(v13*(v14*(v22*v34))))+((-2.*(v12*(v14*(v23*v34))))+aux57));
    aux59=(0.5*(v11*(v22*v33)))+((2.*(v12*(v14*(v24*v33))))+((-0.5*((v24**2)*v33))+aux58));
    aux60=(0.25*(v11*v33))+((-0.5*((v12**2)*v33))+((-0.5*((v14**2)*v33))+((0.25*(v22*v33))+aux59)));
    aux61=(-0.25*(v24**2))+((-0.5*(v11*(v24**2)))+(((v13**2)*(v24**2))+((0.125*v33)+aux60)));
    aux62=((v14**2)*(v23**2))+((v12*(v14*v24))+((-2.*(v13*(v14*(v23*v24))))+aux61));
    aux63=(-0.5*((v14**2)*v22))+((v12*(v13*v23))+((-0.25*(v23**2))+((-0.5*(v11*(v23**2)))+aux62)));
    aux64=(-0.25*(v14**2))+((0.125*v22)+((0.25*(v11*v22))+((-0.5*((v13**2)*v22))+aux63)));
    aux65=(0.0625+((0.125*v11)+((-0.25*(v12**2))+((-0.25*(v13**2))+aux64))))-((v12**2)*(v33*v44));
    aux66=((aux65-(v11*((v23**2)*v44)))-((v13**2)*(v22*v44)))-(v11*(v22*(v34**2)));
    aux67=((aux52-(v14*(v22*v33)))-(v13*(v23*v24)))/((aux66-(v11*((v24**2)*v33)))-((v14**2)*(v22*v33)));
    aux68=((v14**2)*v23)+((0.5*(v24*v34))+((v11*(v24*v34))+((v12*(v13*v44))+(-0.5*(v23*v44)))));
    aux69=((0.5*(v12*v13))+((-0.25*v23)+((-0.5*(v11*v23))+aux68)))-(v11*(v23*v44));
    aux70=(0.25*(v33*v44))+((0.5*(v11*(v33*v44)))+((0.5*(v22*(v33*v44)))+(v11*(v22*(v33*v44)))));
    aux71=(0.5*(v11*(v22*v44)))+((2.*(v12*(v13*(v23*v44))))+((-0.5*((v23**2)*v44))+aux70));
    aux72=(0.25*(v11*v44))+((-0.5*((v12**2)*v44))+((-0.5*((v13**2)*v44))+((0.25*(v22*v44))+aux71)));
    aux73=(-0.5*(v11*(v34**2)))+(((v12**2)*(v34**2))+((-0.5*(v22*(v34**2)))+((0.125*v44)+aux72)));
    aux74=(-2.*(v12*(v13*(v24*v34))))+((v23*(v24*v34))+((2.*(v11*(v23*(v24*v34))))+((-0.25*(v34**2))+aux73)));
    aux75=(v13*(v14*v34))+((2.*(v13*(v14*(v22*v34))))+((-2.*(v12*(v14*(v23*v34))))+aux74));
    aux76=(0.5*(v11*(v22*v33)))+((2.*(v12*(v14*(v24*v33))))+((-0.5*((v24**2)*v33))+aux75));
    aux77=(0.25*(v11*v33))+((-0.5*((v12**2)*v33))+((-0.5*((v14**2)*v33))+((0.25*(v22*v33))+aux76)));
    aux78=(-0.25*(v24**2))+((-0.5*(v11*(v24**2)))+(((v13**2)*(v24**2))+((0.125*v33)+aux77)));
    aux79=((v14**2)*(v23**2))+((v12*(v14*v24))+((-2.*(v13*(v14*(v23*v24))))+aux78));
    aux80=(-0.5*((v14**2)*v22))+((v12*(v13*v23))+((-0.25*(v23**2))+((-0.5*(v11*(v23**2)))+aux79)));
    aux81=(-0.25*(v14**2))+((0.125*v22)+((0.25*(v11*v22))+((-0.5*((v13**2)*v22))+aux80)));
    aux82=(0.0625+((0.125*v11)+((-0.25*(v12**2))+((-0.25*(v13**2))+aux81))))-((v12**2)*(v33*v44));
    aux83=((aux82-(v11*((v23**2)*v44)))-((v13**2)*(v22*v44)))-(v11*(v22*(v34**2)));
    aux84=((aux69-(v12*(v14*v34)))-(v13*(v14*v24)))/((aux83-(v11*((v24**2)*v33)))-((v14**2)*(v22*v33)));
    aux85=(-0.5*(v12*v33))+((v14*(v24*v33))+((v12*(v34**2))+((-0.5*(v12*v44))+(v13*(v23*v44)))));
    aux86=((-0.25*v12)+((0.5*(v13*v23))+((0.5*(v14*v24))+aux85)))-(v12*(v33*v44));
    aux87=(0.25*(v33*v44))+((0.5*(v11*(v33*v44)))+((0.5*(v22*(v33*v44)))+(v11*(v22*(v33*v44)))));
    aux88=(0.5*(v11*(v22*v44)))+((2.*(v12*(v13*(v23*v44))))+((-0.5*((v23**2)*v44))+aux87));
    aux89=(0.25*(v11*v44))+((-0.5*((v12**2)*v44))+((-0.5*((v13**2)*v44))+((0.25*(v22*v44))+aux88)));
    aux90=(-0.5*(v11*(v34**2)))+(((v12**2)*(v34**2))+((-0.5*(v22*(v34**2)))+((0.125*v44)+aux89)));
    aux91=(-2.*(v12*(v13*(v24*v34))))+((v23*(v24*v34))+((2.*(v11*(v23*(v24*v34))))+((-0.25*(v34**2))+aux90)));
    aux92=(v13*(v14*v34))+((2.*(v13*(v14*(v22*v34))))+((-2.*(v12*(v14*(v23*v34))))+aux91));
    aux93=(0.5*(v11*(v22*v33)))+((2.*(v12*(v14*(v24*v33))))+((-0.5*((v24**2)*v33))+aux92));
    aux94=(0.25*(v11*v33))+((-0.5*((v12**2)*v33))+((-0.5*((v14**2)*v33))+((0.25*(v22*v33))+aux93)));
    aux95=(-0.25*(v24**2))+((-0.5*(v11*(v24**2)))+(((v13**2)*(v24**2))+((0.125*v33)+aux94)));
    aux96=((v14**2)*(v23**2))+((v12*(v14*v24))+((-2.*(v13*(v14*(v23*v24))))+aux95));
    aux97=(-0.5*((v14**2)*v22))+((v12*(v13*v23))+((-0.25*(v23**2))+((-0.5*(v11*(v23**2)))+aux96)));
    aux98=(-0.25*(v14**2))+((0.125*v22)+((0.25*(v11*v22))+((-0.5*((v13**2)*v22))+aux97)));
    aux99=(0.0625+((0.125*v11)+((-0.25*(v12**2))+((-0.25*(v13**2))+aux98))))-((v12**2)*(v33*v44));
    aux100=((aux99-(v11*((v23**2)*v44)))-((v13**2)*(v22*v44)))-(v11*(v22*(v34**2)));
    aux101=((aux86-(v13*(v24*v34)))-(v14*(v23*v34)))/((aux100-(v11*((v24**2)*v33)))-((v14**2)*(v22*v33)));
    output=(0.5*(((0.+0.5j)*(aux16+aux33))-aux50))+(0.5*(((0.+-0.5j)*(aux67+aux84))-aux101));
    return output


def coeffscuadraticos13(V,B):
    v11,v12,v13,v14=separate(V,0)
    v21,v22,v23,v24=separate(V,1)
    v31,v32,v33,v34=separate(V,2)
    v41,v42,v43,v44=separate(V,3)
    b11,b12,b13,b14=separate(B,0)
    b21,b22,b23,b24=separate(B,1)
    b31,b32,b33,b34=separate(B,2)
    b41,b42,b43,b44=separate(B,3)
    aux0=(-0.5*(b34**2))+((0.25*b44)+((0.5*(b22*b44))+((0.5*(b33*b44))+(b22*(b33*b44)))));
    aux1=(-0.5*(b24**2))+((0.25*b33)+((0.5*(b22*b33))+((2.*(b23*(b24*b34)))+aux0)));
    aux2=((0.125+((0.25*b22)+((-0.5*(b23**2))+aux1)))-((b23**2)*b44))-(b22*(b34**2));
    aux3=(0.25*(b33*b44))+((0.5*(b11*(b33*b44)))+((0.5*(b22*(b33*b44)))+(b11*(b22*(b33*b44)))));
    aux4=(0.5*(b11*(b22*b44)))+((2.*(b12*(b13*(b23*b44))))+((-0.5*((b23**2)*b44))+aux3));
    aux5=(0.25*(b11*b44))+((-0.5*((b12**2)*b44))+((-0.5*((b13**2)*b44))+((0.25*(b22*b44))+aux4)));
    aux6=(-0.5*(b11*(b34**2)))+(((b12**2)*(b34**2))+((-0.5*(b22*(b34**2)))+((0.125*b44)+aux5)));
    aux7=(-2.*(b12*(b13*(b24*b34))))+((b23*(b24*b34))+((2.*(b11*(b23*(b24*b34))))+((-0.25*(b34**2))+aux6)));
    aux8=(b13*(b14*b34))+((2.*(b13*(b14*(b22*b34))))+((-2.*(b12*(b14*(b23*b34))))+aux7));
    aux9=(0.5*(b11*(b22*b33)))+((2.*(b12*(b14*(b24*b33))))+((-0.5*((b24**2)*b33))+aux8));
    aux10=(0.25*(b11*b33))+((-0.5*((b12**2)*b33))+((-0.5*((b14**2)*b33))+((0.25*(b22*b33))+aux9)));
    aux11=(-0.25*(b24**2))+((-0.5*(b11*(b24**2)))+(((b13**2)*(b24**2))+((0.125*b33)+aux10)));
    aux12=((b14**2)*(b23**2))+((b12*(b14*b24))+((-2.*(b13*(b14*(b23*b24))))+aux11));
    aux13=(-0.5*((b14**2)*b22))+((b12*(b13*b23))+((-0.25*(b23**2))+((-0.5*(b11*(b23**2)))+aux12)));
    aux14=(-0.25*(b14**2))+((0.125*b22)+((0.25*(b11*b22))+((-0.5*((b13**2)*b22))+aux13)));
    aux15=(0.0625+((0.125*b11)+((-0.25*(b12**2))+((-0.25*(b13**2))+aux14))))-((b12**2)*(b33*b44));
    aux16=((aux15-(b11*((b23**2)*b44)))-((b13**2)*(b22*b44)))-(b11*(b22*(b34**2)));
    aux17=(aux2-((b24**2)*b33))/((aux16-(b11*((b24**2)*b33)))-((b14**2)*(b22*b33)));
    aux18=(-0.5*(b24**2))+((0.25*b44)+((0.5*(b11*b44))+((0.5*(b22*b44))+(b11*(b22*b44)))));
    aux19=(-0.5*(b14**2))+((0.25*b22)+((0.5*(b11*b22))+((2.*(b12*(b14*b24)))+aux18)));
    aux20=((0.125+((0.25*b11)+((-0.5*(b12**2))+aux19)))-((b12**2)*b44))-(b11*(b24**2));
    aux21=(0.25*(b33*b44))+((0.5*(b11*(b33*b44)))+((0.5*(b22*(b33*b44)))+(b11*(b22*(b33*b44)))));
    aux22=(0.5*(b11*(b22*b44)))+((2.*(b12*(b13*(b23*b44))))+((-0.5*((b23**2)*b44))+aux21));
    aux23=(0.25*(b11*b44))+((-0.5*((b12**2)*b44))+((-0.5*((b13**2)*b44))+((0.25*(b22*b44))+aux22)));
    aux24=(-0.5*(b11*(b34**2)))+(((b12**2)*(b34**2))+((-0.5*(b22*(b34**2)))+((0.125*b44)+aux23)));
    aux25=(-2.*(b12*(b13*(b24*b34))))+((b23*(b24*b34))+((2.*(b11*(b23*(b24*b34))))+((-0.25*(b34**2))+aux24)));
    aux26=(b13*(b14*b34))+((2.*(b13*(b14*(b22*b34))))+((-2.*(b12*(b14*(b23*b34))))+aux25));
    aux27=(0.5*(b11*(b22*b33)))+((2.*(b12*(b14*(b24*b33))))+((-0.5*((b24**2)*b33))+aux26));
    aux28=(0.25*(b11*b33))+((-0.5*((b12**2)*b33))+((-0.5*((b14**2)*b33))+((0.25*(b22*b33))+aux27)));
    aux29=(-0.25*(b24**2))+((-0.5*(b11*(b24**2)))+(((b13**2)*(b24**2))+((0.125*b33)+aux28)));
    aux30=((b14**2)*(b23**2))+((b12*(b14*b24))+((-2.*(b13*(b14*(b23*b24))))+aux29));
    aux31=(-0.5*((b14**2)*b22))+((b12*(b13*b23))+((-0.25*(b23**2))+((-0.5*(b11*(b23**2)))+aux30)));
    aux32=(-0.25*(b14**2))+((0.125*b22)+((0.25*(b11*b22))+((-0.5*((b13**2)*b22))+aux31)));
    aux33=(0.0625+((0.125*b11)+((-0.25*(b12**2))+((-0.25*(b13**2))+aux32))))-((b12**2)*(b33*b44));
    aux34=((aux33-(b11*((b23**2)*b44)))-((b13**2)*(b22*b44)))-(b11*(b22*(b34**2)));
    aux35=(aux20-((b14**2)*b22))/((aux34-(b11*((b24**2)*b33)))-((b14**2)*(b22*b33)));
    aux36=(b13*(b24**2))+((0.5*(b14*b34))+((b14*(b22*b34))+((-0.5*(b13*b44))+(b12*(b23*b44)))));
    aux37=((-0.25*b13)+((-0.5*(b13*b22))+((0.5*(b12*b23))+aux36)))-(b13*(b22*b44));
    aux38=(0.25*(b33*b44))+((0.5*(b11*(b33*b44)))+((0.5*(b22*(b33*b44)))+(b11*(b22*(b33*b44)))));
    aux39=(0.5*(b11*(b22*b44)))+((2.*(b12*(b13*(b23*b44))))+((-0.5*((b23**2)*b44))+aux38));
    aux40=(0.25*(b11*b44))+((-0.5*((b12**2)*b44))+((-0.5*((b13**2)*b44))+((0.25*(b22*b44))+aux39)));
    aux41=(-0.5*(b11*(b34**2)))+(((b12**2)*(b34**2))+((-0.5*(b22*(b34**2)))+((0.125*b44)+aux40)));
    aux42=(-2.*(b12*(b13*(b24*b34))))+((b23*(b24*b34))+((2.*(b11*(b23*(b24*b34))))+((-0.25*(b34**2))+aux41)));
    aux43=(b13*(b14*b34))+((2.*(b13*(b14*(b22*b34))))+((-2.*(b12*(b14*(b23*b34))))+aux42));
    aux44=(0.5*(b11*(b22*b33)))+((2.*(b12*(b14*(b24*b33))))+((-0.5*((b24**2)*b33))+aux43));
    aux45=(0.25*(b11*b33))+((-0.5*((b12**2)*b33))+((-0.5*((b14**2)*b33))+((0.25*(b22*b33))+aux44)));
    aux46=(-0.25*(b24**2))+((-0.5*(b11*(b24**2)))+(((b13**2)*(b24**2))+((0.125*b33)+aux45)));
    aux47=((b14**2)*(b23**2))+((b12*(b14*b24))+((-2.*(b13*(b14*(b23*b24))))+aux46));
    aux48=(-0.5*((b14**2)*b22))+((b12*(b13*b23))+((-0.25*(b23**2))+((-0.5*(b11*(b23**2)))+aux47)));
    aux49=(-0.25*(b14**2))+((0.125*b22)+((0.25*(b11*b22))+((-0.5*((b13**2)*b22))+aux48)));
    aux50=(0.0625+((0.125*b11)+((-0.25*(b12**2))+((-0.25*(b13**2))+aux49))))-((b12**2)*(b33*b44));
    aux51=((aux50-(b11*((b23**2)*b44)))-((b13**2)*(b22*b44)))-(b11*(b22*(b34**2)));
    aux52=((aux37-(b12*(b24*b34)))-(b14*(b23*b24)))/((aux51-(b11*((b24**2)*b33)))-((b14**2)*(b22*b33)));
    aux53=(-0.5*(v34**2))+((0.25*v44)+((0.5*(v22*v44))+((0.5*(v33*v44))+(v22*(v33*v44)))));
    aux54=(-0.5*(v24**2))+((0.25*v33)+((0.5*(v22*v33))+((2.*(v23*(v24*v34)))+aux53)));
    aux55=((0.125+((0.25*v22)+((-0.5*(v23**2))+aux54)))-((v23**2)*v44))-(v22*(v34**2));
    aux56=(0.25*(v33*v44))+((0.5*(v11*(v33*v44)))+((0.5*(v22*(v33*v44)))+(v11*(v22*(v33*v44)))));
    aux57=(0.5*(v11*(v22*v44)))+((2.*(v12*(v13*(v23*v44))))+((-0.5*((v23**2)*v44))+aux56));
    aux58=(0.25*(v11*v44))+((-0.5*((v12**2)*v44))+((-0.5*((v13**2)*v44))+((0.25*(v22*v44))+aux57)));
    aux59=(-0.5*(v11*(v34**2)))+(((v12**2)*(v34**2))+((-0.5*(v22*(v34**2)))+((0.125*v44)+aux58)));
    aux60=(-2.*(v12*(v13*(v24*v34))))+((v23*(v24*v34))+((2.*(v11*(v23*(v24*v34))))+((-0.25*(v34**2))+aux59)));
    aux61=(v13*(v14*v34))+((2.*(v13*(v14*(v22*v34))))+((-2.*(v12*(v14*(v23*v34))))+aux60));
    aux62=(0.5*(v11*(v22*v33)))+((2.*(v12*(v14*(v24*v33))))+((-0.5*((v24**2)*v33))+aux61));
    aux63=(0.25*(v11*v33))+((-0.5*((v12**2)*v33))+((-0.5*((v14**2)*v33))+((0.25*(v22*v33))+aux62)));
    aux64=(-0.25*(v24**2))+((-0.5*(v11*(v24**2)))+(((v13**2)*(v24**2))+((0.125*v33)+aux63)));
    aux65=((v14**2)*(v23**2))+((v12*(v14*v24))+((-2.*(v13*(v14*(v23*v24))))+aux64));
    aux66=(-0.5*((v14**2)*v22))+((v12*(v13*v23))+((-0.25*(v23**2))+((-0.5*(v11*(v23**2)))+aux65)));
    aux67=(-0.25*(v14**2))+((0.125*v22)+((0.25*(v11*v22))+((-0.5*((v13**2)*v22))+aux66)));
    aux68=(0.0625+((0.125*v11)+((-0.25*(v12**2))+((-0.25*(v13**2))+aux67))))-((v12**2)*(v33*v44));
    aux69=((aux68-(v11*((v23**2)*v44)))-((v13**2)*(v22*v44)))-(v11*(v22*(v34**2)));
    aux70=(aux55-((v24**2)*v33))/((aux69-(v11*((v24**2)*v33)))-((v14**2)*(v22*v33)));
    aux71=(-0.5*(v24**2))+((0.25*v44)+((0.5*(v11*v44))+((0.5*(v22*v44))+(v11*(v22*v44)))));
    aux72=(-0.5*(v14**2))+((0.25*v22)+((0.5*(v11*v22))+((2.*(v12*(v14*v24)))+aux71)));
    aux73=((0.125+((0.25*v11)+((-0.5*(v12**2))+aux72)))-((v12**2)*v44))-(v11*(v24**2));
    aux74=(0.25*(v33*v44))+((0.5*(v11*(v33*v44)))+((0.5*(v22*(v33*v44)))+(v11*(v22*(v33*v44)))));
    aux75=(0.5*(v11*(v22*v44)))+((2.*(v12*(v13*(v23*v44))))+((-0.5*((v23**2)*v44))+aux74));
    aux76=(0.25*(v11*v44))+((-0.5*((v12**2)*v44))+((-0.5*((v13**2)*v44))+((0.25*(v22*v44))+aux75)));
    aux77=(-0.5*(v11*(v34**2)))+(((v12**2)*(v34**2))+((-0.5*(v22*(v34**2)))+((0.125*v44)+aux76)));
    aux78=(-2.*(v12*(v13*(v24*v34))))+((v23*(v24*v34))+((2.*(v11*(v23*(v24*v34))))+((-0.25*(v34**2))+aux77)));
    aux79=(v13*(v14*v34))+((2.*(v13*(v14*(v22*v34))))+((-2.*(v12*(v14*(v23*v34))))+aux78));
    aux80=(0.5*(v11*(v22*v33)))+((2.*(v12*(v14*(v24*v33))))+((-0.5*((v24**2)*v33))+aux79));
    aux81=(0.25*(v11*v33))+((-0.5*((v12**2)*v33))+((-0.5*((v14**2)*v33))+((0.25*(v22*v33))+aux80)));
    aux82=(-0.25*(v24**2))+((-0.5*(v11*(v24**2)))+(((v13**2)*(v24**2))+((0.125*v33)+aux81)));
    aux83=((v14**2)*(v23**2))+((v12*(v14*v24))+((-2.*(v13*(v14*(v23*v24))))+aux82));
    aux84=(-0.5*((v14**2)*v22))+((v12*(v13*v23))+((-0.25*(v23**2))+((-0.5*(v11*(v23**2)))+aux83)));
    aux85=(-0.25*(v14**2))+((0.125*v22)+((0.25*(v11*v22))+((-0.5*((v13**2)*v22))+aux84)));
    aux86=(0.0625+((0.125*v11)+((-0.25*(v12**2))+((-0.25*(v13**2))+aux85))))-((v12**2)*(v33*v44));
    aux87=((aux86-(v11*((v23**2)*v44)))-((v13**2)*(v22*v44)))-(v11*(v22*(v34**2)));
    aux88=(aux73-((v14**2)*v22))/((aux87-(v11*((v24**2)*v33)))-((v14**2)*(v22*v33)));
    aux89=(v13*(v24**2))+((0.5*(v14*v34))+((v14*(v22*v34))+((-0.5*(v13*v44))+(v12*(v23*v44)))));
    aux90=((-0.25*v13)+((-0.5*(v13*v22))+((0.5*(v12*v23))+aux89)))-(v13*(v22*v44));
    aux91=(0.25*(v33*v44))+((0.5*(v11*(v33*v44)))+((0.5*(v22*(v33*v44)))+(v11*(v22*(v33*v44)))));
    aux92=(0.5*(v11*(v22*v44)))+((2.*(v12*(v13*(v23*v44))))+((-0.5*((v23**2)*v44))+aux91));
    aux93=(0.25*(v11*v44))+((-0.5*((v12**2)*v44))+((-0.5*((v13**2)*v44))+((0.25*(v22*v44))+aux92)));
    aux94=(-0.5*(v11*(v34**2)))+(((v12**2)*(v34**2))+((-0.5*(v22*(v34**2)))+((0.125*v44)+aux93)));
    aux95=(-2.*(v12*(v13*(v24*v34))))+((v23*(v24*v34))+((2.*(v11*(v23*(v24*v34))))+((-0.25*(v34**2))+aux94)));
    aux96=(v13*(v14*v34))+((2.*(v13*(v14*(v22*v34))))+((-2.*(v12*(v14*(v23*v34))))+aux95));
    aux97=(0.5*(v11*(v22*v33)))+((2.*(v12*(v14*(v24*v33))))+((-0.5*((v24**2)*v33))+aux96));
    aux98=(0.25*(v11*v33))+((-0.5*((v12**2)*v33))+((-0.5*((v14**2)*v33))+((0.25*(v22*v33))+aux97)));
    aux99=(-0.25*(v24**2))+((-0.5*(v11*(v24**2)))+(((v13**2)*(v24**2))+((0.125*v33)+aux98)));
    aux100=((v14**2)*(v23**2))+((v12*(v14*v24))+((-2.*(v13*(v14*(v23*v24))))+aux99));
    aux101=(-0.5*((v14**2)*v22))+((v12*(v13*v23))+((-0.25*(v23**2))+((-0.5*(v11*(v23**2)))+aux100)));
    aux102=(-0.25*(v14**2))+((0.125*v22)+((0.25*(v11*v22))+((-0.5*((v13**2)*v22))+aux101)));
    aux103=(0.0625+((0.125*v11)+((-0.25*(v12**2))+((-0.25*(v13**2))+aux102))))-((v12**2)*(v33*v44));
    aux104=((aux103-(v11*((v23**2)*v44)))-((v13**2)*(v22*v44)))-(v11*(v22*(v34**2)));
    aux105=((aux90-(v12*(v24*v34)))-(v14*(v23*v24)))/((aux104-(v11*((v24**2)*v33)))-((v14**2)*(v22*v33)));
    output=(0.5*(((0.+-0.5j)*(aux17-aux35))-aux52))+(0.5*(((0.+0.5j)*(aux70-aux88))-aux105));
    return output

def coeffscuadraticos14(V,B):
    v11,v12,v13,v14=separate(V,0)
    v21,v22,v23,v24=separate(V,1)
    v31,v32,v33,v34=separate(V,2)
    v41,v42,v43,v44=separate(V,3)
    b11,b12,b13,b14=separate(B,0)
    b21,b22,b23,b24=separate(B,1)
    b31,b32,b33,b34=separate(B,2)
    b41,b42,b43,b44=separate(B,3)
    aux0=(-0.5*(b12*b33))+((b14*(b24*b33))+((b12*(b34**2))+((-0.5*(b12*b44))+(b13*(b23*b44)))));
    aux1=(((-0.25*b12)+((0.5*(b13*b23))+((0.5*(b14*b24))+aux0)))-(b12*(b33*b44)))-(b13*(b24*b34));
    aux2=(0.25*(b33*b44))+((0.5*(b11*(b33*b44)))+((0.5*(b22*(b33*b44)))+(b11*(b22*(b33*b44)))));
    aux3=(0.5*(b11*(b22*b44)))+((2.*(b12*(b13*(b23*b44))))+((-0.5*((b23**2)*b44))+aux2));
    aux4=(0.25*(b11*b44))+((-0.5*((b12**2)*b44))+((-0.5*((b13**2)*b44))+((0.25*(b22*b44))+aux3)));
    aux5=(-0.5*(b11*(b34**2)))+(((b12**2)*(b34**2))+((-0.5*(b22*(b34**2)))+((0.125*b44)+aux4)));
    aux6=(-2.*(b12*(b13*(b24*b34))))+((b23*(b24*b34))+((2.*(b11*(b23*(b24*b34))))+((-0.25*(b34**2))+aux5)));
    aux7=(b13*(b14*b34))+((2.*(b13*(b14*(b22*b34))))+((-2.*(b12*(b14*(b23*b34))))+aux6));
    aux8=(0.5*(b11*(b22*b33)))+((2.*(b12*(b14*(b24*b33))))+((-0.5*((b24**2)*b33))+aux7));
    aux9=(0.25*(b11*b33))+((-0.5*((b12**2)*b33))+((-0.5*((b14**2)*b33))+((0.25*(b22*b33))+aux8)));
    aux10=(-0.25*(b24**2))+((-0.5*(b11*(b24**2)))+(((b13**2)*(b24**2))+((0.125*b33)+aux9)));
    aux11=((b14**2)*(b23**2))+((b12*(b14*b24))+((-2.*(b13*(b14*(b23*b24))))+aux10));
    aux12=(-0.5*((b14**2)*b22))+((b12*(b13*b23))+((-0.25*(b23**2))+((-0.5*(b11*(b23**2)))+aux11)));
    aux13=(-0.25*(b14**2))+((0.125*b22)+((0.25*(b11*b22))+((-0.5*((b13**2)*b22))+aux12)));
    aux14=(0.0625+((0.125*b11)+((-0.25*(b12**2))+((-0.25*(b13**2))+aux13))))-((b12**2)*(b33*b44));
    aux15=((aux14-(b11*((b23**2)*b44)))-((b13**2)*(b22*b44)))-(b11*(b22*(b34**2)));
    aux16=(aux1-(b14*(b23*b34)))/((aux15-(b11*((b24**2)*b33)))-((b14**2)*(b22*b33)));
    aux17=(b11*(b23*b24))+((-0.25*b34)+((-0.5*(b11*b34))+(((b12**2)*b34)+(-0.5*(b22*b34)))));
    aux18=((0.5*(b13*b14))+((b13*(b14*b22))+((0.5*(b23*b24))+aux17)))-(b11*(b22*b34));
    aux19=(0.25*(b33*b44))+((0.5*(b11*(b33*b44)))+((0.5*(b22*(b33*b44)))+(b11*(b22*(b33*b44)))));
    aux20=(0.5*(b11*(b22*b44)))+((2.*(b12*(b13*(b23*b44))))+((-0.5*((b23**2)*b44))+aux19));
    aux21=(0.25*(b11*b44))+((-0.5*((b12**2)*b44))+((-0.5*((b13**2)*b44))+((0.25*(b22*b44))+aux20)));
    aux22=(-0.5*(b11*(b34**2)))+(((b12**2)*(b34**2))+((-0.5*(b22*(b34**2)))+((0.125*b44)+aux21)));
    aux23=(-2.*(b12*(b13*(b24*b34))))+((b23*(b24*b34))+((2.*(b11*(b23*(b24*b34))))+((-0.25*(b34**2))+aux22)));
    aux24=(b13*(b14*b34))+((2.*(b13*(b14*(b22*b34))))+((-2.*(b12*(b14*(b23*b34))))+aux23));
    aux25=(0.5*(b11*(b22*b33)))+((2.*(b12*(b14*(b24*b33))))+((-0.5*((b24**2)*b33))+aux24));
    aux26=(0.25*(b11*b33))+((-0.5*((b12**2)*b33))+((-0.5*((b14**2)*b33))+((0.25*(b22*b33))+aux25)));
    aux27=(-0.25*(b24**2))+((-0.5*(b11*(b24**2)))+(((b13**2)*(b24**2))+((0.125*b33)+aux26)));
    aux28=((b14**2)*(b23**2))+((b12*(b14*b24))+((-2.*(b13*(b14*(b23*b24))))+aux27));
    aux29=(-0.5*((b14**2)*b22))+((b12*(b13*b23))+((-0.25*(b23**2))+((-0.5*(b11*(b23**2)))+aux28)));
    aux30=(-0.25*(b14**2))+((0.125*b22)+((0.25*(b11*b22))+((-0.5*((b13**2)*b22))+aux29)));
    aux31=(0.0625+((0.125*b11)+((-0.25*(b12**2))+((-0.25*(b13**2))+aux30))))-((b12**2)*(b33*b44));
    aux32=((aux31-(b11*((b23**2)*b44)))-((b13**2)*(b22*b44)))-(b11*(b22*(b34**2)));
    aux33=((aux18-(b12*(b13*b24)))-(b12*(b14*b23)))/((aux32-(b11*((b24**2)*b33)))-((b14**2)*(b22*b33)));
    aux34=(0.5*(b12*b24))+((-0.5*(b14*b33))+((b12*(b24*b33))+((0.5*(b13*b34))+(b13*(b22*b34)))));
    aux35=((-0.25*b14)+((-0.5*(b14*b22))+((b14*(b23**2))+aux34)))-(b12*(b23*b34));
    aux36=(0.25*(b33*b44))+((0.5*(b11*(b33*b44)))+((0.5*(b22*(b33*b44)))+(b11*(b22*(b33*b44)))));
    aux37=(0.5*(b11*(b22*b44)))+((2.*(b12*(b13*(b23*b44))))+((-0.5*((b23**2)*b44))+aux36));
    aux38=(0.25*(b11*b44))+((-0.5*((b12**2)*b44))+((-0.5*((b13**2)*b44))+((0.25*(b22*b44))+aux37)));
    aux39=(-0.5*(b11*(b34**2)))+(((b12**2)*(b34**2))+((-0.5*(b22*(b34**2)))+((0.125*b44)+aux38)));
    aux40=(-2.*(b12*(b13*(b24*b34))))+((b23*(b24*b34))+((2.*(b11*(b23*(b24*b34))))+((-0.25*(b34**2))+aux39)));
    aux41=(b13*(b14*b34))+((2.*(b13*(b14*(b22*b34))))+((-2.*(b12*(b14*(b23*b34))))+aux40));
    aux42=(0.5*(b11*(b22*b33)))+((2.*(b12*(b14*(b24*b33))))+((-0.5*((b24**2)*b33))+aux41));
    aux43=(0.25*(b11*b33))+((-0.5*((b12**2)*b33))+((-0.5*((b14**2)*b33))+((0.25*(b22*b33))+aux42)));
    aux44=(-0.25*(b24**2))+((-0.5*(b11*(b24**2)))+(((b13**2)*(b24**2))+((0.125*b33)+aux43)));
    aux45=((b14**2)*(b23**2))+((b12*(b14*b24))+((-2.*(b13*(b14*(b23*b24))))+aux44));
    aux46=(-0.5*((b14**2)*b22))+((b12*(b13*b23))+((-0.25*(b23**2))+((-0.5*(b11*(b23**2)))+aux45)));
    aux47=(-0.25*(b14**2))+((0.125*b22)+((0.25*(b11*b22))+((-0.5*((b13**2)*b22))+aux46)));
    aux48=(0.0625+((0.125*b11)+((-0.25*(b12**2))+((-0.25*(b13**2))+aux47))))-((b12**2)*(b33*b44));
    aux49=((aux48-(b11*((b23**2)*b44)))-((b13**2)*(b22*b44)))-(b11*(b22*(b34**2)));
    aux50=((aux35-(b14*(b22*b33)))-(b13*(b23*b24)))/((aux49-(b11*((b24**2)*b33)))-((b14**2)*(b22*b33)));
    aux51=(-0.5*(v12*v33))+((v14*(v24*v33))+((v12*(v34**2))+((-0.5*(v12*v44))+(v13*(v23*v44)))));
    aux52=((-0.25*v12)+((0.5*(v13*v23))+((0.5*(v14*v24))+aux51)))-(v12*(v33*v44));
    aux53=(0.25*(v33*v44))+((0.5*(v11*(v33*v44)))+((0.5*(v22*(v33*v44)))+(v11*(v22*(v33*v44)))));
    aux54=(0.5*(v11*(v22*v44)))+((2.*(v12*(v13*(v23*v44))))+((-0.5*((v23**2)*v44))+aux53));
    aux55=(0.25*(v11*v44))+((-0.5*((v12**2)*v44))+((-0.5*((v13**2)*v44))+((0.25*(v22*v44))+aux54)));
    aux56=(-0.5*(v11*(v34**2)))+(((v12**2)*(v34**2))+((-0.5*(v22*(v34**2)))+((0.125*v44)+aux55)));
    aux57=(-2.*(v12*(v13*(v24*v34))))+((v23*(v24*v34))+((2.*(v11*(v23*(v24*v34))))+((-0.25*(v34**2))+aux56)));
    aux58=(v13*(v14*v34))+((2.*(v13*(v14*(v22*v34))))+((-2.*(v12*(v14*(v23*v34))))+aux57));
    aux59=(0.5*(v11*(v22*v33)))+((2.*(v12*(v14*(v24*v33))))+((-0.5*((v24**2)*v33))+aux58));
    aux60=(0.25*(v11*v33))+((-0.5*((v12**2)*v33))+((-0.5*((v14**2)*v33))+((0.25*(v22*v33))+aux59)));
    aux61=(-0.25*(v24**2))+((-0.5*(v11*(v24**2)))+(((v13**2)*(v24**2))+((0.125*v33)+aux60)));
    aux62=((v14**2)*(v23**2))+((v12*(v14*v24))+((-2.*(v13*(v14*(v23*v24))))+aux61));
    aux63=(-0.5*((v14**2)*v22))+((v12*(v13*v23))+((-0.25*(v23**2))+((-0.5*(v11*(v23**2)))+aux62)));
    aux64=(-0.25*(v14**2))+((0.125*v22)+((0.25*(v11*v22))+((-0.5*((v13**2)*v22))+aux63)));
    aux65=(0.0625+((0.125*v11)+((-0.25*(v12**2))+((-0.25*(v13**2))+aux64))))-((v12**2)*(v33*v44));
    aux66=((aux65-(v11*((v23**2)*v44)))-((v13**2)*(v22*v44)))-(v11*(v22*(v34**2)));
    aux67=((aux52-(v13*(v24*v34)))-(v14*(v23*v34)))/((aux66-(v11*((v24**2)*v33)))-((v14**2)*(v22*v33)));
    aux68=(v11*(v23*v24))+((-0.25*v34)+((-0.5*(v11*v34))+(((v12**2)*v34)+(-0.5*(v22*v34)))));
    aux69=((0.5*(v13*v14))+((v13*(v14*v22))+((0.5*(v23*v24))+aux68)))-(v11*(v22*v34));
    aux70=(0.25*(v33*v44))+((0.5*(v11*(v33*v44)))+((0.5*(v22*(v33*v44)))+(v11*(v22*(v33*v44)))));
    aux71=(0.5*(v11*(v22*v44)))+((2.*(v12*(v13*(v23*v44))))+((-0.5*((v23**2)*v44))+aux70));
    aux72=(0.25*(v11*v44))+((-0.5*((v12**2)*v44))+((-0.5*((v13**2)*v44))+((0.25*(v22*v44))+aux71)));
    aux73=(-0.5*(v11*(v34**2)))+(((v12**2)*(v34**2))+((-0.5*(v22*(v34**2)))+((0.125*v44)+aux72)));
    aux74=(-2.*(v12*(v13*(v24*v34))))+((v23*(v24*v34))+((2.*(v11*(v23*(v24*v34))))+((-0.25*(v34**2))+aux73)));
    aux75=(v13*(v14*v34))+((2.*(v13*(v14*(v22*v34))))+((-2.*(v12*(v14*(v23*v34))))+aux74));
    aux76=(0.5*(v11*(v22*v33)))+((2.*(v12*(v14*(v24*v33))))+((-0.5*((v24**2)*v33))+aux75));
    aux77=(0.25*(v11*v33))+((-0.5*((v12**2)*v33))+((-0.5*((v14**2)*v33))+((0.25*(v22*v33))+aux76)));
    aux78=(-0.25*(v24**2))+((-0.5*(v11*(v24**2)))+(((v13**2)*(v24**2))+((0.125*v33)+aux77)));
    aux79=((v14**2)*(v23**2))+((v12*(v14*v24))+((-2.*(v13*(v14*(v23*v24))))+aux78));
    aux80=(-0.5*((v14**2)*v22))+((v12*(v13*v23))+((-0.25*(v23**2))+((-0.5*(v11*(v23**2)))+aux79)));
    aux81=(-0.25*(v14**2))+((0.125*v22)+((0.25*(v11*v22))+((-0.5*((v13**2)*v22))+aux80)));
    aux82=(0.0625+((0.125*v11)+((-0.25*(v12**2))+((-0.25*(v13**2))+aux81))))-((v12**2)*(v33*v44));
    aux83=((aux82-(v11*((v23**2)*v44)))-((v13**2)*(v22*v44)))-(v11*(v22*(v34**2)));
    aux84=((aux69-(v12*(v13*v24)))-(v12*(v14*v23)))/((aux83-(v11*((v24**2)*v33)))-((v14**2)*(v22*v33)));
    aux85=(0.5*(v12*v24))+((-0.5*(v14*v33))+((v12*(v24*v33))+((0.5*(v13*v34))+(v13*(v22*v34)))));
    aux86=((-0.25*v14)+((-0.5*(v14*v22))+((v14*(v23**2))+aux85)))-(v12*(v23*v34));
    aux87=(0.25*(v33*v44))+((0.5*(v11*(v33*v44)))+((0.5*(v22*(v33*v44)))+(v11*(v22*(v33*v44)))));
    aux88=(0.5*(v11*(v22*v44)))+((2.*(v12*(v13*(v23*v44))))+((-0.5*((v23**2)*v44))+aux87));
    aux89=(0.25*(v11*v44))+((-0.5*((v12**2)*v44))+((-0.5*((v13**2)*v44))+((0.25*(v22*v44))+aux88)));
    aux90=(-0.5*(v11*(v34**2)))+(((v12**2)*(v34**2))+((-0.5*(v22*(v34**2)))+((0.125*v44)+aux89)));
    aux91=(-2.*(v12*(v13*(v24*v34))))+((v23*(v24*v34))+((2.*(v11*(v23*(v24*v34))))+((-0.25*(v34**2))+aux90)));
    aux92=(v13*(v14*v34))+((2.*(v13*(v14*(v22*v34))))+((-2.*(v12*(v14*(v23*v34))))+aux91));
    aux93=(0.5*(v11*(v22*v33)))+((2.*(v12*(v14*(v24*v33))))+((-0.5*((v24**2)*v33))+aux92));
    aux94=(0.25*(v11*v33))+((-0.5*((v12**2)*v33))+((-0.5*((v14**2)*v33))+((0.25*(v22*v33))+aux93)));
    aux95=(-0.25*(v24**2))+((-0.5*(v11*(v24**2)))+(((v13**2)*(v24**2))+((0.125*v33)+aux94)));
    aux96=((v14**2)*(v23**2))+((v12*(v14*v24))+((-2.*(v13*(v14*(v23*v24))))+aux95));
    aux97=(-0.5*((v14**2)*v22))+((v12*(v13*v23))+((-0.25*(v23**2))+((-0.5*(v11*(v23**2)))+aux96)));
    aux98=(-0.25*(v14**2))+((0.125*v22)+((0.25*(v11*v22))+((-0.5*((v13**2)*v22))+aux97)));
    aux99=(0.0625+((0.125*v11)+((-0.25*(v12**2))+((-0.25*(v13**2))+aux98))))-((v12**2)*(v33*v44));
    aux100=((aux99-(v11*((v23**2)*v44)))-((v13**2)*(v22*v44)))-(v11*(v22*(v34**2)));
    aux101=((aux86-(v14*(v22*v33)))-(v13*(v23*v24)))/((aux100-(v11*((v24**2)*v33)))-((v14**2)*(v22*v33)));
    output=(0.5*(((0.+-0.5j)*(aux16-aux33))-aux50))+(0.5*(((0.+0.5j)*(aux67-aux84))-aux101));
    return output

def coeffscuadraticos22(V,B):
    v11,v12,v13,v14=separate(V,0)
    v21,v22,v23,v24=separate(V,1)
    v31,v32,v33,v34=separate(V,2)
    v41,v42,v43,v44=separate(V,3)
    b11,b12,b13,b14=separate(B,0)
    b21,b22,b23,b24=separate(B,1)
    b31,b32,b33,b34=separate(B,2)
    b41,b42,b43,b44=separate(B,3)
    aux0=((v13**2)*v24)+((v12*(v14*v33))+((-0.5*(v24*v33))+((0.5*(v23*v34))+(v11*(v23*v34)))));
    aux1=((0.5*(v12*v14))+((-0.25*v24)+((-0.5*(v11*v24))+aux0)))-(v12*(v13*v34));
    aux2=(0.25*(v33*v44))+((0.5*(v11*(v33*v44)))+((0.5*(v22*(v33*v44)))+(v11*(v22*(v33*v44)))));
    aux3=(0.5*(v11*(v22*v44)))+((2.*(v12*(v13*(v23*v44))))+((-0.5*((v23**2)*v44))+aux2));
    aux4=(0.25*(v11*v44))+((-0.5*((v12**2)*v44))+((-0.5*((v13**2)*v44))+((0.25*(v22*v44))+aux3)));
    aux5=(-0.5*(v11*(v34**2)))+(((v12**2)*(v34**2))+((-0.5*(v22*(v34**2)))+((0.125*v44)+aux4)));
    aux6=(-2.*(v12*(v13*(v24*v34))))+((v23*(v24*v34))+((2.*(v11*(v23*(v24*v34))))+((-0.25*(v34**2))+aux5)));
    aux7=(v13*(v14*v34))+((2.*(v13*(v14*(v22*v34))))+((-2.*(v12*(v14*(v23*v34))))+aux6));
    aux8=(0.5*(v11*(v22*v33)))+((2.*(v12*(v14*(v24*v33))))+((-0.5*((v24**2)*v33))+aux7));
    aux9=(0.25*(v11*v33))+((-0.5*((v12**2)*v33))+((-0.5*((v14**2)*v33))+((0.25*(v22*v33))+aux8)));
    aux10=(-0.25*(v24**2))+((-0.5*(v11*(v24**2)))+(((v13**2)*(v24**2))+((0.125*v33)+aux9)));
    aux11=((v14**2)*(v23**2))+((v12*(v14*v24))+((-2.*(v13*(v14*(v23*v24))))+aux10));
    aux12=(-0.5*((v14**2)*v22))+((v12*(v13*v23))+((-0.25*(v23**2))+((-0.5*(v11*(v23**2)))+aux11)));
    aux13=(-0.25*(v14**2))+((0.125*v22)+((0.25*(v11*v22))+((-0.5*((v13**2)*v22))+aux12)));
    aux14=(0.0625+((0.125*v11)+((-0.25*(v12**2))+((-0.25*(v13**2))+aux13))))-((v12**2)*(v33*v44));
    aux15=((aux14-(v11*((v23**2)*v44)))-((v13**2)*(v22*v44)))-(v11*(v22*(v34**2)));
    aux16=((0.+-1.j)*((aux1-(v11*(v24*v33)))-(v13*(v14*v23))))/((aux15-(v11*((v24**2)*v33)))-((v14**2)*(v22*v33)));
    aux17=(-0.5*(v34**2))+((0.25*v44)+((0.5*(v11*v44))+((0.5*(v33*v44))+(v11*(v33*v44)))));
    aux18=(-0.5*(v14**2))+((0.25*v33)+((0.5*(v11*v33))+((2.*(v13*(v14*v34)))+aux17)));
    aux19=((0.125+((0.25*v11)+((-0.5*(v13**2))+aux18)))-((v13**2)*v44))-(v11*(v34**2));
    aux20=(0.25*(v33*v44))+((0.5*(v11*(v33*v44)))+((0.5*(v22*(v33*v44)))+(v11*(v22*(v33*v44)))));
    aux21=(0.5*(v11*(v22*v44)))+((2.*(v12*(v13*(v23*v44))))+((-0.5*((v23**2)*v44))+aux20));
    aux22=(0.25*(v11*v44))+((-0.5*((v12**2)*v44))+((-0.5*((v13**2)*v44))+((0.25*(v22*v44))+aux21)));
    aux23=(-0.5*(v11*(v34**2)))+(((v12**2)*(v34**2))+((-0.5*(v22*(v34**2)))+((0.125*v44)+aux22)));
    aux24=(-2.*(v12*(v13*(v24*v34))))+((v23*(v24*v34))+((2.*(v11*(v23*(v24*v34))))+((-0.25*(v34**2))+aux23)));
    aux25=(v13*(v14*v34))+((2.*(v13*(v14*(v22*v34))))+((-2.*(v12*(v14*(v23*v34))))+aux24));
    aux26=(0.5*(v11*(v22*v33)))+((2.*(v12*(v14*(v24*v33))))+((-0.5*((v24**2)*v33))+aux25));
    aux27=(0.25*(v11*v33))+((-0.5*((v12**2)*v33))+((-0.5*((v14**2)*v33))+((0.25*(v22*v33))+aux26)));
    aux28=(-0.25*(v24**2))+((-0.5*(v11*(v24**2)))+(((v13**2)*(v24**2))+((0.125*v33)+aux27)));
    aux29=((v14**2)*(v23**2))+((v12*(v14*v24))+((-2.*(v13*(v14*(v23*v24))))+aux28));
    aux30=(-0.5*((v14**2)*v22))+((v12*(v13*v23))+((-0.25*(v23**2))+((-0.5*(v11*(v23**2)))+aux29)));
    aux31=(-0.25*(v14**2))+((0.125*v22)+((0.25*(v11*v22))+((-0.5*((v13**2)*v22))+aux30)));
    aux32=(0.0625+((0.125*v11)+((-0.25*(v12**2))+((-0.25*(v13**2))+aux31))))-((v12**2)*(v33*v44));
    aux33=((aux32-(v11*((v23**2)*v44)))-((v13**2)*(v22*v44)))-(v11*(v22*(v34**2)));
    aux34=(aux19-((v14**2)*v33))/((aux33-(v11*((v24**2)*v33)))-((v14**2)*(v22*v33)));
    aux35=((b13**2)*b24)+((b12*(b14*b33))+((-0.5*(b24*b33))+((0.5*(b23*b34))+(b11*(b23*b34)))));
    aux36=((0.5*(b12*b14))+((-0.25*b24)+((-0.5*(b11*b24))+aux35)))-(b12*(b13*b34));
    aux37=(0.25*(b33*b44))+((0.5*(b11*(b33*b44)))+((0.5*(b22*(b33*b44)))+(b11*(b22*(b33*b44)))));
    aux38=(0.5*(b11*(b22*b44)))+((2.*(b12*(b13*(b23*b44))))+((-0.5*((b23**2)*b44))+aux37));
    aux39=(0.25*(b11*b44))+((-0.5*((b12**2)*b44))+((-0.5*((b13**2)*b44))+((0.25*(b22*b44))+aux38)));
    aux40=(-0.5*(b11*(b34**2)))+(((b12**2)*(b34**2))+((-0.5*(b22*(b34**2)))+((0.125*b44)+aux39)));
    aux41=(-2.*(b12*(b13*(b24*b34))))+((b23*(b24*b34))+((2.*(b11*(b23*(b24*b34))))+((-0.25*(b34**2))+aux40)));
    aux42=(b13*(b14*b34))+((2.*(b13*(b14*(b22*b34))))+((-2.*(b12*(b14*(b23*b34))))+aux41));
    aux43=(0.5*(b11*(b22*b33)))+((2.*(b12*(b14*(b24*b33))))+((-0.5*((b24**2)*b33))+aux42));
    aux44=(0.25*(b11*b33))+((-0.5*((b12**2)*b33))+((-0.5*((b14**2)*b33))+((0.25*(b22*b33))+aux43)));
    aux45=(-0.25*(b24**2))+((-0.5*(b11*(b24**2)))+(((b13**2)*(b24**2))+((0.125*b33)+aux44)));
    aux46=((b14**2)*(b23**2))+((b12*(b14*b24))+((-2.*(b13*(b14*(b23*b24))))+aux45));
    aux47=(-0.5*((b14**2)*b22))+((b12*(b13*b23))+((-0.25*(b23**2))+((-0.5*(b11*(b23**2)))+aux46)));
    aux48=(-0.25*(b14**2))+((0.125*b22)+((0.25*(b11*b22))+((-0.5*((b13**2)*b22))+aux47)));
    aux49=(0.0625+((0.125*b11)+((-0.25*(b12**2))+((-0.25*(b13**2))+aux48))))-((b12**2)*(b33*b44));
    aux50=((aux49-(b11*((b23**2)*b44)))-((b13**2)*(b22*b44)))-(b11*(b22*(b34**2)));
    aux51=((0.+1.j)*((aux36-(b11*(b24*b33)))-(b13*(b14*b23))))/((aux50-(b11*((b24**2)*b33)))-((b14**2)*(b22*b33)));
    aux52=(-0.5*(b34**2))+((0.25*b44)+((0.5*(b11*b44))+((0.5*(b33*b44))+(b11*(b33*b44)))));
    aux53=(-0.5*(b14**2))+((0.25*b33)+((0.5*(b11*b33))+((2.*(b13*(b14*b34)))+aux52)));
    aux54=((0.125+((0.25*b11)+((-0.5*(b13**2))+aux53)))-((b13**2)*b44))-(b11*(b34**2));
    aux55=(0.25*(b33*b44))+((0.5*(b11*(b33*b44)))+((0.5*(b22*(b33*b44)))+(b11*(b22*(b33*b44)))));
    aux56=(0.5*(b11*(b22*b44)))+((2.*(b12*(b13*(b23*b44))))+((-0.5*((b23**2)*b44))+aux55));
    aux57=(0.25*(b11*b44))+((-0.5*((b12**2)*b44))+((-0.5*((b13**2)*b44))+((0.25*(b22*b44))+aux56)));
    aux58=(-0.5*(b11*(b34**2)))+(((b12**2)*(b34**2))+((-0.5*(b22*(b34**2)))+((0.125*b44)+aux57)));
    aux59=(-2.*(b12*(b13*(b24*b34))))+((b23*(b24*b34))+((2.*(b11*(b23*(b24*b34))))+((-0.25*(b34**2))+aux58)));
    aux60=(b13*(b14*b34))+((2.*(b13*(b14*(b22*b34))))+((-2.*(b12*(b14*(b23*b34))))+aux59));
    aux61=(0.5*(b11*(b22*b33)))+((2.*(b12*(b14*(b24*b33))))+((-0.5*((b24**2)*b33))+aux60));
    aux62=(0.25*(b11*b33))+((-0.5*((b12**2)*b33))+((-0.5*((b14**2)*b33))+((0.25*(b22*b33))+aux61)));
    aux63=(-0.25*(b24**2))+((-0.5*(b11*(b24**2)))+(((b13**2)*(b24**2))+((0.125*b33)+aux62)));
    aux64=((b14**2)*(b23**2))+((b12*(b14*b24))+((-2.*(b13*(b14*(b23*b24))))+aux63));
    aux65=(-0.5*((b14**2)*b22))+((b12*(b13*b23))+((-0.25*(b23**2))+((-0.5*(b11*(b23**2)))+aux64)));
    aux66=(-0.25*(b14**2))+((0.125*b22)+((0.25*(b11*b22))+((-0.5*((b13**2)*b22))+aux65)));
    aux67=(0.0625+((0.125*b11)+((-0.25*(b12**2))+((-0.25*(b13**2))+aux66))))-((b12**2)*(b33*b44));
    aux68=((aux67-(b11*((b23**2)*b44)))-((b13**2)*(b22*b44)))-(b11*(b22*(b34**2)));
    aux69=(aux54-((b14**2)*b33))/((aux68-(b11*((b24**2)*b33)))-((b14**2)*(b22*b33)));
    output=(0.25*(aux16-aux34))+(-0.25*(np.conjugate((aux51+aux69))));
    return output

def coeffscuadraticos23(V,B):
    v11,v12,v13,v14=separate(V,0)
    v21,v22,v23,v24=separate(V,1)
    v31,v32,v33,v34=separate(V,2)
    v41,v42,v43,v44=separate(V,3)
    b11,b12,b13,b14=separate(B,0)
    b21,b22,b23,b24=separate(B,1)
    b31,b32,b33,b34=separate(B,2)
    b41,b42,b43,b44=separate(B,3)
    aux0=(-0.5*(b12*b33))+((b14*(b24*b33))+((b12*(b34**2))+((-0.5*(b12*b44))+(b13*(b23*b44)))));
    aux1=(((-0.25*b12)+((0.5*(b13*b23))+((0.5*(b14*b24))+aux0)))-(b12*(b33*b44)))-(b13*(b24*b34));
    aux2=(0.25*(b33*b44))+((0.5*(b11*(b33*b44)))+((0.5*(b22*(b33*b44)))+(b11*(b22*(b33*b44)))));
    aux3=(0.5*(b11*(b22*b44)))+((2.*(b12*(b13*(b23*b44))))+((-0.5*((b23**2)*b44))+aux2));
    aux4=(0.25*(b11*b44))+((-0.5*((b12**2)*b44))+((-0.5*((b13**2)*b44))+((0.25*(b22*b44))+aux3)));
    aux5=(-0.5*(b11*(b34**2)))+(((b12**2)*(b34**2))+((-0.5*(b22*(b34**2)))+((0.125*b44)+aux4)));
    aux6=(-2.*(b12*(b13*(b24*b34))))+((b23*(b24*b34))+((2.*(b11*(b23*(b24*b34))))+((-0.25*(b34**2))+aux5)));
    aux7=(b13*(b14*b34))+((2.*(b13*(b14*(b22*b34))))+((-2.*(b12*(b14*(b23*b34))))+aux6));
    aux8=(0.5*(b11*(b22*b33)))+((2.*(b12*(b14*(b24*b33))))+((-0.5*((b24**2)*b33))+aux7));
    aux9=(0.25*(b11*b33))+((-0.5*((b12**2)*b33))+((-0.5*((b14**2)*b33))+((0.25*(b22*b33))+aux8)));
    aux10=(-0.25*(b24**2))+((-0.5*(b11*(b24**2)))+(((b13**2)*(b24**2))+((0.125*b33)+aux9)));
    aux11=((b14**2)*(b23**2))+((b12*(b14*b24))+((-2.*(b13*(b14*(b23*b24))))+aux10));
    aux12=(-0.5*((b14**2)*b22))+((b12*(b13*b23))+((-0.25*(b23**2))+((-0.5*(b11*(b23**2)))+aux11)));
    aux13=(-0.25*(b14**2))+((0.125*b22)+((0.25*(b11*b22))+((-0.5*((b13**2)*b22))+aux12)));
    aux14=(0.0625+((0.125*b11)+((-0.25*(b12**2))+((-0.25*(b13**2))+aux13))))-((b12**2)*(b33*b44));
    aux15=((aux14-(b11*((b23**2)*b44)))-((b13**2)*(b22*b44)))-(b11*(b22*(b34**2)));
    aux16=(aux1-(b14*(b23*b34)))/((aux15-(b11*((b24**2)*b33)))-((b14**2)*(b22*b33)));
    aux17=(b11*(b23*b24))+((-0.25*b34)+((-0.5*(b11*b34))+(((b12**2)*b34)+(-0.5*(b22*b34)))));
    aux18=((0.5*(b13*b14))+((b13*(b14*b22))+((0.5*(b23*b24))+aux17)))-(b11*(b22*b34));
    aux19=(0.25*(b33*b44))+((0.5*(b11*(b33*b44)))+((0.5*(b22*(b33*b44)))+(b11*(b22*(b33*b44)))));
    aux20=(0.5*(b11*(b22*b44)))+((2.*(b12*(b13*(b23*b44))))+((-0.5*((b23**2)*b44))+aux19));
    aux21=(0.25*(b11*b44))+((-0.5*((b12**2)*b44))+((-0.5*((b13**2)*b44))+((0.25*(b22*b44))+aux20)));
    aux22=(-0.5*(b11*(b34**2)))+(((b12**2)*(b34**2))+((-0.5*(b22*(b34**2)))+((0.125*b44)+aux21)));
    aux23=(-2.*(b12*(b13*(b24*b34))))+((b23*(b24*b34))+((2.*(b11*(b23*(b24*b34))))+((-0.25*(b34**2))+aux22)));
    aux24=(b13*(b14*b34))+((2.*(b13*(b14*(b22*b34))))+((-2.*(b12*(b14*(b23*b34))))+aux23));
    aux25=(0.5*(b11*(b22*b33)))+((2.*(b12*(b14*(b24*b33))))+((-0.5*((b24**2)*b33))+aux24));
    aux26=(0.25*(b11*b33))+((-0.5*((b12**2)*b33))+((-0.5*((b14**2)*b33))+((0.25*(b22*b33))+aux25)));
    aux27=(-0.25*(b24**2))+((-0.5*(b11*(b24**2)))+(((b13**2)*(b24**2))+((0.125*b33)+aux26)));
    aux28=((b14**2)*(b23**2))+((b12*(b14*b24))+((-2.*(b13*(b14*(b23*b24))))+aux27));
    aux29=(-0.5*((b14**2)*b22))+((b12*(b13*b23))+((-0.25*(b23**2))+((-0.5*(b11*(b23**2)))+aux28)));
    aux30=(-0.25*(b14**2))+((0.125*b22)+((0.25*(b11*b22))+((-0.5*((b13**2)*b22))+aux29)));
    aux31=(0.0625+((0.125*b11)+((-0.25*(b12**2))+((-0.25*(b13**2))+aux30))))-((b12**2)*(b33*b44));
    aux32=((aux31-(b11*((b23**2)*b44)))-((b13**2)*(b22*b44)))-(b11*(b22*(b34**2)));
    aux33=((aux18-(b12*(b13*b24)))-(b12*(b14*b23)))/((aux32-(b11*((b24**2)*b33)))-((b14**2)*(b22*b33)));
    aux34=((b14**2)*b23)+((0.5*(b24*b34))+((b11*(b24*b34))+((b12*(b13*b44))+(-0.5*(b23*b44)))));
    aux35=((0.5*(b12*b13))+((-0.25*b23)+((-0.5*(b11*b23))+aux34)))-(b11*(b23*b44));
    aux36=(0.25*(b33*b44))+((0.5*(b11*(b33*b44)))+((0.5*(b22*(b33*b44)))+(b11*(b22*(b33*b44)))));
    aux37=(0.5*(b11*(b22*b44)))+((2.*(b12*(b13*(b23*b44))))+((-0.5*((b23**2)*b44))+aux36));
    aux38=(0.25*(b11*b44))+((-0.5*((b12**2)*b44))+((-0.5*((b13**2)*b44))+((0.25*(b22*b44))+aux37)));
    aux39=(-0.5*(b11*(b34**2)))+(((b12**2)*(b34**2))+((-0.5*(b22*(b34**2)))+((0.125*b44)+aux38)));
    aux40=(-2.*(b12*(b13*(b24*b34))))+((b23*(b24*b34))+((2.*(b11*(b23*(b24*b34))))+((-0.25*(b34**2))+aux39)));
    aux41=(b13*(b14*b34))+((2.*(b13*(b14*(b22*b34))))+((-2.*(b12*(b14*(b23*b34))))+aux40));
    aux42=(0.5*(b11*(b22*b33)))+((2.*(b12*(b14*(b24*b33))))+((-0.5*((b24**2)*b33))+aux41));
    aux43=(0.25*(b11*b33))+((-0.5*((b12**2)*b33))+((-0.5*((b14**2)*b33))+((0.25*(b22*b33))+aux42)));
    aux44=(-0.25*(b24**2))+((-0.5*(b11*(b24**2)))+(((b13**2)*(b24**2))+((0.125*b33)+aux43)));
    aux45=((b14**2)*(b23**2))+((b12*(b14*b24))+((-2.*(b13*(b14*(b23*b24))))+aux44));
    aux46=(-0.5*((b14**2)*b22))+((b12*(b13*b23))+((-0.25*(b23**2))+((-0.5*(b11*(b23**2)))+aux45)));
    aux47=(-0.25*(b14**2))+((0.125*b22)+((0.25*(b11*b22))+((-0.5*((b13**2)*b22))+aux46)));
    aux48=(0.0625+((0.125*b11)+((-0.25*(b12**2))+((-0.25*(b13**2))+aux47))))-((b12**2)*(b33*b44));
    aux49=((aux48-(b11*((b23**2)*b44)))-((b13**2)*(b22*b44)))-(b11*(b22*(b34**2)));
    aux50=((aux35-(b12*(b14*b34)))-(b13*(b14*b24)))/((aux49-(b11*((b24**2)*b33)))-((b14**2)*(b22*b33)));
    aux51=(-0.5*(v12*v33))+((v14*(v24*v33))+((v12*(v34**2))+((-0.5*(v12*v44))+(v13*(v23*v44)))));
    aux52=((-0.25*v12)+((0.5*(v13*v23))+((0.5*(v14*v24))+aux51)))-(v12*(v33*v44));
    aux53=(0.25*(v33*v44))+((0.5*(v11*(v33*v44)))+((0.5*(v22*(v33*v44)))+(v11*(v22*(v33*v44)))));
    aux54=(0.5*(v11*(v22*v44)))+((2.*(v12*(v13*(v23*v44))))+((-0.5*((v23**2)*v44))+aux53));
    aux55=(0.25*(v11*v44))+((-0.5*((v12**2)*v44))+((-0.5*((v13**2)*v44))+((0.25*(v22*v44))+aux54)));
    aux56=(-0.5*(v11*(v34**2)))+(((v12**2)*(v34**2))+((-0.5*(v22*(v34**2)))+((0.125*v44)+aux55)));
    aux57=(-2.*(v12*(v13*(v24*v34))))+((v23*(v24*v34))+((2.*(v11*(v23*(v24*v34))))+((-0.25*(v34**2))+aux56)));
    aux58=(v13*(v14*v34))+((2.*(v13*(v14*(v22*v34))))+((-2.*(v12*(v14*(v23*v34))))+aux57));
    aux59=(0.5*(v11*(v22*v33)))+((2.*(v12*(v14*(v24*v33))))+((-0.5*((v24**2)*v33))+aux58));
    aux60=(0.25*(v11*v33))+((-0.5*((v12**2)*v33))+((-0.5*((v14**2)*v33))+((0.25*(v22*v33))+aux59)));
    aux61=(-0.25*(v24**2))+((-0.5*(v11*(v24**2)))+(((v13**2)*(v24**2))+((0.125*v33)+aux60)));
    aux62=((v14**2)*(v23**2))+((v12*(v14*v24))+((-2.*(v13*(v14*(v23*v24))))+aux61));
    aux63=(-0.5*((v14**2)*v22))+((v12*(v13*v23))+((-0.25*(v23**2))+((-0.5*(v11*(v23**2)))+aux62)));
    aux64=(-0.25*(v14**2))+((0.125*v22)+((0.25*(v11*v22))+((-0.5*((v13**2)*v22))+aux63)));
    aux65=(0.0625+((0.125*v11)+((-0.25*(v12**2))+((-0.25*(v13**2))+aux64))))-((v12**2)*(v33*v44));
    aux66=((aux65-(v11*((v23**2)*v44)))-((v13**2)*(v22*v44)))-(v11*(v22*(v34**2)));
    aux67=((aux52-(v13*(v24*v34)))-(v14*(v23*v34)))/((aux66-(v11*((v24**2)*v33)))-((v14**2)*(v22*v33)));
    aux68=(v11*(v23*v24))+((-0.25*v34)+((-0.5*(v11*v34))+(((v12**2)*v34)+(-0.5*(v22*v34)))));
    aux69=((0.5*(v13*v14))+((v13*(v14*v22))+((0.5*(v23*v24))+aux68)))-(v11*(v22*v34));
    aux70=(0.25*(v33*v44))+((0.5*(v11*(v33*v44)))+((0.5*(v22*(v33*v44)))+(v11*(v22*(v33*v44)))));
    aux71=(0.5*(v11*(v22*v44)))+((2.*(v12*(v13*(v23*v44))))+((-0.5*((v23**2)*v44))+aux70));
    aux72=(0.25*(v11*v44))+((-0.5*((v12**2)*v44))+((-0.5*((v13**2)*v44))+((0.25*(v22*v44))+aux71)));
    aux73=(-0.5*(v11*(v34**2)))+(((v12**2)*(v34**2))+((-0.5*(v22*(v34**2)))+((0.125*v44)+aux72)));
    aux74=(-2.*(v12*(v13*(v24*v34))))+((v23*(v24*v34))+((2.*(v11*(v23*(v24*v34))))+((-0.25*(v34**2))+aux73)));
    aux75=(v13*(v14*v34))+((2.*(v13*(v14*(v22*v34))))+((-2.*(v12*(v14*(v23*v34))))+aux74));
    aux76=(0.5*(v11*(v22*v33)))+((2.*(v12*(v14*(v24*v33))))+((-0.5*((v24**2)*v33))+aux75));
    aux77=(0.25*(v11*v33))+((-0.5*((v12**2)*v33))+((-0.5*((v14**2)*v33))+((0.25*(v22*v33))+aux76)));
    aux78=(-0.25*(v24**2))+((-0.5*(v11*(v24**2)))+(((v13**2)*(v24**2))+((0.125*v33)+aux77)));
    aux79=((v14**2)*(v23**2))+((v12*(v14*v24))+((-2.*(v13*(v14*(v23*v24))))+aux78));
    aux80=(-0.5*((v14**2)*v22))+((v12*(v13*v23))+((-0.25*(v23**2))+((-0.5*(v11*(v23**2)))+aux79)));
    aux81=(-0.25*(v14**2))+((0.125*v22)+((0.25*(v11*v22))+((-0.5*((v13**2)*v22))+aux80)));
    aux82=(0.0625+((0.125*v11)+((-0.25*(v12**2))+((-0.25*(v13**2))+aux81))))-((v12**2)*(v33*v44));
    aux83=((aux82-(v11*((v23**2)*v44)))-((v13**2)*(v22*v44)))-(v11*(v22*(v34**2)));
    aux84=((aux69-(v12*(v13*v24)))-(v12*(v14*v23)))/((aux83-(v11*((v24**2)*v33)))-((v14**2)*(v22*v33)));
    aux85=((v14**2)*v23)+((0.5*(v24*v34))+((v11*(v24*v34))+((v12*(v13*v44))+(-0.5*(v23*v44)))));
    aux86=((0.5*(v12*v13))+((-0.25*v23)+((-0.5*(v11*v23))+aux85)))-(v11*(v23*v44));
    aux87=(0.25*(v33*v44))+((0.5*(v11*(v33*v44)))+((0.5*(v22*(v33*v44)))+(v11*(v22*(v33*v44)))));
    aux88=(0.5*(v11*(v22*v44)))+((2.*(v12*(v13*(v23*v44))))+((-0.5*((v23**2)*v44))+aux87));
    aux89=(0.25*(v11*v44))+((-0.5*((v12**2)*v44))+((-0.5*((v13**2)*v44))+((0.25*(v22*v44))+aux88)));
    aux90=(-0.5*(v11*(v34**2)))+(((v12**2)*(v34**2))+((-0.5*(v22*(v34**2)))+((0.125*v44)+aux89)));
    aux91=(-2.*(v12*(v13*(v24*v34))))+((v23*(v24*v34))+((2.*(v11*(v23*(v24*v34))))+((-0.25*(v34**2))+aux90)));
    aux92=(v13*(v14*v34))+((2.*(v13*(v14*(v22*v34))))+((-2.*(v12*(v14*(v23*v34))))+aux91));
    aux93=(0.5*(v11*(v22*v33)))+((2.*(v12*(v14*(v24*v33))))+((-0.5*((v24**2)*v33))+aux92));
    aux94=(0.25*(v11*v33))+((-0.5*((v12**2)*v33))+((-0.5*((v14**2)*v33))+((0.25*(v22*v33))+aux93)));
    aux95=(-0.25*(v24**2))+((-0.5*(v11*(v24**2)))+(((v13**2)*(v24**2))+((0.125*v33)+aux94)));
    aux96=((v14**2)*(v23**2))+((v12*(v14*v24))+((-2.*(v13*(v14*(v23*v24))))+aux95));
    aux97=(-0.5*((v14**2)*v22))+((v12*(v13*v23))+((-0.25*(v23**2))+((-0.5*(v11*(v23**2)))+aux96)));
    aux98=(-0.25*(v14**2))+((0.125*v22)+((0.25*(v11*v22))+((-0.5*((v13**2)*v22))+aux97)));
    aux99=(0.0625+((0.125*v11)+((-0.25*(v12**2))+((-0.25*(v13**2))+aux98))))-((v12**2)*(v33*v44));
    aux100=((aux99-(v11*((v23**2)*v44)))-((v13**2)*(v22*v44)))-(v11*(v22*(v34**2)));
    aux101=((aux86-(v12*(v14*v34)))-(v13*(v14*v24)))/((aux100-(v11*((v24**2)*v33)))-((v14**2)*(v22*v33)));
    output=(0.5*(((0.+-0.5j)*(aux16-aux33))-aux50))+(0.5*(((0.+0.5j)*(aux67-aux84))-aux101));
    return output


def coeffscuadraticos24(V,B):
    v11,v12,v13,v14=separate(V,0)
    v21,v22,v23,v24=separate(V,1)
    v31,v32,v33,v34=separate(V,2)
    v41,v42,v43,v44=separate(V,3)
    b11,b12,b13,b14=separate(B,0)
    b21,b22,b23,b24=separate(B,1)
    b31,b32,b33,b34=separate(B,2)
    b41,b42,b43,b44=separate(B,3)
    aux0=(-0.5*(b34**2))+((0.25*b44)+((0.5*(b11*b44))+((0.5*(b33*b44))+(b11*(b33*b44)))));
    aux1=(-0.5*(b14**2))+((0.25*b33)+((0.5*(b11*b33))+((2.*(b13*(b14*b34)))+aux0)));
    aux2=((0.125+((0.25*b11)+((-0.5*(b13**2))+aux1)))-((b13**2)*b44))-(b11*(b34**2));
    aux3=(0.25*(b33*b44))+((0.5*(b11*(b33*b44)))+((0.5*(b22*(b33*b44)))+(b11*(b22*(b33*b44)))));
    aux4=(0.5*(b11*(b22*b44)))+((2.*(b12*(b13*(b23*b44))))+((-0.5*((b23**2)*b44))+aux3));
    aux5=(0.25*(b11*b44))+((-0.5*((b12**2)*b44))+((-0.5*((b13**2)*b44))+((0.25*(b22*b44))+aux4)));
    aux6=(-0.5*(b11*(b34**2)))+(((b12**2)*(b34**2))+((-0.5*(b22*(b34**2)))+((0.125*b44)+aux5)));
    aux7=(-2.*(b12*(b13*(b24*b34))))+((b23*(b24*b34))+((2.*(b11*(b23*(b24*b34))))+((-0.25*(b34**2))+aux6)));
    aux8=(b13*(b14*b34))+((2.*(b13*(b14*(b22*b34))))+((-2.*(b12*(b14*(b23*b34))))+aux7));
    aux9=(0.5*(b11*(b22*b33)))+((2.*(b12*(b14*(b24*b33))))+((-0.5*((b24**2)*b33))+aux8));
    aux10=(0.25*(b11*b33))+((-0.5*((b12**2)*b33))+((-0.5*((b14**2)*b33))+((0.25*(b22*b33))+aux9)));
    aux11=(-0.25*(b24**2))+((-0.5*(b11*(b24**2)))+(((b13**2)*(b24**2))+((0.125*b33)+aux10)));
    aux12=((b14**2)*(b23**2))+((b12*(b14*b24))+((-2.*(b13*(b14*(b23*b24))))+aux11));
    aux13=(-0.5*((b14**2)*b22))+((b12*(b13*b23))+((-0.25*(b23**2))+((-0.5*(b11*(b23**2)))+aux12)));
    aux14=(-0.25*(b14**2))+((0.125*b22)+((0.25*(b11*b22))+((-0.5*((b13**2)*b22))+aux13)));
    aux15=(0.0625+((0.125*b11)+((-0.25*(b12**2))+((-0.25*(b13**2))+aux14))))-((b12**2)*(b33*b44));
    aux16=((aux15-(b11*((b23**2)*b44)))-((b13**2)*(b22*b44)))-(b11*(b22*(b34**2)));
    aux17=(aux2-((b14**2)*b33))/((aux16-(b11*((b24**2)*b33)))-((b14**2)*(b22*b33)));
    aux18=(-0.5*(b23**2))+((0.25*b33)+((0.5*(b11*b33))+((0.5*(b22*b33))+(b11*(b22*b33)))));
    aux19=(-0.5*(b13**2))+((0.25*b22)+((0.5*(b11*b22))+((2.*(b12*(b13*b23)))+aux18)));
    aux20=((0.125+((0.25*b11)+((-0.5*(b12**2))+aux19)))-((b12**2)*b33))-(b11*(b23**2));
    aux21=(0.25*(b33*b44))+((0.5*(b11*(b33*b44)))+((0.5*(b22*(b33*b44)))+(b11*(b22*(b33*b44)))));
    aux22=(0.5*(b11*(b22*b44)))+((2.*(b12*(b13*(b23*b44))))+((-0.5*((b23**2)*b44))+aux21));
    aux23=(0.25*(b11*b44))+((-0.5*((b12**2)*b44))+((-0.5*((b13**2)*b44))+((0.25*(b22*b44))+aux22)));
    aux24=(-0.5*(b11*(b34**2)))+(((b12**2)*(b34**2))+((-0.5*(b22*(b34**2)))+((0.125*b44)+aux23)));
    aux25=(-2.*(b12*(b13*(b24*b34))))+((b23*(b24*b34))+((2.*(b11*(b23*(b24*b34))))+((-0.25*(b34**2))+aux24)));
    aux26=(b13*(b14*b34))+((2.*(b13*(b14*(b22*b34))))+((-2.*(b12*(b14*(b23*b34))))+aux25));
    aux27=(0.5*(b11*(b22*b33)))+((2.*(b12*(b14*(b24*b33))))+((-0.5*((b24**2)*b33))+aux26));
    aux28=(0.25*(b11*b33))+((-0.5*((b12**2)*b33))+((-0.5*((b14**2)*b33))+((0.25*(b22*b33))+aux27)));
    aux29=(-0.25*(b24**2))+((-0.5*(b11*(b24**2)))+(((b13**2)*(b24**2))+((0.125*b33)+aux28)));
    aux30=((b14**2)*(b23**2))+((b12*(b14*b24))+((-2.*(b13*(b14*(b23*b24))))+aux29));
    aux31=(-0.5*((b14**2)*b22))+((b12*(b13*b23))+((-0.25*(b23**2))+((-0.5*(b11*(b23**2)))+aux30)));
    aux32=(-0.25*(b14**2))+((0.125*b22)+((0.25*(b11*b22))+((-0.5*((b13**2)*b22))+aux31)));
    aux33=(0.0625+((0.125*b11)+((-0.25*(b12**2))+((-0.25*(b13**2))+aux32))))-((b12**2)*(b33*b44));
    aux34=((aux33-(b11*((b23**2)*b44)))-((b13**2)*(b22*b44)))-(b11*(b22*(b34**2)));
    aux35=(aux20-((b13**2)*b22))/((aux34-(b11*((b24**2)*b33)))-((b14**2)*(b22*b33)));
    aux36=((b13**2)*b24)+((b12*(b14*b33))+((-0.5*(b24*b33))+((0.5*(b23*b34))+(b11*(b23*b34)))));
    aux37=((0.5*(b12*b14))+((-0.25*b24)+((-0.5*(b11*b24))+aux36)))-(b12*(b13*b34));
    aux38=(0.25*(b33*b44))+((0.5*(b11*(b33*b44)))+((0.5*(b22*(b33*b44)))+(b11*(b22*(b33*b44)))));
    aux39=(0.5*(b11*(b22*b44)))+((2.*(b12*(b13*(b23*b44))))+((-0.5*((b23**2)*b44))+aux38));
    aux40=(0.25*(b11*b44))+((-0.5*((b12**2)*b44))+((-0.5*((b13**2)*b44))+((0.25*(b22*b44))+aux39)));
    aux41=(-0.5*(b11*(b34**2)))+(((b12**2)*(b34**2))+((-0.5*(b22*(b34**2)))+((0.125*b44)+aux40)));
    aux42=(-2.*(b12*(b13*(b24*b34))))+((b23*(b24*b34))+((2.*(b11*(b23*(b24*b34))))+((-0.25*(b34**2))+aux41)));
    aux43=(b13*(b14*b34))+((2.*(b13*(b14*(b22*b34))))+((-2.*(b12*(b14*(b23*b34))))+aux42));
    aux44=(0.5*(b11*(b22*b33)))+((2.*(b12*(b14*(b24*b33))))+((-0.5*((b24**2)*b33))+aux43));
    aux45=(0.25*(b11*b33))+((-0.5*((b12**2)*b33))+((-0.5*((b14**2)*b33))+((0.25*(b22*b33))+aux44)));
    aux46=(-0.25*(b24**2))+((-0.5*(b11*(b24**2)))+(((b13**2)*(b24**2))+((0.125*b33)+aux45)));
    aux47=((b14**2)*(b23**2))+((b12*(b14*b24))+((-2.*(b13*(b14*(b23*b24))))+aux46));
    aux48=(-0.5*((b14**2)*b22))+((b12*(b13*b23))+((-0.25*(b23**2))+((-0.5*(b11*(b23**2)))+aux47)));
    aux49=(-0.25*(b14**2))+((0.125*b22)+((0.25*(b11*b22))+((-0.5*((b13**2)*b22))+aux48)));
    aux50=(0.0625+((0.125*b11)+((-0.25*(b12**2))+((-0.25*(b13**2))+aux49))))-((b12**2)*(b33*b44));
    aux51=((aux50-(b11*((b23**2)*b44)))-((b13**2)*(b22*b44)))-(b11*(b22*(b34**2)));
    aux52=((aux37-(b11*(b24*b33)))-(b13*(b14*b23)))/((aux51-(b11*((b24**2)*b33)))-((b14**2)*(b22*b33)));
    aux53=(-0.5*(v34**2))+((0.25*v44)+((0.5*(v11*v44))+((0.5*(v33*v44))+(v11*(v33*v44)))));
    aux54=(-0.5*(v14**2))+((0.25*v33)+((0.5*(v11*v33))+((2.*(v13*(v14*v34)))+aux53)));
    aux55=((0.125+((0.25*v11)+((-0.5*(v13**2))+aux54)))-((v13**2)*v44))-(v11*(v34**2));
    aux56=(0.25*(v33*v44))+((0.5*(v11*(v33*v44)))+((0.5*(v22*(v33*v44)))+(v11*(v22*(v33*v44)))));
    aux57=(0.5*(v11*(v22*v44)))+((2.*(v12*(v13*(v23*v44))))+((-0.5*((v23**2)*v44))+aux56));
    aux58=(0.25*(v11*v44))+((-0.5*((v12**2)*v44))+((-0.5*((v13**2)*v44))+((0.25*(v22*v44))+aux57)));
    aux59=(-0.5*(v11*(v34**2)))+(((v12**2)*(v34**2))+((-0.5*(v22*(v34**2)))+((0.125*v44)+aux58)));
    aux60=(-2.*(v12*(v13*(v24*v34))))+((v23*(v24*v34))+((2.*(v11*(v23*(v24*v34))))+((-0.25*(v34**2))+aux59)));
    aux61=(v13*(v14*v34))+((2.*(v13*(v14*(v22*v34))))+((-2.*(v12*(v14*(v23*v34))))+aux60));
    aux62=(0.5*(v11*(v22*v33)))+((2.*(v12*(v14*(v24*v33))))+((-0.5*((v24**2)*v33))+aux61));
    aux63=(0.25*(v11*v33))+((-0.5*((v12**2)*v33))+((-0.5*((v14**2)*v33))+((0.25*(v22*v33))+aux62)));
    aux64=(-0.25*(v24**2))+((-0.5*(v11*(v24**2)))+(((v13**2)*(v24**2))+((0.125*v33)+aux63)));
    aux65=((v14**2)*(v23**2))+((v12*(v14*v24))+((-2.*(v13*(v14*(v23*v24))))+aux64));
    aux66=(-0.5*((v14**2)*v22))+((v12*(v13*v23))+((-0.25*(v23**2))+((-0.5*(v11*(v23**2)))+aux65)));
    aux67=(-0.25*(v14**2))+((0.125*v22)+((0.25*(v11*v22))+((-0.5*((v13**2)*v22))+aux66)));
    aux68=(0.0625+((0.125*v11)+((-0.25*(v12**2))+((-0.25*(v13**2))+aux67))))-((v12**2)*(v33*v44));
    aux69=((aux68-(v11*((v23**2)*v44)))-((v13**2)*(v22*v44)))-(v11*(v22*(v34**2)));
    aux70=(aux55-((v14**2)*v33))/((aux69-(v11*((v24**2)*v33)))-((v14**2)*(v22*v33)));
    aux71=(-0.5*(v23**2))+((0.25*v33)+((0.5*(v11*v33))+((0.5*(v22*v33))+(v11*(v22*v33)))));
    aux72=(-0.5*(v13**2))+((0.25*v22)+((0.5*(v11*v22))+((2.*(v12*(v13*v23)))+aux71)));
    aux73=((0.125+((0.25*v11)+((-0.5*(v12**2))+aux72)))-((v12**2)*v33))-(v11*(v23**2));
    aux74=(0.25*(v33*v44))+((0.5*(v11*(v33*v44)))+((0.5*(v22*(v33*v44)))+(v11*(v22*(v33*v44)))));
    aux75=(0.5*(v11*(v22*v44)))+((2.*(v12*(v13*(v23*v44))))+((-0.5*((v23**2)*v44))+aux74));
    aux76=(0.25*(v11*v44))+((-0.5*((v12**2)*v44))+((-0.5*((v13**2)*v44))+((0.25*(v22*v44))+aux75)));
    aux77=(-0.5*(v11*(v34**2)))+(((v12**2)*(v34**2))+((-0.5*(v22*(v34**2)))+((0.125*v44)+aux76)));
    aux78=(-2.*(v12*(v13*(v24*v34))))+((v23*(v24*v34))+((2.*(v11*(v23*(v24*v34))))+((-0.25*(v34**2))+aux77)));
    aux79=(v13*(v14*v34))+((2.*(v13*(v14*(v22*v34))))+((-2.*(v12*(v14*(v23*v34))))+aux78));
    aux80=(0.5*(v11*(v22*v33)))+((2.*(v12*(v14*(v24*v33))))+((-0.5*((v24**2)*v33))+aux79));
    aux81=(0.25*(v11*v33))+((-0.5*((v12**2)*v33))+((-0.5*((v14**2)*v33))+((0.25*(v22*v33))+aux80)));
    aux82=(-0.25*(v24**2))+((-0.5*(v11*(v24**2)))+(((v13**2)*(v24**2))+((0.125*v33)+aux81)));
    aux83=((v14**2)*(v23**2))+((v12*(v14*v24))+((-2.*(v13*(v14*(v23*v24))))+aux82));
    aux84=(-0.5*((v14**2)*v22))+((v12*(v13*v23))+((-0.25*(v23**2))+((-0.5*(v11*(v23**2)))+aux83)));
    aux85=(-0.25*(v14**2))+((0.125*v22)+((0.25*(v11*v22))+((-0.5*((v13**2)*v22))+aux84)));
    aux86=(0.0625+((0.125*v11)+((-0.25*(v12**2))+((-0.25*(v13**2))+aux85))))-((v12**2)*(v33*v44));
    aux87=((aux86-(v11*((v23**2)*v44)))-((v13**2)*(v22*v44)))-(v11*(v22*(v34**2)));
    aux88=(aux73-((v13**2)*v22))/((aux87-(v11*((v24**2)*v33)))-((v14**2)*(v22*v33)));
    aux89=((v13**2)*v24)+((v12*(v14*v33))+((-0.5*(v24*v33))+((0.5*(v23*v34))+(v11*(v23*v34)))));
    aux90=((0.5*(v12*v14))+((-0.25*v24)+((-0.5*(v11*v24))+aux89)))-(v12*(v13*v34));
    aux91=(0.25*(v33*v44))+((0.5*(v11*(v33*v44)))+((0.5*(v22*(v33*v44)))+(v11*(v22*(v33*v44)))));
    aux92=(0.5*(v11*(v22*v44)))+((2.*(v12*(v13*(v23*v44))))+((-0.5*((v23**2)*v44))+aux91));
    aux93=(0.25*(v11*v44))+((-0.5*((v12**2)*v44))+((-0.5*((v13**2)*v44))+((0.25*(v22*v44))+aux92)));
    aux94=(-0.5*(v11*(v34**2)))+(((v12**2)*(v34**2))+((-0.5*(v22*(v34**2)))+((0.125*v44)+aux93)));
    aux95=(-2.*(v12*(v13*(v24*v34))))+((v23*(v24*v34))+((2.*(v11*(v23*(v24*v34))))+((-0.25*(v34**2))+aux94)));
    aux96=(v13*(v14*v34))+((2.*(v13*(v14*(v22*v34))))+((-2.*(v12*(v14*(v23*v34))))+aux95));
    aux97=(0.5*(v11*(v22*v33)))+((2.*(v12*(v14*(v24*v33))))+((-0.5*((v24**2)*v33))+aux96));
    aux98=(0.25*(v11*v33))+((-0.5*((v12**2)*v33))+((-0.5*((v14**2)*v33))+((0.25*(v22*v33))+aux97)));
    aux99=(-0.25*(v24**2))+((-0.5*(v11*(v24**2)))+(((v13**2)*(v24**2))+((0.125*v33)+aux98)));
    aux100=((v14**2)*(v23**2))+((v12*(v14*v24))+((-2.*(v13*(v14*(v23*v24))))+aux99));
    aux101=(-0.5*((v14**2)*v22))+((v12*(v13*v23))+((-0.25*(v23**2))+((-0.5*(v11*(v23**2)))+aux100)));
    aux102=(-0.25*(v14**2))+((0.125*v22)+((0.25*(v11*v22))+((-0.5*((v13**2)*v22))+aux101)));
    aux103=(0.0625+((0.125*v11)+((-0.25*(v12**2))+((-0.25*(v13**2))+aux102))))-((v12**2)*(v33*v44));
    aux104=((aux103-(v11*((v23**2)*v44)))-((v13**2)*(v22*v44)))-(v11*(v22*(v34**2)));
    aux105=((aux90-(v11*(v24*v33)))-(v13*(v14*v23)))/((aux104-(v11*((v24**2)*v33)))-((v14**2)*(v22*v33)));
    output=(0.5*(((0.+-0.5j)*(aux17-aux35))-aux52))+(0.5*(((0.+0.5j)*(aux70-aux88))-aux105));
    return output


def coeffscuadraticos33(V,B):
    v11,v12,v13,v14=separate(V,0)
    v21,v22,v23,v24=separate(V,1)
    v31,v32,v33,v34=separate(V,2)
    v41,v42,v43,v44=separate(V,3)
    b11,b12,b13,b14=separate(B,0)
    b21,b22,b23,b24=separate(B,1)
    b31,b32,b33,b34=separate(B,2)
    b41,b42,b43,b44=separate(B,3)
    aux0=(v13*(v24**2))+((0.5*(v14*v34))+((v14*(v22*v34))+((-0.5*(v13*v44))+(v12*(v23*v44)))));
    aux1=((-0.25*v13)+((-0.5*(v13*v22))+((0.5*(v12*v23))+aux0)))-(v13*(v22*v44));
    aux2=(0.25*(v33*v44))+((0.5*(v11*(v33*v44)))+((0.5*(v22*(v33*v44)))+(v11*(v22*(v33*v44)))));
    aux3=(0.5*(v11*(v22*v44)))+((2.*(v12*(v13*(v23*v44))))+((-0.5*((v23**2)*v44))+aux2));
    aux4=(0.25*(v11*v44))+((-0.5*((v12**2)*v44))+((-0.5*((v13**2)*v44))+((0.25*(v22*v44))+aux3)));
    aux5=(-0.5*(v11*(v34**2)))+(((v12**2)*(v34**2))+((-0.5*(v22*(v34**2)))+((0.125*v44)+aux4)));
    aux6=(-2.*(v12*(v13*(v24*v34))))+((v23*(v24*v34))+((2.*(v11*(v23*(v24*v34))))+((-0.25*(v34**2))+aux5)));
    aux7=(v13*(v14*v34))+((2.*(v13*(v14*(v22*v34))))+((-2.*(v12*(v14*(v23*v34))))+aux6));
    aux8=(0.5*(v11*(v22*v33)))+((2.*(v12*(v14*(v24*v33))))+((-0.5*((v24**2)*v33))+aux7));
    aux9=(0.25*(v11*v33))+((-0.5*((v12**2)*v33))+((-0.5*((v14**2)*v33))+((0.25*(v22*v33))+aux8)));
    aux10=(-0.25*(v24**2))+((-0.5*(v11*(v24**2)))+(((v13**2)*(v24**2))+((0.125*v33)+aux9)));
    aux11=((v14**2)*(v23**2))+((v12*(v14*v24))+((-2.*(v13*(v14*(v23*v24))))+aux10));
    aux12=(-0.5*((v14**2)*v22))+((v12*(v13*v23))+((-0.25*(v23**2))+((-0.5*(v11*(v23**2)))+aux11)));
    aux13=(-0.25*(v14**2))+((0.125*v22)+((0.25*(v11*v22))+((-0.5*((v13**2)*v22))+aux12)));
    aux14=(0.0625+((0.125*v11)+((-0.25*(v12**2))+((-0.25*(v13**2))+aux13))))-((v12**2)*(v33*v44));
    aux15=((aux14-(v11*((v23**2)*v44)))-((v13**2)*(v22*v44)))-(v11*(v22*(v34**2)));
    aux16=((0.+1.j)*((aux1-(v12*(v24*v34)))-(v14*(v23*v24))))/((aux15-(v11*((v24**2)*v33)))-((v14**2)*(v22*v33)));
    aux17=(-0.5*(v24**2))+((0.25*v44)+((0.5*(v11*v44))+((0.5*(v22*v44))+(v11*(v22*v44)))));
    aux18=(-0.5*(v14**2))+((0.25*v22)+((0.5*(v11*v22))+((2.*(v12*(v14*v24)))+aux17)));
    aux19=((0.125+((0.25*v11)+((-0.5*(v12**2))+aux18)))-((v12**2)*v44))-(v11*(v24**2));
    aux20=(0.25*(v33*v44))+((0.5*(v11*(v33*v44)))+((0.5*(v22*(v33*v44)))+(v11*(v22*(v33*v44)))));
    aux21=(0.5*(v11*(v22*v44)))+((2.*(v12*(v13*(v23*v44))))+((-0.5*((v23**2)*v44))+aux20));
    aux22=(0.25*(v11*v44))+((-0.5*((v12**2)*v44))+((-0.5*((v13**2)*v44))+((0.25*(v22*v44))+aux21)));
    aux23=(-0.5*(v11*(v34**2)))+(((v12**2)*(v34**2))+((-0.5*(v22*(v34**2)))+((0.125*v44)+aux22)));
    aux24=(-2.*(v12*(v13*(v24*v34))))+((v23*(v24*v34))+((2.*(v11*(v23*(v24*v34))))+((-0.25*(v34**2))+aux23)));
    aux25=(v13*(v14*v34))+((2.*(v13*(v14*(v22*v34))))+((-2.*(v12*(v14*(v23*v34))))+aux24));
    aux26=(0.5*(v11*(v22*v33)))+((2.*(v12*(v14*(v24*v33))))+((-0.5*((v24**2)*v33))+aux25));
    aux27=(0.25*(v11*v33))+((-0.5*((v12**2)*v33))+((-0.5*((v14**2)*v33))+((0.25*(v22*v33))+aux26)));
    aux28=(-0.25*(v24**2))+((-0.5*(v11*(v24**2)))+(((v13**2)*(v24**2))+((0.125*v33)+aux27)));
    aux29=((v14**2)*(v23**2))+((v12*(v14*v24))+((-2.*(v13*(v14*(v23*v24))))+aux28));
    aux30=(-0.5*((v14**2)*v22))+((v12*(v13*v23))+((-0.25*(v23**2))+((-0.5*(v11*(v23**2)))+aux29)));
    aux31=(-0.25*(v14**2))+((0.125*v22)+((0.25*(v11*v22))+((-0.5*((v13**2)*v22))+aux30)));
    aux32=(0.0625+((0.125*v11)+((-0.25*(v12**2))+((-0.25*(v13**2))+aux31))))-((v12**2)*(v33*v44));
    aux33=((aux32-(v11*((v23**2)*v44)))-((v13**2)*(v22*v44)))-(v11*(v22*(v34**2)));
    aux34=(aux19-((v14**2)*v22))/((aux33-(v11*((v24**2)*v33)))-((v14**2)*(v22*v33)));
    aux35=(-0.5*(b24**2))+((0.25*b44)+((0.5*(b11*b44))+((0.5*(b22*b44))+(b11*(b22*b44)))));
    aux36=(-0.5*(b14**2))+((0.25*b22)+((0.5*(b11*b22))+((2.*(b12*(b14*b24)))+aux35)));
    aux37=((0.125+((0.25*b11)+((-0.5*(b12**2))+aux36)))-((b12**2)*b44))-(b11*(b24**2));
    aux38=(0.25*(b33*b44))+((0.5*(b11*(b33*b44)))+((0.5*(b22*(b33*b44)))+(b11*(b22*(b33*b44)))));
    aux39=(0.5*(b11*(b22*b44)))+((2.*(b12*(b13*(b23*b44))))+((-0.5*((b23**2)*b44))+aux38));
    aux40=(0.25*(b11*b44))+((-0.5*((b12**2)*b44))+((-0.5*((b13**2)*b44))+((0.25*(b22*b44))+aux39)));
    aux41=(-0.5*(b11*(b34**2)))+(((b12**2)*(b34**2))+((-0.5*(b22*(b34**2)))+((0.125*b44)+aux40)));
    aux42=(-2.*(b12*(b13*(b24*b34))))+((b23*(b24*b34))+((2.*(b11*(b23*(b24*b34))))+((-0.25*(b34**2))+aux41)));
    aux43=(b13*(b14*b34))+((2.*(b13*(b14*(b22*b34))))+((-2.*(b12*(b14*(b23*b34))))+aux42));
    aux44=(0.5*(b11*(b22*b33)))+((2.*(b12*(b14*(b24*b33))))+((-0.5*((b24**2)*b33))+aux43));
    aux45=(0.25*(b11*b33))+((-0.5*((b12**2)*b33))+((-0.5*((b14**2)*b33))+((0.25*(b22*b33))+aux44)));
    aux46=(-0.25*(b24**2))+((-0.5*(b11*(b24**2)))+(((b13**2)*(b24**2))+((0.125*b33)+aux45)));
    aux47=((b14**2)*(b23**2))+((b12*(b14*b24))+((-2.*(b13*(b14*(b23*b24))))+aux46));
    aux48=(-0.5*((b14**2)*b22))+((b12*(b13*b23))+((-0.25*(b23**2))+((-0.5*(b11*(b23**2)))+aux47)));
    aux49=(-0.25*(b14**2))+((0.125*b22)+((0.25*(b11*b22))+((-0.5*((b13**2)*b22))+aux48)));
    aux50=(0.0625+((0.125*b11)+((-0.25*(b12**2))+((-0.25*(b13**2))+aux49))))-((b12**2)*(b33*b44));
    aux51=((aux50-(b11*((b23**2)*b44)))-((b13**2)*(b22*b44)))-(b11*(b22*(b34**2)));
    aux52=(aux37-((b14**2)*b22))/((aux51-(b11*((b24**2)*b33)))-((b14**2)*(b22*b33)));
    aux53=(b13*(b24**2))+((0.5*(b14*b34))+((b14*(b22*b34))+((-0.5*(b13*b44))+(b12*(b23*b44)))));
    aux54=((-0.25*b13)+((-0.5*(b13*b22))+((0.5*(b12*b23))+aux53)))-(b13*(b22*b44));
    aux55=(0.25*(b33*b44))+((0.5*(b11*(b33*b44)))+((0.5*(b22*(b33*b44)))+(b11*(b22*(b33*b44)))));
    aux56=(0.5*(b11*(b22*b44)))+((2.*(b12*(b13*(b23*b44))))+((-0.5*((b23**2)*b44))+aux55));
    aux57=(0.25*(b11*b44))+((-0.5*((b12**2)*b44))+((-0.5*((b13**2)*b44))+((0.25*(b22*b44))+aux56)));
    aux58=(-0.5*(b11*(b34**2)))+(((b12**2)*(b34**2))+((-0.5*(b22*(b34**2)))+((0.125*b44)+aux57)));
    aux59=(-2.*(b12*(b13*(b24*b34))))+((b23*(b24*b34))+((2.*(b11*(b23*(b24*b34))))+((-0.25*(b34**2))+aux58)));
    aux60=(b13*(b14*b34))+((2.*(b13*(b14*(b22*b34))))+((-2.*(b12*(b14*(b23*b34))))+aux59));
    aux61=(0.5*(b11*(b22*b33)))+((2.*(b12*(b14*(b24*b33))))+((-0.5*((b24**2)*b33))+aux60));
    aux62=(0.25*(b11*b33))+((-0.5*((b12**2)*b33))+((-0.5*((b14**2)*b33))+((0.25*(b22*b33))+aux61)));
    aux63=(-0.25*(b24**2))+((-0.5*(b11*(b24**2)))+(((b13**2)*(b24**2))+((0.125*b33)+aux62)));
    aux64=((b14**2)*(b23**2))+((b12*(b14*b24))+((-2.*(b13*(b14*(b23*b24))))+aux63));
    aux65=(-0.5*((b14**2)*b22))+((b12*(b13*b23))+((-0.25*(b23**2))+((-0.5*(b11*(b23**2)))+aux64)));
    aux66=(-0.25*(b14**2))+((0.125*b22)+((0.25*(b11*b22))+((-0.5*((b13**2)*b22))+aux65)));
    aux67=(0.0625+((0.125*b11)+((-0.25*(b12**2))+((-0.25*(b13**2))+aux66))))-((b12**2)*(b33*b44));
    aux68=((aux67-(b11*((b23**2)*b44)))-((b13**2)*(b22*b44)))-(b11*(b22*(b34**2)));
    aux69=((0.+-1.j)*((aux54-(b12*(b24*b34)))-(b14*(b23*b24))))/((aux68-(b11*((b24**2)*b33)))-((b14**2)*(b22*b33)));
    output=(0.25*(aux16-aux34))+(-0.25*(np.conjugate((aux52+aux69))));
    return output

def coeffscuadraticos44(V,B):
    v11,v12,v13,v14=separate(V,0)
    v21,v22,v23,v24=separate(V,1)
    v31,v32,v33,v34=separate(V,2)
    v41,v42,v43,v44=separate(V,3)
    b11,b12,b13,b14=separate(B,0)
    b21,b22,b23,b24=separate(B,1)
    b31,b32,b33,b34=separate(B,2)
    b41,b42,b43,b44=separate(B,3)
    aux0=((v13**2)*v24)+((v12*(v14*v33))+((-0.5*(v24*v33))+((0.5*(v23*v34))+(v11*(v23*v34)))));
    aux1=((0.5*(v12*v14))+((-0.25*v24)+((-0.5*(v11*v24))+aux0)))-(v12*(v13*v34));
    aux2=(0.25*(v33*v44))+((0.5*(v11*(v33*v44)))+((0.5*(v22*(v33*v44)))+(v11*(v22*(v33*v44)))));
    aux3=(0.5*(v11*(v22*v44)))+((2.*(v12*(v13*(v23*v44))))+((-0.5*((v23**2)*v44))+aux2));
    aux4=(0.25*(v11*v44))+((-0.5*((v12**2)*v44))+((-0.5*((v13**2)*v44))+((0.25*(v22*v44))+aux3)));
    aux5=(-0.5*(v11*(v34**2)))+(((v12**2)*(v34**2))+((-0.5*(v22*(v34**2)))+((0.125*v44)+aux4)));
    aux6=(-2.*(v12*(v13*(v24*v34))))+((v23*(v24*v34))+((2.*(v11*(v23*(v24*v34))))+((-0.25*(v34**2))+aux5)));
    aux7=(v13*(v14*v34))+((2.*(v13*(v14*(v22*v34))))+((-2.*(v12*(v14*(v23*v34))))+aux6));
    aux8=(0.5*(v11*(v22*v33)))+((2.*(v12*(v14*(v24*v33))))+((-0.5*((v24**2)*v33))+aux7));
    aux9=(0.25*(v11*v33))+((-0.5*((v12**2)*v33))+((-0.5*((v14**2)*v33))+((0.25*(v22*v33))+aux8)));
    aux10=(-0.25*(v24**2))+((-0.5*(v11*(v24**2)))+(((v13**2)*(v24**2))+((0.125*v33)+aux9)));
    aux11=((v14**2)*(v23**2))+((v12*(v14*v24))+((-2.*(v13*(v14*(v23*v24))))+aux10));
    aux12=(-0.5*((v14**2)*v22))+((v12*(v13*v23))+((-0.25*(v23**2))+((-0.5*(v11*(v23**2)))+aux11)));
    aux13=(-0.25*(v14**2))+((0.125*v22)+((0.25*(v11*v22))+((-0.5*((v13**2)*v22))+aux12)));
    aux14=(0.0625+((0.125*v11)+((-0.25*(v12**2))+((-0.25*(v13**2))+aux13))))-((v12**2)*(v33*v44));
    aux15=((aux14-(v11*((v23**2)*v44)))-((v13**2)*(v22*v44)))-(v11*(v22*(v34**2)));
    aux16=((0.+1.j)*((aux1-(v11*(v24*v33)))-(v13*(v14*v23))))/((aux15-(v11*((v24**2)*v33)))-((v14**2)*(v22*v33)));
    aux17=(-0.5*(v23**2))+((0.25*v33)+((0.5*(v11*v33))+((0.5*(v22*v33))+(v11*(v22*v33)))));
    aux18=(-0.5*(v13**2))+((0.25*v22)+((0.5*(v11*v22))+((2.*(v12*(v13*v23)))+aux17)));
    aux19=((0.125+((0.25*v11)+((-0.5*(v12**2))+aux18)))-((v12**2)*v33))-(v11*(v23**2));
    aux20=(0.25*(v33*v44))+((0.5*(v11*(v33*v44)))+((0.5*(v22*(v33*v44)))+(v11*(v22*(v33*v44)))));
    aux21=(0.5*(v11*(v22*v44)))+((2.*(v12*(v13*(v23*v44))))+((-0.5*((v23**2)*v44))+aux20));
    aux22=(0.25*(v11*v44))+((-0.5*((v12**2)*v44))+((-0.5*((v13**2)*v44))+((0.25*(v22*v44))+aux21)));
    aux23=(-0.5*(v11*(v34**2)))+(((v12**2)*(v34**2))+((-0.5*(v22*(v34**2)))+((0.125*v44)+aux22)));
    aux24=(-2.*(v12*(v13*(v24*v34))))+((v23*(v24*v34))+((2.*(v11*(v23*(v24*v34))))+((-0.25*(v34**2))+aux23)));
    aux25=(v13*(v14*v34))+((2.*(v13*(v14*(v22*v34))))+((-2.*(v12*(v14*(v23*v34))))+aux24));
    aux26=(0.5*(v11*(v22*v33)))+((2.*(v12*(v14*(v24*v33))))+((-0.5*((v24**2)*v33))+aux25));
    aux27=(0.25*(v11*v33))+((-0.5*((v12**2)*v33))+((-0.5*((v14**2)*v33))+((0.25*(v22*v33))+aux26)));
    aux28=(-0.25*(v24**2))+((-0.5*(v11*(v24**2)))+(((v13**2)*(v24**2))+((0.125*v33)+aux27)));
    aux29=((v14**2)*(v23**2))+((v12*(v14*v24))+((-2.*(v13*(v14*(v23*v24))))+aux28));
    aux30=(-0.5*((v14**2)*v22))+((v12*(v13*v23))+((-0.25*(v23**2))+((-0.5*(v11*(v23**2)))+aux29)));
    aux31=(-0.25*(v14**2))+((0.125*v22)+((0.25*(v11*v22))+((-0.5*((v13**2)*v22))+aux30)));
    aux32=(0.0625+((0.125*v11)+((-0.25*(v12**2))+((-0.25*(v13**2))+aux31))))-((v12**2)*(v33*v44));
    aux33=((aux32-(v11*((v23**2)*v44)))-((v13**2)*(v22*v44)))-(v11*(v22*(v34**2)));
    aux34=(aux19-((v13**2)*v22))/((aux33-(v11*((v24**2)*v33)))-((v14**2)*(v22*v33)));
    aux35=(-0.5*(b23**2))+((0.25*b33)+((0.5*(b11*b33))+((0.5*(b22*b33))+(b11*(b22*b33)))));
    aux36=(-0.5*(b13**2))+((0.25*b22)+((0.5*(b11*b22))+((2.*(b12*(b13*b23)))+aux35)));
    aux37=((0.125+((0.25*b11)+((-0.5*(b12**2))+aux36)))-((b12**2)*b33))-(b11*(b23**2));
    aux38=(0.25*(b33*b44))+((0.5*(b11*(b33*b44)))+((0.5*(b22*(b33*b44)))+(b11*(b22*(b33*b44)))));
    aux39=(0.5*(b11*(b22*b44)))+((2.*(b12*(b13*(b23*b44))))+((-0.5*((b23**2)*b44))+aux38));
    aux40=(0.25*(b11*b44))+((-0.5*((b12**2)*b44))+((-0.5*((b13**2)*b44))+((0.25*(b22*b44))+aux39)));
    aux41=(-0.5*(b11*(b34**2)))+(((b12**2)*(b34**2))+((-0.5*(b22*(b34**2)))+((0.125*b44)+aux40)));
    aux42=(-2.*(b12*(b13*(b24*b34))))+((b23*(b24*b34))+((2.*(b11*(b23*(b24*b34))))+((-0.25*(b34**2))+aux41)));
    aux43=(b13*(b14*b34))+((2.*(b13*(b14*(b22*b34))))+((-2.*(b12*(b14*(b23*b34))))+aux42));
    aux44=(0.5*(b11*(b22*b33)))+((2.*(b12*(b14*(b24*b33))))+((-0.5*((b24**2)*b33))+aux43));
    aux45=(0.25*(b11*b33))+((-0.5*((b12**2)*b33))+((-0.5*((b14**2)*b33))+((0.25*(b22*b33))+aux44)));
    aux46=(-0.25*(b24**2))+((-0.5*(b11*(b24**2)))+(((b13**2)*(b24**2))+((0.125*b33)+aux45)));
    aux47=((b14**2)*(b23**2))+((b12*(b14*b24))+((-2.*(b13*(b14*(b23*b24))))+aux46));
    aux48=(-0.5*((b14**2)*b22))+((b12*(b13*b23))+((-0.25*(b23**2))+((-0.5*(b11*(b23**2)))+aux47)));
    aux49=(-0.25*(b14**2))+((0.125*b22)+((0.25*(b11*b22))+((-0.5*((b13**2)*b22))+aux48)));
    aux50=(0.0625+((0.125*b11)+((-0.25*(b12**2))+((-0.25*(b13**2))+aux49))))-((b12**2)*(b33*b44));
    aux51=((aux50-(b11*((b23**2)*b44)))-((b13**2)*(b22*b44)))-(b11*(b22*(b34**2)));
    aux52=(aux37-((b13**2)*b22))/((aux51-(b11*((b24**2)*b33)))-((b14**2)*(b22*b33)));
    aux53=((b13**2)*b24)+((b12*(b14*b33))+((-0.5*(b24*b33))+((0.5*(b23*b34))+(b11*(b23*b34)))));
    aux54=((0.5*(b12*b14))+((-0.25*b24)+((-0.5*(b11*b24))+aux53)))-(b12*(b13*b34));
    aux55=(0.25*(b33*b44))+((0.5*(b11*(b33*b44)))+((0.5*(b22*(b33*b44)))+(b11*(b22*(b33*b44)))));
    aux56=(0.5*(b11*(b22*b44)))+((2.*(b12*(b13*(b23*b44))))+((-0.5*((b23**2)*b44))+aux55));
    aux57=(0.25*(b11*b44))+((-0.5*((b12**2)*b44))+((-0.5*((b13**2)*b44))+((0.25*(b22*b44))+aux56)));
    aux58=(-0.5*(b11*(b34**2)))+(((b12**2)*(b34**2))+((-0.5*(b22*(b34**2)))+((0.125*b44)+aux57)));
    aux59=(-2.*(b12*(b13*(b24*b34))))+((b23*(b24*b34))+((2.*(b11*(b23*(b24*b34))))+((-0.25*(b34**2))+aux58)));
    aux60=(b13*(b14*b34))+((2.*(b13*(b14*(b22*b34))))+((-2.*(b12*(b14*(b23*b34))))+aux59));
    aux61=(0.5*(b11*(b22*b33)))+((2.*(b12*(b14*(b24*b33))))+((-0.5*((b24**2)*b33))+aux60));
    aux62=(0.25*(b11*b33))+((-0.5*((b12**2)*b33))+((-0.5*((b14**2)*b33))+((0.25*(b22*b33))+aux61)));
    aux63=(-0.25*(b24**2))+((-0.5*(b11*(b24**2)))+(((b13**2)*(b24**2))+((0.125*b33)+aux62)));
    aux64=((b14**2)*(b23**2))+((b12*(b14*b24))+((-2.*(b13*(b14*(b23*b24))))+aux63));
    aux65=(-0.5*((b14**2)*b22))+((b12*(b13*b23))+((-0.25*(b23**2))+((-0.5*(b11*(b23**2)))+aux64)));
    aux66=(-0.25*(b14**2))+((0.125*b22)+((0.25*(b11*b22))+((-0.5*((b13**2)*b22))+aux65)));
    aux67=(0.0625+((0.125*b11)+((-0.25*(b12**2))+((-0.25*(b13**2))+aux66))))-((b12**2)*(b33*b44));
    aux68=((aux67-(b11*((b23**2)*b44)))-((b13**2)*(b22*b44)))-(b11*(b22*(b34**2)));
    aux69=((0.+-1.j)*((aux54-(b11*(b24*b33)))-(b13*(b14*b23))))/((aux68-(b11*((b24**2)*b33)))-((b14**2)*(b22*b33)));
    output=(0.25*(aux16-aux34))+(-0.25*(np.conjugate((aux52+aux69))));
    return output



def lineal1(V,B,R,S):
    v11,v12,v13,v14=separate(V,0)
    v21,v22,v23,v24=separate(V,1)
    v31,v32,v33,v34=separate(V,2)
    v41,v42,v43,v44=separate(V,3)
    b11,b12,b13,b14=separate(B,0)
    b21,b22,b23,b24=separate(B,1)
    b31,b32,b33,b34=separate(B,2)
    b41,b42,b43,b44=separate(B,3)
    r1,r2,r3,r4=R[0],R[1],R[2],R[3]
    s1,s2,s3,s4=S[0],S[1],S[2],S[3]
    aux0=(2.*b33)+(((0.+-8.j)*(b24*b33))+((b22*(2.+(4.*b33)))+((0.+8.j)*(b23*b34))));
    aux1=((0.+-2.j)*(b14*b34))+(((0.+-2.j)*(b23*b34))+((-4.*(b34**2))+((2.*b44)+(4.*(b33*b44)))));
    aux2=b13+(b24+((2.*(b24*b33))+((2.*(b13*b44))+((0.+-1.j)*(1.+((2.*b33)+aux1))))));
    aux3=(2.*(b23*b44))+((4.*(b11*(b23*b44)))+(((0.+-8.j)*(b13*(b23*b44)))+(-2.*(b12*aux2))));
    aux4=(b14*(1.+((-4.*(b23**2))+(((0.+-4.j)*b24)+((4.*(b13*b24))+aux0)))))+aux3;
    aux5=(-2.*(b24*b34))+((-4.*(b11*(b24*b34)))+(((0.+8.j)*(b13*(b24*b34)))+aux4));
    aux6=(-4.*((b14**2)*b23))+((4.*(b13*(b23*b24)))+((-2.*(b13*b34))+((-4.*(b13*(b22*b34)))+aux5)));
    aux7=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux8=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux9=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux8)));
    aux10=(16.*(b12*aux7))+(2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux9))))));
    aux11=(-4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+aux10;
    aux12=(-16.*((b13**2)*(b22*b44)))+((-8.*((b23**2)*b44))+((4.*(b33*b44))+((8.*(b22*(b33*b44)))+aux11)));
    aux13=(-8.*(b22*(b34**2)))+((2.*b44)+((-8.*((b13**2)*b44))+((4.*(b22*b44))+aux12)));
    aux14=(32.*(b13*(b14*(b22*b34))))+((16.*(b23*(b24*b34)))+((-4.*(b34**2))+aux13));
    aux15=(-16.*((b14**2)*(b22*b33)))+((-8.*((b24**2)*b33))+((16.*(b13*(b14*b34)))+aux14));
    aux16=(16.*((b13**2)*(b24**2)))+((2.*b33)+((-8.*((b14**2)*b33))+((4.*(b22*b33))+aux15)));
    aux17=(16.*((b14**2)*(b23**2)))+((-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+aux16));
    aux18=(2.*b22)+((-8.*((b13**2)*b22))+((-8.*((b14**2)*b22))+((-4.*(b23**2))+aux17)));
    aux19=((0.+2.j)*((b23+((2.*(b11*b23))+(((0.+-4.j)*(b13*b23))+aux6)))*s2))/(1.+((-4.*(b13**2))+((-4.*(b14**2))+aux18)));
    aux20=(b14*((-2.*(b23*b24))+(b34+(2.*(b22*b34)))))+(b12*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux21=(-4.*((b23**2)*b44))+((2.*(b33*b44))+((4.*(b22*(b33*b44)))+((b12**2)*(2.+(4.*b44)))));
    aux22=(-4.*((b24**2)*b33))+((8.*(b23*(b24*b34)))+((-2.*(b34**2))+((-4.*(b22*(b34**2)))+aux21)));
    aux23=(4.*((b14**2)*b22))+((-2.*(b23**2))+((-8.*(b12*(b14*b24)))+(b33+((2.*(b22*b33))+aux22))));
    aux24=((2.*(b14**2))+aux23)-(b11*(1.+((-4.*(b24**2))+((2.*b44)+(b22*(2.+(4.*b44)))))));
    aux25=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux26=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux27=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux26)));
    aux28=-2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux27)))));
    aux29=(4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+((-16.*(b12*aux25))+aux28);
    aux30=(16.*((b13**2)*(b22*b44)))+((8.*((b23**2)*b44))+((-4.*(b33*b44))+((-8.*(b22*(b33*b44)))+aux29)));
    aux31=(8.*(b22*(b34**2)))+((-2.*b44)+((8.*((b13**2)*b44))+((-4.*(b22*b44))+aux30)));
    aux32=(-32.*(b13*(b14*(b22*b34))))+((-16.*(b23*(b24*b34)))+((4.*(b34**2))+aux31));
    aux33=(16.*((b14**2)*(b22*b33)))+((8.*((b24**2)*b33))+((-16.*(b13*(b14*b34)))+aux32));
    aux34=(-16.*((b13**2)*(b24**2)))+((-2.*b33)+((8.*((b14**2)*b33))+((-4.*(b22*b33))+aux33)));
    aux35=(-16.*((b14**2)*(b23**2)))+((32.*(b13*(b14*(b23*b24))))+((4.*(b24**2))+aux34));
    aux36=(-2.*b22)+((8.*((b13**2)*b22))+((8.*((b14**2)*b22))+((4.*(b23**2))+aux35)));
    aux37=((0.+2.j)*aux24)+((0.+1.j)*(-1.+((4.*(b13**2))+((4.*(b14**2))+aux36))));
    aux38=(-4.*(b13*(1.+((-4.*(b24**2))+((2.*b44)+(b22*(2.+(4.*b44))))))))+((8.*aux20)+aux37);
    aux39=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux40=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux41=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux40)));
    aux42=(16.*(b12*aux39))+(2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux41))))));
    aux43=(-4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+aux42;
    aux44=(-16.*((b13**2)*(b22*b44)))+((-8.*((b23**2)*b44))+((4.*(b33*b44))+((8.*(b22*(b33*b44)))+aux43)));
    aux45=(-8.*(b22*(b34**2)))+((2.*b44)+((-8.*((b13**2)*b44))+((4.*(b22*b44))+aux44)));
    aux46=(32.*(b13*(b14*(b22*b34))))+((16.*(b23*(b24*b34)))+((-4.*(b34**2))+aux45));
    aux47=(-16.*((b14**2)*(b22*b33)))+((-8.*((b24**2)*b33))+((16.*(b13*(b14*b34)))+aux46));
    aux48=(16.*((b13**2)*(b24**2)))+((2.*b33)+((-8.*((b14**2)*b33))+((4.*(b22*b33))+aux47)));
    aux49=(16.*((b14**2)*(b23**2)))+((-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+aux48));
    aux50=(2.*b22)+((-8.*((b13**2)*b22))+((-8.*((b14**2)*b22))+((-4.*(b23**2))+aux49)));
    aux51=(b13*((-2.*(b23*b24))+(b34+(2.*(b22*b34)))))+(b12*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))));
    aux52=-2.*(b13*((b14+((2.*(b14*b22))+((2.*(b24*b34))+(-2.*(b23*b44)))))-b23));
    aux53=(4.*(b14*b23))+((4.*(b13*b24))+((-2.*b33)+((4.*(b34**2))+((-2.*b44)+(-4.*(b33*b44))))));
    aux54=(2.*(b22*b34))+((4.*(b11*(b22*b34)))+((-4.*(b14*(b23*b34)))+(aux52+(b12*(-1.+aux53)))));
    aux55=(4.*(b14*(b24*b33)))+(b34+((2.*(b11*b34))+((-4.*((b12**2)*b34))+aux54)));
    aux56=(0.+2.j)*((2.*(b14*b24))+((-2.*(b23*b24))+((-4.*(b11*(b23*b24)))+aux55)));
    aux57=(-4.*(b14*(1.+((-4.*(b23**2))+((2.*b33)+(b22*(2.+(4.*b33))))))))+((8.*aux51)+aux56);
    aux58=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux59=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux60=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux59)));
    aux61=(16.*(b12*aux58))+(2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux60))))));
    aux62=(-4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+aux61;
    aux63=(-16.*((b13**2)*(b22*b44)))+((-8.*((b23**2)*b44))+((4.*(b33*b44))+((8.*(b22*(b33*b44)))+aux62)));
    aux64=(-8.*(b22*(b34**2)))+((2.*b44)+((-8.*((b13**2)*b44))+((4.*(b22*b44))+aux63)));
    aux65=(32.*(b13*(b14*(b22*b34))))+((16.*(b23*(b24*b34)))+((-4.*(b34**2))+aux64));
    aux66=(-16.*((b14**2)*(b22*b33)))+((-8.*((b24**2)*b33))+((16.*(b13*(b14*b34)))+aux65));
    aux67=(16.*((b13**2)*(b24**2)))+((2.*b33)+((-8.*((b14**2)*b33))+((4.*(b22*b33))+aux66)));
    aux68=(16.*((b14**2)*(b23**2)))+((-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+aux67));
    aux69=(2.*b22)+((-8.*((b13**2)*b22))+((-8.*((b14**2)*b22))+((-4.*(b23**2))+aux68)));
    aux70=(-8.*(v11*(v33*v44)))+((16.*((v12**2)*(v33*v44)))+(-16.*(v11*(v22*(v33*v44)))));
    aux71=((0.+16.j)*(v12*(v23*v44)))+((-32.*(v12*(v13*(v23*v44))))+((16.*(v11*((v23**2)*v44)))+aux70));
    aux72=(-16.*(v11*(v22*v44)))+(((0.+-16.j)*(v13*(v22*v44)))+((16.*((v13**2)*(v22*v44)))+aux71));
    aux73=(16.*((v12**2)*v44))+(((0.+-8.j)*(v13*v44))+((8.*((v13**2)*v44))+((-4.*(v22*v44))+aux72)));
    aux74=(-16.*((v12**2)*(v34**2)))+((16.*(v11*(v22*(v34**2))))+((-2.*v44)+((-8.*(v11*v44))+aux73)));
    aux75=(32.*(v12*(v13*(v24*v34))))+((-32.*(v11*(v23*(v24*v34))))+((8.*(v11*(v34**2)))+aux74));
    aux76=(-32.*(v13*(v14*(v22*v34))))+((32.*(v12*(v14*(v23*v34))))+(((0.+-16.j)*(v12*(v24*v34)))+aux75));
    aux77=((0.+8.j)*(v14*v34))+((-16.*(v13*(v14*v34)))+(((0.+16.j)*(v14*(v22*v34)))+aux76));
    aux78=(16.*((v14**2)*(v22*v33)))+((-32.*(v12*(v14*(v24*v33))))+((16.*(v11*((v24**2)*v33)))+aux77));
    aux79=(8.*((v12**2)*v33))+((8.*((v14**2)*v33))+((-8.*(v11*(v22*v33)))+aux78));
    aux80=((0.+16.j)*(v13*(v24**2)))+((-16.*((v13**2)*(v24**2)))+((-4.*(v11*v33))+aux79));
    aux81=(32.*(v13*(v14*(v23*v24))))+((4.*(v24**2))+((16.*(v11*(v24**2)))+aux80));
    aux82=(-16.*((v14**2)*(v23**2)))+((-32.*(v12*(v14*v24)))+(((0.+-16.j)*(v14*(v23*v24)))+aux81));
    aux83=((0.+8.j)*(v12*v23))+((-16.*(v12*(v13*v23)))+((8.*(v11*(v23**2)))+aux82));
    aux84=((0.+-8.j)*(v13*v22))+((8.*((v13**2)*v22))+((16.*((v14**2)*v22))+aux83));
    aux85=((0.+-4.j)*v13)+((4.*(v13**2))+((8.*(v14**2))+((-2.*v22)+((-8.*(v11*v22))+aux84))));
    aux86=(v14*(v24+((2.*(v24*v33))+(-2.*(v23*v34)))))+(v13*(v23+((-2.*(v24*v34))+(2.*(v23*v44)))));
    aux87=(-4.*((v23**2)*(1.+(2.*v44))))+(v22*(2.+((-8.*(v34**2))+((4.*v44)+(v33*(4.+(8.*v44)))))));
    aux88=(16.*(v23*(v24*v34)))+((-4.*(v34**2))+((2.*v44)+((4.*(v33*v44))+aux87)));
    aux89=-2.*(v11*(1.+((-4.*(v24**2))+((2.*v33)+((-8.*((v24**2)*v33))+aux88)))));
    aux90=(4.*((v12**2)*(1.+((-4.*(v34**2))+((2.*v44)+(v33*(2.+(4.*v44))))))))+((-16.*(v12*aux86))+aux89);
    aux91=(16.*((v13**2)*(v22*v44)))+((8.*((v23**2)*v44))+((-4.*(v33*v44))+((-8.*(v22*(v33*v44)))+aux90)));
    aux92=(8.*(v22*(v34**2)))+((-2.*v44)+((8.*((v13**2)*v44))+((-4.*(v22*v44))+aux91)));
    aux93=(-32.*(v13*(v14*(v22*v34))))+((-16.*(v23*(v24*v34)))+((4.*(v34**2))+aux92));
    aux94=(16.*((v14**2)*(v22*v33)))+((8.*((v24**2)*v33))+((-16.*(v13*(v14*v34)))+aux93));
    aux95=(-16.*((v13**2)*(v24**2)))+((-2.*v33)+((8.*((v14**2)*v33))+((-4.*(v22*v33))+aux94)));
    aux96=(-16.*((v14**2)*(v23**2)))+((32.*(v13*(v14*(v23*v24))))+((4.*(v24**2))+aux95));
    aux97=(-2.*v22)+((8.*((v13**2)*v22))+((8.*((v14**2)*v22))+((4.*(v23**2))+aux96)));
    aux98=((0.+1.j)*(r3*(-1.+((-4.*v11)+((8.*(v12**2))+aux85)))))/(-1.+((4.*(v13**2))+((4.*(v14**2))+aux97)));
    aux99=((0.+-16.j)*((v12**2)*(v33*v44)))+(((0.+24.j)*(v22*(v33*v44)))+((0.+16.j)*(v11*(v22*(v33*v44)))));
    aux100=((0.+-16.j)*(v11*((v23**2)*v44)))+(((0.+12.j)*(v33*v44))+(((0.+8.j)*(v11*(v33*v44)))+aux99));
    aux101=(-16.*(v12*(v23*v44)))+(((0.+32.j)*(v12*(v13*(v23*v44))))+(((0.+-24.j)*((v23**2)*v44))+aux100));
    aux102=((0.+8.j)*(v11*(v22*v44)))+((16.*(v13*(v22*v44)))+(((0.+-16.j)*((v13**2)*(v22*v44)))+aux101));
    aux103=(8.*(v13*v44))+(((0.+-8.j)*((v13**2)*v44))+(((0.+12.j)*(v22*v44))+aux102));
    aux104=((0.+6.j)*v44)+(((0.+4.j)*(v11*v44))+(((0.+-8.j)*((v12**2)*v44))+aux103));
    aux105=((0.+16.j)*((v12**2)*(v34**2)))+(((0.+-24.j)*(v22*(v34**2)))+(((0.+-16.j)*(v11*(v22*(v34**2))))+aux104));
    aux106=((0.+32.j)*(v11*(v23*(v24*v34))))+(((0.+-12.j)*(v34**2))+(((0.+-8.j)*(v11*(v34**2)))+aux105));
    aux107=((0.+-32.j)*(v12*(v13*(v24*v34))))+(((0.+48.j)*(v23*(v24*v34)))+aux106);
    aux108=((0.+32.j)*(v13*(v14*(v22*v34))))+(((0.+-32.j)*(v12*(v14*(v23*v34))))+((16.*(v12*(v24*v34)))+aux107));
    aux109=(-8.*(v14*v34))+(((0.+16.j)*(v13*(v14*v34)))+((-16.*(v14*(v22*v34)))+aux108));
    aux110=((0.+32.j)*(v12*(v14*(v24*v33))))+(((0.+-24.j)*((v24**2)*v33))+(((0.+-16.j)*(v11*((v24**2)*v33)))+aux109));
    aux111=((0.+12.j)*(v22*v33))+(((0.+8.j)*(v11*(v22*v33)))+(((0.+-16.j)*((v14**2)*(v22*v33)))+aux110));
    aux112=((0.+4.j)*(v11*v33))+(((0.+-8.j)*((v12**2)*v33))+(((0.+-8.j)*((v14**2)*v33))+aux111));
    aux113=(-16.*(v13*(v24**2)))+(((0.+16.j)*((v13**2)*(v24**2)))+(((0.+6.j)*v33)+aux112));
    aux114=((0.+-32.j)*(v13*(v14*(v23*v24))))+(((0.+-12.j)*(v24**2))+(((0.+-8.j)*(v11*(v24**2)))+aux113));
    aux115=((0.+16.j)*((v14**2)*(v23**2)))+(((0.+16.j)*(v12*(v14*v24)))+((16.*(v14*(v23*v24)))+aux114));
    aux116=((0.+16.j)*(v12*(v13*v23)))+(((0.+-12.j)*(v23**2))+(((0.+-8.j)*(v11*(v23**2)))+aux115));
    aux117=((0.+-8.j)*((v13**2)*v22))+(((0.+-8.j)*((v14**2)*v22))+((-8.*(v12*v23))+aux116));
    aux118=((0.+-4.j)*(v14**2))+(((0.+6.j)*v22)+(((0.+4.j)*(v11*v22))+((8.*(v13*v22))+aux117)));
    aux119=((0.+2.j)*v11)+(((0.+-4.j)*(v12**2))+((4.*v13)+(((0.+-4.j)*(v13**2))+aux118)));
    aux120=(v14*(v24+((2.*(v24*v33))+(-2.*(v23*v34)))))+(v13*(v23+((-2.*(v24*v34))+(2.*(v23*v44)))));
    aux121=(-4.*((v23**2)*(1.+(2.*v44))))+(v22*(2.+((-8.*(v34**2))+((4.*v44)+(v33*(4.+(8.*v44)))))));
    aux122=(16.*(v23*(v24*v34)))+((-4.*(v34**2))+((2.*v44)+((4.*(v33*v44))+aux121)));
    aux123=-2.*(v11*(1.+((-4.*(v24**2))+((2.*v33)+((-8.*((v24**2)*v33))+aux122)))));
    aux124=(4.*((v12**2)*(1.+((-4.*(v34**2))+((2.*v44)+(v33*(2.+(4.*v44))))))))+((-16.*(v12*aux120))+aux123);
    aux125=(16.*((v13**2)*(v22*v44)))+((8.*((v23**2)*v44))+((-4.*(v33*v44))+((-8.*(v22*(v33*v44)))+aux124)));
    aux126=(8.*(v22*(v34**2)))+((-2.*v44)+((8.*((v13**2)*v44))+((-4.*(v22*v44))+aux125)));
    aux127=(-32.*(v13*(v14*(v22*v34))))+((-16.*(v23*(v24*v34)))+((4.*(v34**2))+aux126));
    aux128=(16.*((v14**2)*(v22*v33)))+((8.*((v24**2)*v33))+((-16.*(v13*(v14*v34)))+aux127));
    aux129=(-16.*((v13**2)*(v24**2)))+((-2.*v33)+((8.*((v14**2)*v33))+((-4.*(v22*v33))+aux128)));
    aux130=(-16.*((v14**2)*(v23**2)))+((32.*(v13*(v14*(v23*v24))))+((4.*(v24**2))+aux129));
    aux131=(-2.*v22)+((8.*((v13**2)*v22))+((8.*((v14**2)*v22))+((4.*(v23**2))+aux130)));
    aux132=((0.+1.j)*(r1*((0.+3.j)+aux119)))/(-1.+((4.*(v13**2))+((4.*(v14**2))+aux131)));
    aux133=(-8.*(v11*(v23*v44)))+(((0.+-16.j)*(v13*(v23*v44)))+((0.+16.j)*(v12*(v33*v44))));
    aux134=((0.+-16.j)*(v12*(v34**2)))+(((0.+8.j)*(v12*v44))+((8.*(v12*(v13*v44)))+((-4.*(v23*v44))+aux133)));
    aux135=(4.*(v24*v34))+((8.*(v11*(v24*v34)))+(((0.+16.j)*(v13*(v24*v34)))+aux134));
    aux136=(8.*(v13*(v22*v34)))+((-8.*(v12*(v23*v34)))+(((0.+16.j)*(v14*(v23*v34)))+aux135));
    aux137=((0.+-16.j)*(v14*(v24*v33)))+((4.*(v13*v34))+((-8.*(v12*(v14*v34)))+aux136));
    aux138=((0.+8.j)*(v12*v33))+((-4.*(v14*v33))+((-8.*(v14*(v22*v33)))+((8.*(v12*(v24*v33)))+aux137)));
    aux139=((0.+-8.j)*(v14*v24))+((-8.*(v13*(v14*v24)))+((-8.*(v13*(v23*v24)))+aux138));
    aux140=((0.+-8.j)*(v13*v23))+((8.*((v14**2)*v23))+((8.*(v14*(v23**2)))+((4.*(v12*v24))+aux139)));
    aux141=(4.*(v12*v13))+((-2.*v14)+((-4.*(v14*v22))+((-2.*v23)+((-4.*(v11*v23))+aux140))));
    aux142=(v14*(v24+((2.*(v24*v33))+(-2.*(v23*v34)))))+(v13*(v23+((-2.*(v24*v34))+(2.*(v23*v44)))));
    aux143=(-4.*((v23**2)*(1.+(2.*v44))))+(v22*(2.+((-8.*(v34**2))+((4.*v44)+(v33*(4.+(8.*v44)))))));
    aux144=(16.*(v23*(v24*v34)))+((-4.*(v34**2))+((2.*v44)+((4.*(v33*v44))+aux143)));
    aux145=2.*(v11*(1.+((-4.*(v24**2))+((2.*v33)+((-8.*((v24**2)*v33))+aux144)))));
    aux146=(-4.*((v12**2)*(1.+((-4.*(v34**2))+((2.*v44)+(v33*(2.+(4.*v44))))))))+((16.*(v12*aux142))+aux145);
    aux147=(-16.*((v13**2)*(v22*v44)))+((-8.*((v23**2)*v44))+((4.*(v33*v44))+((8.*(v22*(v33*v44)))+aux146)));
    aux148=(-8.*(v22*(v34**2)))+((2.*v44)+((-8.*((v13**2)*v44))+((4.*(v22*v44))+aux147)));
    aux149=(32.*(v13*(v14*(v22*v34))))+((16.*(v23*(v24*v34)))+((-4.*(v34**2))+aux148));
    aux150=(-16.*((v14**2)*(v22*v33)))+((-8.*((v24**2)*v33))+((16.*(v13*(v14*v34)))+aux149));
    aux151=(16.*((v13**2)*(v24**2)))+((2.*v33)+((-8.*((v14**2)*v33))+((4.*(v22*v33))+aux150)));
    aux152=(16.*((v14**2)*(v23**2)))+((-32.*(v13*(v14*(v23*v24))))+((-4.*(v24**2))+aux151));
    aux153=(2.*v22)+((-8.*((v13**2)*v22))+((-8.*((v14**2)*v22))+((-4.*(v23**2))+aux152)));
    aux154=((0.+1.j)*(r2*(((0.+4.j)*v12)+aux141)))/(1.+((-4.*(v13**2))+((-4.*(v14**2))+aux153)));
    aux155=(-8.*(v12*(v34**2)))+((4.*(v12*v44))+((-8.*(v13*(v23*v44)))+(8.*(v12*(v33*v44)))));
    aux156=((0.+16.j)*(v12*(v23*v34)))+((8.*(v14*(v23*v34)))+((8.*(v13*(v24*v34)))+aux155));
    aux157=(-4.*(v22*v34))+((-8.*(v11*(v22*v34)))+(((0.+-16.j)*(v13*(v22*v34)))+aux156));
    aux158=(-2.*v34)+((-4.*(v11*v34))+((8.*((v12**2)*v34))+(((0.+-8.j)*(v13*v34))+aux157)));
    aux159=((0.+16.j)*(v14*(v22*v33)))+(((0.+-16.j)*(v12*(v24*v33)))+((-8.*(v14*(v24*v33)))+aux158));
    aux160=((0.+16.j)*(v13*(v23*v24)))+((4.*(v12*v33))+(((0.+8.j)*(v14*v33))+aux159));
    aux161=(-8.*(v12*(v13*v24)))+((-4.*(v14*v24))+((4.*(v23*v24))+((8.*(v11*(v23*v24)))+aux160)));
    aux162=(-8.*(v12*(v14*v23)))+(((0.+-16.j)*(v14*(v23**2)))+(((0.+-8.j)*(v12*v24))+aux161));
    aux163=(4.*(v13*v14))+(((0.+8.j)*(v14*v22))+((8.*(v13*(v14*v22)))+((-4.*(v13*v23))+aux162)));
    aux164=(v14*(v24+((2.*(v24*v33))+(-2.*(v23*v34)))))+(v13*(v23+((-2.*(v24*v34))+(2.*(v23*v44)))));
    aux165=(-4.*((v23**2)*(1.+(2.*v44))))+(v22*(2.+((-8.*(v34**2))+((4.*v44)+(v33*(4.+(8.*v44)))))));
    aux166=(16.*(v23*(v24*v34)))+((-4.*(v34**2))+((2.*v44)+((4.*(v33*v44))+aux165)));
    aux167=2.*(v11*(1.+((-4.*(v24**2))+((2.*v33)+((-8.*((v24**2)*v33))+aux166)))));
    aux168=(-4.*((v12**2)*(1.+((-4.*(v34**2))+((2.*v44)+(v33*(2.+(4.*v44))))))))+((16.*(v12*aux164))+aux167);
    aux169=(-16.*((v13**2)*(v22*v44)))+((-8.*((v23**2)*v44))+((4.*(v33*v44))+((8.*(v22*(v33*v44)))+aux168)));
    aux170=(-8.*(v22*(v34**2)))+((2.*v44)+((-8.*((v13**2)*v44))+((4.*(v22*v44))+aux169)));
    aux171=(32.*(v13*(v14*(v22*v34))))+((16.*(v23*(v24*v34)))+((-4.*(v34**2))+aux170));
    aux172=(-16.*((v14**2)*(v22*v33)))+((-8.*((v24**2)*v33))+((16.*(v13*(v14*v34)))+aux171));
    aux173=(16.*((v13**2)*(v24**2)))+((2.*v33)+((-8.*((v14**2)*v33))+((4.*(v22*v33))+aux172)));
    aux174=(16.*((v14**2)*(v23**2)))+((-32.*(v13*(v14*(v23*v24))))+((-4.*(v24**2))+aux173));
    aux175=(2.*v22)+((-8.*((v13**2)*v22))+((-8.*((v14**2)*v22))+((-4.*(v23**2))+aux174)));
    aux176=((0.+1.j)*(r4*((2.*v12)+(((0.+4.j)*v14)+aux163))))/(1.+((-4.*(v13**2))+((-4.*(v14**2))+aux175)));
    aux177=v23*((0.+-1.j)+((-4.*(v14*v34))+(((0.+-2.j)*v44)+(v13*(2.+(4.*v44))))));
    aux178=v12*((2.*(v24*(v14+((2.*(v14*v33))+(((0.+1.j)+(-2.*v13))*v34)))))+aux177);
    aux179=(-4.*((v23**2)*(1.+(2.*v44))))+(v22*(2.+((-8.*(v34**2))+((4.*v44)+(v33*(4.+(8.*v44)))))));
    aux180=(16.*(v23*(v24*v34)))+((-4.*(v34**2))+((2.*v44)+((4.*(v33*v44))+aux179)));
    aux181=2.*(v11*(1.+((-4.*(v24**2))+((2.*v33)+((-8.*((v24**2)*v33))+aux180)))));
    aux182=(-4.*((v12**2)*(1.+((-4.*(v34**2))+((2.*v44)+(v33*(2.+(4.*v44))))))))+((8.*aux178)+aux181);
    aux183=(-16.*((v13**2)*(v22*v44)))+((8.*((v23**2)*v44))+((-4.*(v33*v44))+((-8.*(v22*(v33*v44)))+aux182)));
    aux184=(-8.*((v13**2)*v44))+((-4.*(v22*v44))+(((0.+16.j)*(v13*(v22*v44)))+aux183));
    aux185=(4.*(v34**2))+((8.*(v22*(v34**2)))+((-2.*v44)+(((0.+8.j)*(v13*v44))+aux184)));
    aux186=((0.+-16.j)*(v14*(v22*v34)))+((32.*(v13*(v14*(v22*v34))))+((-16.*(v23*(v24*v34)))+aux185));
    aux187=(8.*((v24**2)*v33))+(((0.+-8.j)*(v14*v34))+((16.*(v13*(v14*v34)))+aux186));
    aux188=(-8.*((v14**2)*v33))+((-4.*(v22*v33))+((-16.*((v14**2)*(v22*v33)))+aux187));
    aux189=((0.+-16.j)*(v13*(v24**2)))+((16.*((v13**2)*(v24**2)))+((-2.*v33)+aux188));
    aux190=((0.+16.j)*(v14*(v23*v24)))+((-32.*(v13*(v14*(v23*v24))))+((4.*(v24**2))+aux189));
    aux191=(-8.*((v14**2)*v22))+((4.*(v23**2))+((16.*((v14**2)*(v23**2)))+aux190));
    aux192=(-4.*(v14**2))+((-2.*v22)+(((0.+8.j)*(v13*v22))+((-8.*((v13**2)*v22))+aux191)));
    aux193=(-2.*((v23**2)*(1.+(2.*v44))))+(2.*(v22*(1.+(v33+((-2.*(v34**2))+((2.*v44)+(2.*(v33*v44))))))));
    aux194=(8.*(v23*(v24*v34)))+((-2.*(v34**2))+((2.*v44)+((2.*(v33*v44))+aux193)));
    aux195=v23*((0.+-1.j)+((-4.*(v14*v34))+(((0.+-2.j)*v44)+(v13*(2.+(4.*v44))))));
    aux196=v12*((2.*(v24*((2.*(v14*(1.+v33)))+(((0.+1.j)+(-2.*v13))*v34))))+aux195);
    aux197=(-4.*(v11*(1.+((-4.*(v24**2))+(v33+((-4.*((v24**2)*v33))+aux194))))))+(-8.*aux196);
    aux198=(8.*((v12**2)*(1.+(v33+((-2.*(v34**2))+((2.*v44)+(2.*(v33*v44))))))))+aux197;
    aux199=(-4.*(v22*v44))+(((0.+-16.j)*(v13*(v22*v44)))+((16.*((v13**2)*(v22*v44)))+aux198));
    aux200=(-32.*(v13*(v14*(v22*v34))))+((-2.*v44)+(((0.+-8.j)*(v13*v44))+((8.*((v13**2)*v44))+aux199)));
    aux201=((0.+8.j)*(v14*v34))+((-16.*(v13*(v14*v34)))+(((0.+16.j)*(v14*(v22*v34)))+aux200));
    aux202=(-16.*((v13**2)*(v24**2)))+((8.*((v14**2)*v33))+((16.*((v14**2)*(v22*v33)))+aux201));
    aux203=(32.*(v13*(v14*(v23*v24))))+((4.*(v24**2))+(((0.+16.j)*(v13*(v24**2)))+aux202));
    aux204=(16.*((v14**2)*v22))+((-16.*((v14**2)*(v23**2)))+(((0.+-16.j)*(v14*(v23*v24)))+aux203));
    aux205=(8.*(v14**2))+((-2.*v22)+(((0.+-8.j)*(v13*v22))+((8.*((v13**2)*v22))+aux204)));
    aux206=((0.+2.j)*v33)+((-2.*(v24*v33))+(((0.+2.j)*(v22*(1.+(2.*v33))))+(2.*(v23*v34))));
    aux207=v14*(((0.+1.j)+(v13+((2.*(v13*v22))+(((0.+-4.j)*(v23**2))+aux206))))-v24);
    aux208=(-2.*v33)+(((0.+-8.j)*(v23*v34))+((4.*(v34**2))+((-2.*v44)+(-4.*(v33*v44)))));
    aux209=-1.+((4.*(v14*v23))+((4.*(v24*((0.+1.j)+(v13+((0.+2.j)*v33)))))+aux208));
    aux210=(-4.*(v13*(v24*v34)))+((-2.*aux207)+((4.*(v13*(v23*v44)))+(v12*aux209)));
    aux211=(2.*(v22*v34))+((4.*(v11*(v22*v34)))+(((0.+8.j)*(v13*(v22*v34)))+aux210));
    aux212=v34+((2.*(v11*v34))+((-4.*((v12**2)*v34))+(((0.+4.j)*(v13*v34))+aux211)));
    aux213=(-2.*(v23*v24))+((-4.*(v11*(v23*v24)))+(((0.+-8.j)*(v13*(v23*v24)))+aux212));
    aux214=(2.*v33)+(((0.+8.j)*(v24*v33))+((v22*(2.+(4.*v33)))+((0.+-8.j)*(v23*v34))));
    aux215=((0.+2.j)*(v14*v34))+(((0.+2.j)*(v23*v34))+((-4.*(v34**2))+((2.*v44)+(4.*(v33*v44)))));
    aux216=v24+((2.*(v24*v33))+((2.*(v13*v44))+((0.+1.j)*(1.+((2.*v33)+aux215)))));
    aux217=(4.*(v11*(v23*v44)))+(((0.+8.j)*(v13*(v23*v44)))+(-2.*(v12*(v13+aux216))));
    aux218=(v14*(1.+((-4.*(v23**2))+(((0.+4.j)*v24)+((4.*(v13*v24))+aux214)))))+((2.*(v23*v44))+aux217);
    aux219=(-2.*(v24*v34))+((-4.*(v11*(v24*v34)))+(((0.+-8.j)*(v13*(v24*v34)))+aux218));
    aux220=(-4.*((v14**2)*v23))+((4.*(v13*(v23*v24)))+((-2.*(v13*v34))+((-4.*(v13*(v22*v34)))+aux219)));
    aux221=(r4*((2.*(v13*v23))+aux213))+(r2*(v23+((2.*(v11*v23))+(((0.+4.j)*(v13*v23))+aux220))));
    aux222=(0.+1.j)*((r3*(-1.+(((0.+-4.j)*v13)+((4.*(v13**2))+aux205))))+(2.*aux221));
    aux223=(v14*(v24+((2.*(v24*v33))+(-2.*(v23*v34)))))+(v13*(v23+((-2.*(v24*v34))+(2.*(v23*v44)))));
    aux224=(-4.*((v23**2)*(1.+(2.*v44))))+(v22*(2.+((-8.*(v34**2))+((4.*v44)+(v33*(4.+(8.*v44)))))));
    aux225=(16.*(v23*(v24*v34)))+((-4.*(v34**2))+((2.*v44)+((4.*(v33*v44))+aux224)));
    aux226=-2.*(v11*(1.+((-4.*(v24**2))+((2.*v33)+((-8.*((v24**2)*v33))+aux225)))));
    aux227=(4.*((v12**2)*(1.+((-4.*(v34**2))+((2.*v44)+(v33*(2.+(4.*v44))))))))+((-16.*(v12*aux223))+aux226);
    aux228=(16.*((v13**2)*(v22*v44)))+((8.*((v23**2)*v44))+((-4.*(v33*v44))+((-8.*(v22*(v33*v44)))+aux227)));
    aux229=(8.*(v22*(v34**2)))+((-2.*v44)+((8.*((v13**2)*v44))+((-4.*(v22*v44))+aux228)));
    aux230=(-32.*(v13*(v14*(v22*v34))))+((-16.*(v23*(v24*v34)))+((4.*(v34**2))+aux229));
    aux231=(16.*((v14**2)*(v22*v33)))+((8.*((v24**2)*v33))+((-16.*(v13*(v14*v34)))+aux230));
    aux232=(-16.*((v13**2)*(v24**2)))+((-2.*v33)+((8.*((v14**2)*v33))+((-4.*(v22*v33))+aux231)));
    aux233=(-16.*((v14**2)*(v23**2)))+((32.*(v13*(v14*(v23*v24))))+((4.*(v24**2))+aux232));
    aux234=(-2.*v22)+((8.*((v13**2)*v22))+((8.*((v14**2)*v22))+((4.*(v23**2))+aux233)));
    aux235=((r1*(-1.+(((0.+4.j)*v13)+((-4.*(v13**2))+aux192))))+aux222)/(-1.+((4.*(v13**2))+((4.*(v14**2))+aux234)));
    aux236=1.+(((0.+4.j)*(b14*b34))+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))));
    aux237=((0.+-1.j)*(b13*(1.+((-4.*(b24**2))+((2.*b44)+(b22*(2.+(4.*b44))))))))+(b22*aux236);
    aux238=((0.+2.j)*(b14*b34))+(((0.+2.j)*(b12*(b23+((-2.*(b24*b34))+(2.*(b23*b44))))))+aux237);
    aux239=(-4.*((b23**2)*b44))+((2.*(b33*b44))+(np.conjugate((((0.+-4.j)*(b14*(b23*b24)))+aux238))));
    aux240=(8.*(b34**2))+((-4.*b44)+(-4.*((-4.*((b24**2)*b33))+((8.*(b23*(b24*b34)))+aux239))));
    aux241=-2.*((b12**2)*(1.+((2.*b33)+((-4.*(b34**2))+((2.*b44)+(4.*(b33*b44)))))));
    aux242=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux243=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux244=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux243)));
    aux245=(8.*(b12*aux242))+(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux244)))));
    aux246=(-4.*((b23**2)*b44))+((2.*(b33*b44))+((4.*(b22*(b33*b44)))+(aux241+aux245)));
    aux247=(-4.*((b13**2)*b44))+((2.*(b22*b44))+((-8.*((b13**2)*(b22*b44)))+aux246));
    aux248=(16.*(b13*(b14*(b22*b34))))+((8.*(b23*(b24*b34)))+((-4.*(b22*(b34**2)))+aux247));
    aux249=(-8.*((b14**2)*(b22*b33)))+((-4.*((b24**2)*b33))+((8.*(b13*(b14*b34)))+aux248));
    aux250=(8.*((b13**2)*(b24**2)))+((-4.*((b14**2)*b33))+((2.*(b22*b33))+aux249));
    aux251=(-4.*((b14**2)*b22))+((8.*((b14**2)*(b23**2)))+((-16.*(b13*(b14*(b23*b24))))+aux250));
    aux252=(-2.*b33)+((4.*(b34**2))+((-2.*b44)+(-2.*((-4.*((b13**2)*b22))+aux251))));
    aux253=(4.*(b13**2))+((4.*(b14**2))+((-2.*b22)+((4.*(b23**2))+((4.*(b24**2))+aux252))));
    aux254=1.+((-2.+((8.*(b23**2))+((8.*(b24**2))+((-4.*b33)+aux240))))/(-1.+aux253));
    aux255=(2.*b33)+(((0.+-8.j)*(b24*b33))+((b22*(2.+(4.*b33)))+((0.+8.j)*(b23*b34))));
    aux256=((0.+-2.j)*(b14*b34))+(((0.+-2.j)*(b23*b34))+((-4.*(b34**2))+((2.*b44)+(4.*(b33*b44)))));
    aux257=b24+((2.*(b24*b33))+((2.*(b13*b44))+((0.+-1.j)*(1.+((2.*b33)+aux256)))));
    aux258=(4.*(b11*(b23*b44)))+(((0.+-8.j)*(b13*(b23*b44)))+(-2.*(b12*(b13+aux257))));
    aux259=(b14*(1.+((-4.*(b23**2))+(((0.+-4.j)*b24)+((4.*(b13*b24))+aux255)))))+((2.*(b23*b44))+aux258);
    aux260=(-2.*(b24*b34))+((-4.*(b11*(b24*b34)))+(((0.+8.j)*(b13*(b24*b34)))+aux259));
    aux261=(-4.*((b14**2)*b23))+((4.*(b13*(b23*b24)))+((-2.*(b13*b34))+((-4.*(b13*(b22*b34)))+aux260)));
    aux262=(-2.*((b23**2)*(1.+(2.*b44))))+(2.*(b22*(1.+(b33+((-2.*(b34**2))+((2.*b44)+(2.*(b33*b44))))))));
    aux263=(8.*(b23*(b24*b34)))+((-2.*(b34**2))+((2.*b44)+((2.*(b33*b44))+aux262)));
    aux264=(-2.*(((0.+1.j)+(2.*b13))*(b24*b34)))+(b23*((0.+1.j)+((-4.*(b14*b34))+(((0.+2.j)*b44)+(b13*(2.+(4.*b44)))))));
    aux265=(4.*(b11*(1.+((-4.*(b24**2))+(b33+((-4.*((b24**2)*b33))+aux263))))))+(8.*(b12*((4.*(b14*(b24*(1.+b33))))+aux264)));
    aux266=(-8.*((b12**2)*(1.+(b33+((-2.*(b34**2))+((2.*b44)+(2.*(b33*b44))))))))+aux265;
    aux267=(4.*(b22*b44))+(((0.+-16.j)*(b13*(b22*b44)))+((-16.*((b13**2)*(b22*b44)))+aux266));
    aux268=(32.*(b13*(b14*(b22*b34))))+((2.*b44)+(((0.+-8.j)*(b13*b44))+((-8.*((b13**2)*b44))+aux267)));
    aux269=((0.+8.j)*(b14*b34))+((16.*(b13*(b14*b34)))+(((0.+16.j)*(b14*(b22*b34)))+aux268));
    aux270=(16.*((b13**2)*(b24**2)))+((-8.*((b14**2)*b33))+((-16.*((b14**2)*(b22*b33)))+aux269));
    aux271=(-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+(((0.+16.j)*(b13*(b24**2)))+aux270));
    aux272=(-16.*((b14**2)*b22))+((16.*((b14**2)*(b23**2)))+(((0.+-16.j)*(b14*(b23*b24)))+aux271));
    aux273=(-8.*(b14**2))+((2.*b22)+(((0.+-8.j)*(b13*b22))+((-8.*((b13**2)*b22))+aux272)));
    aux274=((0.+2.j)*b33)+((2.*(b24*b33))+(((0.+2.j)*(b22*(1.+(2.*b33))))+(-2.*(b23*b34))));
    aux275=b14*(((0.+1.j)+(((0.+-4.j)*(b23**2))+(b24+aux274)))-(b13*(1.+(2.*b22))));
    aux276=(-2.*b33)+(((0.+8.j)*(b23*b34))+((4.*(b34**2))+((-2.*b44)+(-4.*(b33*b44)))));
    aux277=-1.+((4.*(b14*b23))+((4.*(b24*((0.+-1.j)+(b13+((0.+-2.j)*b33)))))+aux276));
    aux278=(-4.*(b13*(b24*b34)))+((2.*aux275)+((4.*(b13*(b23*b44)))+(b12*aux277)));
    aux279=(2.*(b22*b34))+((4.*(b11*(b22*b34)))+(((0.+-8.j)*(b13*(b22*b34)))+aux278));
    aux280=b34+((2.*(b11*b34))+((-4.*((b12**2)*b34))+(((0.+-4.j)*(b13*b34))+aux279)));
    aux281=(-2.*(b23*b24))+((-4.*(b11*(b23*b24)))+(((0.+8.j)*(b13*(b23*b24)))+aux280));
    aux282=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux283=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux284=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux283)));
    aux285=2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux284)))));
    aux286=(-4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+((16.*(b12*aux282))+aux285);
    aux287=(-16.*((b13**2)*(b22*b44)))+((-8.*((b23**2)*b44))+((4.*(b33*b44))+((8.*(b22*(b33*b44)))+aux286)));
    aux288=(-8.*(b22*(b34**2)))+((2.*b44)+((-8.*((b13**2)*b44))+((4.*(b22*b44))+aux287)));
    aux289=(32.*(b13*(b14*(b22*b34))))+((16.*(b23*(b24*b34)))+((-4.*(b34**2))+aux288));
    aux290=(-16.*((b14**2)*(b22*b33)))+((-8.*((b24**2)*b33))+((16.*(b13*(b14*b34)))+aux289));
    aux291=(16.*((b13**2)*(b24**2)))+((2.*b33)+((-8.*((b14**2)*b33))+((4.*(b22*b33))+aux290)));
    aux292=(16.*((b14**2)*(b23**2)))+((-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+aux291));
    aux293=(2.*b22)+((-8.*((b13**2)*b22))+((-8.*((b14**2)*b22))+((-4.*(b23**2))+aux292)));
    aux294=1.+(((0.+4.j)*(b14*b34))+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))));
    aux295=((0.+-1.j)*(b13*(1.+((-4.*(b24**2))+((2.*b44)+(b22*(2.+(4.*b44))))))))+(b22*aux294);
    aux296=((0.+2.j)*(b14*b34))+(((0.+2.j)*(b12*(b23+((-2.*(b24*b34))+(2.*(b23*b44))))))+aux295);
    aux297=(-4.*((b23**2)*b44))+((2.*(b33*b44))+(np.conjugate((((0.+-4.j)*(b14*(b23*b24)))+aux296))));
    aux298=(8.*(b34**2))+((-4.*b44)+(-4.*((-4.*((b24**2)*b33))+((8.*(b23*(b24*b34)))+aux297))));
    aux299=-2.*((b12**2)*(1.+((2.*b33)+((-4.*(b34**2))+((2.*b44)+(4.*(b33*b44)))))));
    aux300=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux301=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux302=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux301)));
    aux303=(8.*(b12*aux300))+(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux302)))));
    aux304=(-4.*((b23**2)*b44))+((2.*(b33*b44))+((4.*(b22*(b33*b44)))+(aux299+aux303)));
    aux305=(-4.*((b13**2)*b44))+((2.*(b22*b44))+((-8.*((b13**2)*(b22*b44)))+aux304));
    aux306=(16.*(b13*(b14*(b22*b34))))+((8.*(b23*(b24*b34)))+((-4.*(b22*(b34**2)))+aux305));
    aux307=(-8.*((b14**2)*(b22*b33)))+((-4.*((b24**2)*b33))+((8.*(b13*(b14*b34)))+aux306));
    aux308=(8.*((b13**2)*(b24**2)))+((-4.*((b14**2)*b33))+((2.*(b22*b33))+aux307));
    aux309=(-4.*((b14**2)*b22))+((8.*((b14**2)*(b23**2)))+((-16.*(b13*(b14*(b23*b24))))+aux308));
    aux310=(-2.*b33)+((4.*(b34**2))+((-2.*b44)+(-2.*((-4.*((b13**2)*b22))+aux309))));
    aux311=(4.*(b13**2))+((4.*(b14**2))+((-2.*b22)+((4.*(b23**2))+((4.*(b24**2))+aux310))));
    aux312=-1.+((-2.+((8.*(b23**2))+((8.*(b24**2))+((-4.*b33)+aux298))))/(-1.+aux311));
    aux313=((0.+2.j)*(((2.*(b13*b23))+aux281)*s4))+((1.+((-4.*(b13**2))+((-4.*(b14**2))+aux293)))*(s1*aux312));
    aux314=((0.+2.j)*((b23+((2.*(b11*b23))+(((0.+-4.j)*(b13*b23))+aux261)))*s2))+(((0.+-1.j)*((1.+(((0.+-4.j)*b13)+((-4.*(b13**2))+aux273)))*s3))+aux313);
    aux315=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux316=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux317=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux316)));
    aux318=2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux317)))));
    aux319=(-4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+((16.*(b12*aux315))+aux318);
    aux320=(-16.*((b13**2)*(b22*b44)))+((-8.*((b23**2)*b44))+((4.*(b33*b44))+((8.*(b22*(b33*b44)))+aux319)));
    aux321=(-8.*(b22*(b34**2)))+((2.*b44)+((-8.*((b13**2)*b44))+((4.*(b22*b44))+aux320)));
    aux322=(32.*(b13*(b14*(b22*b34))))+((16.*(b23*(b24*b34)))+((-4.*(b34**2))+aux321));
    aux323=(-16.*((b14**2)*(b22*b33)))+((-8.*((b24**2)*b33))+((16.*(b13*(b14*b34)))+aux322));
    aux324=(16.*((b13**2)*(b24**2)))+((2.*b33)+((-8.*((b14**2)*b33))+((4.*(b22*b33))+aux323)));
    aux325=(16.*((b14**2)*(b23**2)))+((-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+aux324));
    aux326=(2.*b22)+((-8.*((b13**2)*b22))+((-8.*((b14**2)*b22))+((-4.*(b23**2))+aux325)));
    aux327=aux235+((s1*aux254)+(aux314/(1.+((-4.*(b13**2))+((-4.*(b14**2))+aux326)))));
    aux328=((aux57*s4)/(1.+((-4.*(b13**2))+((-4.*(b14**2))+aux69))))+(aux98+(aux132+(aux154+(aux176+aux327))));
    aux329=aux19+(((aux38*s3)/(1.+((-4.*(b13**2))+((-4.*(b14**2))+aux50))))+aux328);
    output=0.25*aux329;
    return output


def lineal2(V,B,R,S):
    v11,v12,v13,v14=separate(V,0)
    v21,v22,v23,v24=separate(V,1)
    v31,v32,v33,v34=separate(V,2)
    v41,v42,v43,v44=separate(V,3)
    b11,b12,b13,b14=separate(B,0)
    b21,b22,b23,b24=separate(B,1)
    b31,b32,b33,b34=separate(B,2)
    b41,b42,b43,b44=separate(B,3)
    r1,r2,r3,r4=R[0],R[1],R[2],R[3]
    s1,s2,s3,s4=S[0],S[1],S[2],S[3]
    aux0=(2.*b33)+(((0.+-8.j)*(b24*b33))+((b22*(2.+(4.*b33)))+((0.+8.j)*(b23*b34))));
    aux1=((0.+-2.j)*(b14*b34))+(((0.+-2.j)*(b23*b34))+((-4.*(b34**2))+((2.*b44)+(4.*(b33*b44)))));
    aux2=b13+(b24+((2.*(b24*b33))+((2.*(b13*b44))+((0.+-1.j)*(1.+((2.*b33)+aux1))))));
    aux3=(2.*(b23*b44))+((4.*(b11*(b23*b44)))+(((0.+-8.j)*(b13*(b23*b44)))+(-2.*(b12*aux2))));
    aux4=(b14*(1.+((-4.*(b23**2))+(((0.+-4.j)*b24)+((4.*(b13*b24))+aux0)))))+aux3;
    aux5=(-2.*(b24*b34))+((-4.*(b11*(b24*b34)))+(((0.+8.j)*(b13*(b24*b34)))+aux4));
    aux6=(-4.*((b14**2)*b23))+((4.*(b13*(b23*b24)))+((-2.*(b13*b34))+((-4.*(b13*(b22*b34)))+aux5)));
    aux7=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux8=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux9=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux8)));
    aux10=(16.*(b12*aux7))+(2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux9))))));
    aux11=(-4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+aux10;
    aux12=(-16.*((b13**2)*(b22*b44)))+((-8.*((b23**2)*b44))+((4.*(b33*b44))+((8.*(b22*(b33*b44)))+aux11)));
    aux13=(-8.*(b22*(b34**2)))+((2.*b44)+((-8.*((b13**2)*b44))+((4.*(b22*b44))+aux12)));
    aux14=(32.*(b13*(b14*(b22*b34))))+((16.*(b23*(b24*b34)))+((-4.*(b34**2))+aux13));
    aux15=(-16.*((b14**2)*(b22*b33)))+((-8.*((b24**2)*b33))+((16.*(b13*(b14*b34)))+aux14));
    aux16=(16.*((b13**2)*(b24**2)))+((2.*b33)+((-8.*((b14**2)*b33))+((4.*(b22*b33))+aux15)));
    aux17=(16.*((b14**2)*(b23**2)))+((-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+aux16));
    aux18=(2.*b22)+((-8.*((b13**2)*b22))+((-8.*((b14**2)*b22))+((-4.*(b23**2))+aux17)));
    aux19=((0.+2.j)*((b23+((2.*(b11*b23))+(((0.+-4.j)*(b13*b23))+aux6)))*s1))/(1.+((-4.*(b13**2))+((-4.*(b14**2))+aux18)));
    aux20=-2.*(b13*((b14+((2.*(b14*b22))+((2.*(b24*b34))+(-2.*(b23*b44)))))-b23));
    aux21=(4.*(b14*b23))+((4.*(b13*b24))+((-2.*b33)+((4.*(b34**2))+((-2.*b44)+(-4.*(b33*b44))))));
    aux22=(2.*(b22*b34))+((4.*(b11*(b22*b34)))+((-4.*(b14*(b23*b34)))+(aux20+(b12*(-1.+aux21)))));
    aux23=(4.*(b14*(b24*b33)))+(b34+((2.*(b11*b34))+((-4.*((b12**2)*b34))+aux22)));
    aux24=(0.+2.j)*((2.*(b14*b24))+((-2.*(b23*b24))+((-4.*(b11*(b23*b24)))+aux23)));
    aux25=(8.*(b12*(b13+((-2.*(b14*b34))+(2.*(b13*b44))))))+((-4.*(b23*(1.+((-4.*(b14**2))+((2.*b44)+(b11*(2.+(4.*b44))))))))+aux24);
    aux26=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux27=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux28=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux27)));
    aux29=(16.*(b12*aux26))+(2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux28))))));
    aux30=(-4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+aux29;
    aux31=(-16.*((b13**2)*(b22*b44)))+((-8.*((b23**2)*b44))+((4.*(b33*b44))+((8.*(b22*(b33*b44)))+aux30)));
    aux32=(-8.*(b22*(b34**2)))+((2.*b44)+((-8.*((b13**2)*b44))+((4.*(b22*b44))+aux31)));
    aux33=(32.*(b13*(b14*(b22*b34))))+((16.*(b23*(b24*b34)))+((-4.*(b34**2))+aux32));
    aux34=(-16.*((b14**2)*(b22*b33)))+((-8.*((b24**2)*b33))+((16.*(b13*(b14*b34)))+aux33));
    aux35=(16.*((b13**2)*(b24**2)))+((2.*b33)+((-8.*((b14**2)*b33))+((4.*(b22*b33))+aux34)));
    aux36=(16.*((b14**2)*(b23**2)))+((-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+aux35));
    aux37=(2.*b22)+((-8.*((b13**2)*b22))+((-8.*((b14**2)*b22))+((-4.*(b23**2))+aux36)));
    aux38=(((8.*(b24*((-2.*(b13*b14))+(b34+(2.*(b11*b34))))))+aux25)*s3)/(1.+((-4.*(b13**2))+((-4.*(b14**2))+aux37)));
    aux39=(-4.*(b13*(b14*b23)))+((4.*((b13**2)*b24))+(2.*(b12*(b14+((2.*(b14*b33))+(-2.*(b13*b34)))))));
    aux40=(2.*(b11*b44))+((-4.*((b13**2)*b44))+((2.*(b33*b44))+(4.*(b11*(b33*b44)))));
    aux41=(8.*(b13*(b14*b34)))+((-2.*(b34**2))+((-4.*(b11*(b34**2)))+(b44+aux40)));
    aux42=(-4.*(b11*(b22*b33)))+((-2.*((b14**2)*(1.+(2.*b33))))+(((b12**2)*(2.+(4.*b33)))+aux41));
    aux43=(-8.*(b12*(b13*b23)))+((2.*(b23**2))+((4.*(b11*(b23**2)))+((-2.*(b22*b33))+aux42)));
    aux44=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux45=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux46=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux45)));
    aux47=-2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux46)))));
    aux48=(4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+((-16.*(b12*aux44))+aux47);
    aux49=(16.*((b13**2)*(b22*b44)))+((8.*((b23**2)*b44))+((-4.*(b33*b44))+((-8.*(b22*(b33*b44)))+aux48)));
    aux50=(8.*(b22*(b34**2)))+((-2.*b44)+((8.*((b13**2)*b44))+((-4.*(b22*b44))+aux49)));
    aux51=(-32.*(b13*(b14*(b22*b34))))+((-16.*(b23*(b24*b34)))+((4.*(b34**2))+aux50));
    aux52=(16.*((b14**2)*(b22*b33)))+((8.*((b24**2)*b33))+((-16.*(b13*(b14*b34)))+aux51));
    aux53=(-16.*((b13**2)*(b24**2)))+((-2.*b33)+((8.*((b14**2)*b33))+((-4.*(b22*b33))+aux52)));
    aux54=(-16.*((b14**2)*(b23**2)))+((32.*(b13*(b14*(b23*b24))))+((4.*(b24**2))+aux53));
    aux55=(-2.*b22)+((8.*((b13**2)*b22))+((8.*((b14**2)*b22))+((4.*(b23**2))+aux54)));
    aux56=((0.+2.j)*(((-2.*(b11*b22))+((4.*((b13**2)*b22))+aux43))-b22))+((0.+1.j)*(-1.+((4.*(b13**2))+((4.*(b14**2))+aux55))));
    aux57=(4.*(aux39-((1.+(2.*b11))*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))))+aux56;
    aux58=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux59=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux60=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux59)));
    aux61=(16.*(b12*aux58))+(2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux60))))));
    aux62=(-4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+aux61;
    aux63=(-16.*((b13**2)*(b22*b44)))+((-8.*((b23**2)*b44))+((4.*(b33*b44))+((8.*(b22*(b33*b44)))+aux62)));
    aux64=(-8.*(b22*(b34**2)))+((2.*b44)+((-8.*((b13**2)*b44))+((4.*(b22*b44))+aux63)));
    aux65=(32.*(b13*(b14*(b22*b34))))+((16.*(b23*(b24*b34)))+((-4.*(b34**2))+aux64));
    aux66=(-16.*((b14**2)*(b22*b33)))+((-8.*((b24**2)*b33))+((16.*(b13*(b14*b34)))+aux65));
    aux67=(16.*((b13**2)*(b24**2)))+((2.*b33)+((-8.*((b14**2)*b33))+((4.*(b22*b33))+aux66)));
    aux68=(16.*((b14**2)*(b23**2)))+((-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+aux67));
    aux69=(2.*b22)+((-8.*((b13**2)*b22))+((-8.*((b14**2)*b22))+((-4.*(b23**2))+aux68)));
    aux70=((0.+-16.j)*(v11*(v23*v44)))+((8.*(v13*(v23*v44)))+(-8.*(v12*(v33*v44))));
    aux71=(-4.*(v12*v44))+(((0.+16.j)*(v12*(v13*v44)))+(((0.+-8.j)*(v23*v44))+aux70));
    aux72=((0.+16.j)*(v11*(v24*v34)))+((-8.*(v13*(v24*v34)))+((8.*(v12*(v34**2)))+aux71));
    aux73=(8.*(v11*(v22*v34)))+((-8.*(v14*(v23*v34)))+(((0.+8.j)*(v24*v34))+aux72));
    aux74=(-8.*((v12**2)*v34))+(((0.+-16.j)*(v12*(v14*v34)))+((4.*(v22*v34))+aux73));
    aux75=(-4.*(v12*v33))+((8.*(v14*(v24*v33)))+((2.*v34)+((4.*(v11*v34))+aux74)));
    aux76=((0.+-16.j)*(v13*(v14*v24)))+((-4.*(v23*v24))+((-8.*(v11*(v23*v24)))+aux75));
    aux77=((0.+16.j)*((v14**2)*v23))+((8.*(v12*(v13*v24)))+((4.*(v14*v24))+aux76));
    aux78=((0.+-4.j)*v23)+(((0.+-8.j)*(v11*v23))+((4.*(v13*v23))+((8.*(v12*(v14*v23)))+aux77)));
    aux79=(-2.*v12)+(((0.+8.j)*(v12*v13))+((-4.*(v13*v14))+((-8.*(v13*(v14*v22)))+aux78)));
    aux80=(v14*(v24+((2.*(v24*v33))+(-2.*(v23*v34)))))+(v13*(v23+((-2.*(v24*v34))+(2.*(v23*v44)))));
    aux81=(-4.*((v23**2)*(1.+(2.*v44))))+(v22*(2.+((-8.*(v34**2))+((4.*v44)+(v33*(4.+(8.*v44)))))));
    aux82=(16.*(v23*(v24*v34)))+((-4.*(v34**2))+((2.*v44)+((4.*(v33*v44))+aux81)));
    aux83=-2.*(v11*(1.+((-4.*(v24**2))+((2.*v33)+((-8.*((v24**2)*v33))+aux82)))));
    aux84=(4.*((v12**2)*(1.+((-4.*(v34**2))+((2.*v44)+(v33*(2.+(4.*v44))))))))+((-16.*(v12*aux80))+aux83);
    aux85=(16.*((v13**2)*(v22*v44)))+((8.*((v23**2)*v44))+((-4.*(v33*v44))+((-8.*(v22*(v33*v44)))+aux84)));
    aux86=(8.*(v22*(v34**2)))+((-2.*v44)+((8.*((v13**2)*v44))+((-4.*(v22*v44))+aux85)));
    aux87=(-32.*(v13*(v14*(v22*v34))))+((-16.*(v23*(v24*v34)))+((4.*(v34**2))+aux86));
    aux88=(16.*((v14**2)*(v22*v33)))+((8.*((v24**2)*v33))+((-16.*(v13*(v14*v34)))+aux87));
    aux89=(-16.*((v13**2)*(v24**2)))+((-2.*v33)+((8.*((v14**2)*v33))+((-4.*(v22*v33))+aux88)));
    aux90=(-16.*((v14**2)*(v23**2)))+((32.*(v13*(v14*(v23*v24))))+((4.*(v24**2))+aux89));
    aux91=(-2.*v22)+((8.*((v13**2)*v22))+((8.*((v14**2)*v22))+((4.*(v23**2))+aux90)));
    aux92=(8.*(v11*(v23*v44)))+(((0.+16.j)*(v13*(v23*v44)))+((0.+-16.j)*(v12*(v33*v44))));
    aux93=((0.+16.j)*(v12*(v34**2)))+(((0.+-8.j)*(v12*v44))+((-8.*(v12*(v13*v44)))+((4.*(v23*v44))+aux92)));
    aux94=(-4.*(v24*v34))+((-8.*(v11*(v24*v34)))+(((0.+-16.j)*(v13*(v24*v34)))+aux93));
    aux95=(-8.*(v13*(v22*v34)))+((8.*(v12*(v23*v34)))+(((0.+-16.j)*(v14*(v23*v34)))+aux94));
    aux96=((0.+16.j)*(v14*(v24*v33)))+((-4.*(v13*v34))+((8.*(v12*(v14*v34)))+aux95));
    aux97=((0.+-8.j)*(v12*v33))+((4.*(v14*v33))+((8.*(v14*(v22*v33)))+((-8.*(v12*(v24*v33)))+aux96)));
    aux98=((0.+8.j)*(v14*v24))+((8.*(v13*(v14*v24)))+((8.*(v13*(v23*v24)))+aux97));
    aux99=((0.+8.j)*(v13*v23))+((-8.*((v14**2)*v23))+((-8.*(v14*(v23**2)))+((-4.*(v12*v24))+aux98)));
    aux100=(-4.*(v12*v13))+((2.*v14)+((4.*(v14*v22))+((2.*v23)+((4.*(v11*v23))+aux99))));
    aux101=(v14*(v24+((2.*(v24*v33))+(-2.*(v23*v34)))))+(v13*(v23+((-2.*(v24*v34))+(2.*(v23*v44)))));
    aux102=(-4.*((v23**2)*(1.+(2.*v44))))+(v22*(2.+((-8.*(v34**2))+((4.*v44)+(v33*(4.+(8.*v44)))))));
    aux103=(16.*(v23*(v24*v34)))+((-4.*(v34**2))+((2.*v44)+((4.*(v33*v44))+aux102)));
    aux104=-2.*(v11*(1.+((-4.*(v24**2))+((2.*v33)+((-8.*((v24**2)*v33))+aux103)))));
    aux105=(4.*((v12**2)*(1.+((-4.*(v34**2))+((2.*v44)+(v33*(2.+(4.*v44))))))))+((-16.*(v12*aux101))+aux104);
    aux106=(16.*((v13**2)*(v22*v44)))+((8.*((v23**2)*v44))+((-4.*(v33*v44))+((-8.*(v22*(v33*v44)))+aux105)));
    aux107=(8.*(v22*(v34**2)))+((-2.*v44)+((8.*((v13**2)*v44))+((-4.*(v22*v44))+aux106)));
    aux108=(-32.*(v13*(v14*(v22*v34))))+((-16.*(v23*(v24*v34)))+((4.*(v34**2))+aux107));
    aux109=(16.*((v14**2)*(v22*v33)))+((8.*((v24**2)*v33))+((-16.*(v13*(v14*v34)))+aux108));
    aux110=(-16.*((v13**2)*(v24**2)))+((-2.*v33)+((8.*((v14**2)*v33))+((-4.*(v22*v33))+aux109)));
    aux111=(-16.*((v14**2)*(v23**2)))+((32.*(v13*(v14*(v23*v24))))+((4.*(v24**2))+aux110));
    aux112=(-2.*v22)+((8.*((v13**2)*v22))+((8.*((v14**2)*v22))+((4.*(v23**2))+aux111)));
    aux113=((0.+1.j)*(r1*(((0.+-4.j)*v12)+aux100)))/(-1.+((4.*(v13**2))+((4.*(v14**2))+aux112)));
    aux114=((0.+16.j)*((v12**2)*(v33*v44)))+(((0.+-8.j)*(v22*(v33*v44)))+((0.+-16.j)*(v11*(v22*(v33*v44)))));
    aux115=((0.+16.j)*(v11*((v23**2)*v44)))+(((0.+-12.j)*(v33*v44))+(((0.+-24.j)*(v11*(v33*v44)))+aux114));
    aux116=((0.+16.j)*((v13**2)*(v22*v44)))+(((0.+-32.j)*(v12*(v13*(v23*v44))))+(((0.+8.j)*((v23**2)*v44))+aux115));
    aux117=((0.+24.j)*((v13**2)*v44))+(((0.+-4.j)*(v22*v44))+(((0.+-8.j)*(v11*(v22*v44)))+aux116));
    aux118=((0.+-6.j)*v44)+(((0.+-12.j)*(v11*v44))+(((0.+8.j)*((v12**2)*v44))+aux117));
    aux119=((0.+-16.j)*((v12**2)*(v34**2)))+(((0.+8.j)*(v22*(v34**2)))+(((0.+16.j)*(v11*(v22*(v34**2))))+aux118));
    aux120=((0.+-32.j)*(v11*(v23*(v24*v34))))+(((0.+12.j)*(v34**2))+(((0.+24.j)*(v11*(v34**2)))+aux119));
    aux121=((0.+32.j)*(v12*(v13*(v24*v34))))+(((0.+-16.j)*(v23*(v24*v34)))+aux120);
    aux122=(8.*(v23*v34))+((16.*(v11*(v23*v34)))+(((0.+32.j)*(v12*(v14*(v23*v34))))+aux121));
    aux123=((0.+-48.j)*(v13*(v14*v34)))+(((0.+-32.j)*(v13*(v14*(v22*v34))))+aux122);
    aux124=((0.+8.j)*((v24**2)*v33))+(((0.+16.j)*(v11*((v24**2)*v33)))+((-16.*(v12*(v13*v34)))+aux123));
    aux125=(-8.*(v24*v33))+((-16.*(v11*(v24*v33)))+(((0.+-32.j)*(v12*(v14*(v24*v33))))+aux124));
    aux126=((0.+-4.j)*(v22*v33))+(((0.+-8.j)*(v11*(v22*v33)))+(((0.+16.j)*((v14**2)*(v22*v33)))+aux125));
    aux127=((0.+8.j)*((v12**2)*v33))+((16.*(v12*(v14*v33)))+(((0.+24.j)*((v14**2)*v33))+aux126));
    aux128=((0.+-16.j)*((v13**2)*(v24**2)))+(((0.+-6.j)*v33)+(((0.+-12.j)*(v11*v33))+aux127));
    aux129=((0.+32.j)*(v13*(v14*(v23*v24))))+(((0.+4.j)*(v24**2))+(((0.+8.j)*(v11*(v24**2)))+aux128));
    aux130=(-8.*(v11*v24))+((16.*((v13**2)*v24))+(((0.+-16.j)*(v12*(v14*v24)))+aux129));
    aux131=((0.+8.j)*(v11*(v23**2)))+(((0.+-16.j)*((v14**2)*(v23**2)))+((-4.*v24)+aux130));
    aux132=((0.+-16.j)*(v12*(v13*v23)))+((-16.*(v13*(v14*v23)))+(((0.+4.j)*(v23**2))+aux131));
    aux133=((0.+-4.j)*(v11*v22))+(((0.+8.j)*((v13**2)*v22))+(((0.+8.j)*((v14**2)*v22))+aux132));
    aux134=((0.+12.j)*(v13**2))+((8.*(v12*v14))+(((0.+12.j)*(v14**2))+(((0.+-2.j)*v22)+aux133)));
    aux135=(0.+1.j)*(r2*((0.+-3.j)+(((0.+-6.j)*v11)+(((0.+4.j)*(v12**2))+aux134))));
    aux136=(v14*(v24+((2.*(v24*v33))+(-2.*(v23*v34)))))+(v13*(v23+((-2.*(v24*v34))+(2.*(v23*v44)))));
    aux137=(-4.*((v23**2)*(1.+(2.*v44))))+(v22*(2.+((-8.*(v34**2))+((4.*v44)+(v33*(4.+(8.*v44)))))));
    aux138=(16.*(v23*(v24*v34)))+((-4.*(v34**2))+((2.*v44)+((4.*(v33*v44))+aux137)));
    aux139=2.*(v11*(1.+((-4.*(v24**2))+((2.*v33)+((-8.*((v24**2)*v33))+aux138)))));
    aux140=(-4.*((v12**2)*(1.+((-4.*(v34**2))+((2.*v44)+(v33*(2.+(4.*v44))))))))+((16.*(v12*aux136))+aux139);
    aux141=(-16.*((v13**2)*(v22*v44)))+((-8.*((v23**2)*v44))+((4.*(v33*v44))+((8.*(v22*(v33*v44)))+aux140)));
    aux142=(-8.*(v22*(v34**2)))+((2.*v44)+((-8.*((v13**2)*v44))+((4.*(v22*v44))+aux141)));
    aux143=(32.*(v13*(v14*(v22*v34))))+((16.*(v23*(v24*v34)))+((-4.*(v34**2))+aux142));
    aux144=(-16.*((v14**2)*(v22*v33)))+((-8.*((v24**2)*v33))+((16.*(v13*(v14*v34)))+aux143));
    aux145=(16.*((v13**2)*(v24**2)))+((2.*v33)+((-8.*((v14**2)*v33))+((4.*(v22*v33))+aux144)));
    aux146=(16.*((v14**2)*(v23**2)))+((-32.*(v13*(v14*(v23*v24))))+((-4.*(v24**2))+aux145));
    aux147=(2.*v22)+((-8.*((v13**2)*v22))+((-8.*((v14**2)*v22))+((-4.*(v23**2))+aux146)));
    aux148=(-16.*((v12**2)*(v33*v44)))+((8.*(v22*(v33*v44)))+(16.*(v11*(v22*(v33*v44)))));
    aux149=(32.*(v12*(v13*(v23*v44))))+((-8.*((v23**2)*v44))+((-16.*(v11*((v23**2)*v44)))+aux148));
    aux150=(4.*(v22*v44))+((8.*(v11*(v22*v44)))+((-16.*((v13**2)*(v22*v44)))+aux149));
    aux151=(-8.*(v22*(v34**2)))+((-16.*(v11*(v22*(v34**2))))+((-8.*((v12**2)*v44))+aux150));
    aux152=(16.*(v23*(v24*v34)))+((32.*(v11*(v23*(v24*v34))))+((16.*((v12**2)*(v34**2)))+aux151));
    aux153=((0.+-16.j)*(v11*(v23*v34)))+((-32.*(v12*(v14*(v23*v34))))+((-32.*(v12*(v13*(v24*v34))))+aux152));
    aux154=((0.+16.j)*(v12*(v13*v34)))+((32.*(v13*(v14*(v22*v34))))+(((0.+-8.j)*(v23*v34))+aux153));
    aux155=(32.*(v12*(v14*(v24*v33))))+((-8.*((v24**2)*v33))+((-16.*(v11*((v24**2)*v33)))+aux154));
    aux156=(-16.*((v14**2)*(v22*v33)))+(((0.+8.j)*(v24*v33))+(((0.+16.j)*(v11*(v24*v33)))+aux155));
    aux157=((0.+-16.j)*(v12*(v14*v33)))+((8.*(v22*v33))+((16.*(v11*(v22*v33)))+aux156));
    aux158=(16.*((v13**2)*(v24**2)))+((2.*v33)+((4.*(v11*v33))+((-16.*((v12**2)*v33))+aux157)));
    aux159=(-32.*(v13*(v14*(v23*v24))))+((-4.*(v24**2))+((-8.*(v11*(v24**2)))+aux158));
    aux160=((0.+8.j)*(v11*v24))+(((0.+-16.j)*((v13**2)*v24))+((16.*(v12*(v14*v24)))+aux159));
    aux161=(-16.*(v11*(v23**2)))+((16.*((v14**2)*(v23**2)))+(((0.+4.j)*v24)+aux160));
    aux162=(32.*(v12*(v13*v23)))+(((0.+16.j)*(v13*(v14*v23)))+((-8.*(v23**2))+aux161));
    aux163=(4.*v22)+((8.*(v11*v22))+((-16.*((v13**2)*v22))+((-8.*((v14**2)*v22))+aux162)));
    aux164=(2.*v11)+((-8.*(v12**2))+((-4.*(v13**2))+(((0.+-8.j)*(v12*v14))+aux163)));
    aux165=(v14*(v24+((2.*(v24*v33))+(-2.*(v23*v34)))))+(v13*(v23+((-2.*(v24*v34))+(2.*(v23*v44)))));
    aux166=(-4.*((v23**2)*(1.+(2.*v44))))+(v22*(2.+((-8.*(v34**2))+((4.*v44)+(v33*(4.+(8.*v44)))))));
    aux167=(16.*(v23*(v24*v34)))+((-4.*(v34**2))+((2.*v44)+((4.*(v33*v44))+aux166)));
    aux168=2.*(v11*(1.+((-4.*(v24**2))+((2.*v33)+((-8.*((v24**2)*v33))+aux167)))));
    aux169=(-4.*((v12**2)*(1.+((-4.*(v34**2))+((2.*v44)+(v33*(2.+(4.*v44))))))))+((16.*(v12*aux165))+aux168);
    aux170=(-16.*((v13**2)*(v22*v44)))+((-8.*((v23**2)*v44))+((4.*(v33*v44))+((8.*(v22*(v33*v44)))+aux169)));
    aux171=(-8.*(v22*(v34**2)))+((2.*v44)+((-8.*((v13**2)*v44))+((4.*(v22*v44))+aux170)));
    aux172=(32.*(v13*(v14*(v22*v34))))+((16.*(v23*(v24*v34)))+((-4.*(v34**2))+aux171));
    aux173=(-16.*((v14**2)*(v22*v33)))+((-8.*((v24**2)*v33))+((16.*(v13*(v14*v34)))+aux172));
    aux174=(16.*((v13**2)*(v24**2)))+((2.*v33)+((-8.*((v14**2)*v33))+((4.*(v22*v33))+aux173)));
    aux175=(16.*((v14**2)*(v23**2)))+((-32.*(v13*(v14*(v23*v24))))+((-4.*(v24**2))+aux174));
    aux176=(2.*v22)+((-8.*((v13**2)*v22))+((-8.*((v14**2)*v22))+((-4.*(v23**2))+aux175)));
    aux177=((0.+1.j)*(r4*(1.+aux164)))/(1.+((-4.*(v13**2))+((-4.*(v14**2))+aux176)));
    aux178=v14*((0.+1.j)+(((0.+2.j)*v33)+((-2.*(v24*(1.+(2.*v33))))+(4.*(v23*v34)))));
    aux179=v12*(aux178+(-2.*(v13*((((0.+1.j)+(-2.*v24))*v34)+(2.*(v23*(1.+v44)))))));
    aux180=(-8.*((v23**2)*(1.+v44)))+(4.*(v22*(1.+((-2.*(v34**2))+(v44+(2.*(v33*(1.+v44))))))));
    aux181=((8.*(v23*(((0.+-1.j)+(2.*v24))*v34)))+aux180)-(((((0.+1.j)+(-2.*v24))**2))*(1.+(2.*v33)));
    aux182=(8.*((v12**2)*(1.+((-2.*(v34**2))+(v44+(2.*(v33*(1.+v44))))))))+((8.*aux179)+(-2.*(v11*aux181)));
    aux183=(16.*((v13**2)*(v22*v44)))+((8.*((v23**2)*v44))+((-8.*(v22*(v33*v44)))+aux182));
    aux184=((0.+8.j)*(v23*v34))+((-16.*(v23*(v24*v34)))+((8.*(v22*(v34**2)))+((-4.*(v22*v44))+aux183)));
    aux185=((0.+-8.j)*(v24*v33))+((8.*((v24**2)*v33))+((-32.*(v13*(v14*(v22*v34))))+aux184));
    aux186=(-16.*((v13**2)*(v24**2)))+((-2.*v33)+((-8.*(v22*v33))+((16.*((v14**2)*(v22*v33)))+aux185)));
    aux187=((0.+16.j)*((v13**2)*v24))+((32.*(v13*(v14*(v23*v24))))+((4.*(v24**2))+aux186));
    aux188=((0.+-16.j)*(v13*(v14*v23)))+((8.*(v23**2))+((-16.*((v14**2)*(v23**2)))+(((0.+-4.j)*v24)+aux187)));
    aux189=(4.*(v13**2))+((-4.*v22)+((16.*((v13**2)*v22))+((8.*((v14**2)*v22))+aux188)));
    aux190=v14*((0.+1.j)+(((0.+2.j)*v33)+((-2.*(v24*(1.+(2.*v33))))+(4.*(v23*v34)))));
    aux191=v12*(aux190+(-2.*(v13*(v23+((((0.+1.j)+(-2.*v24))*v34)+(2.*(v23*v44)))))));
    aux192=(-4.*((v23**2)*(1.+(2.*v44))))+(v22*(2.+((-8.*(v34**2))+((4.*v44)+(v33*(4.+(8.*v44)))))));
    aux193=(8.*(v23*(((0.+-1.j)+(2.*v24))*v34)))+((4.*(v34**2))+((-2.*v44)+((-4.*(v33*v44))+aux192)));
    aux194=(-4.*(v24**2))+((-2.*v33)+(((0.+8.j)*(v24*v33))+((-8.*((v24**2)*v33))+aux193)));
    aux195=(-4.*((v12**2)*(1.+((-4.*(v34**2))+((2.*v44)+(v33*(2.+(4.*v44))))))))+((-8.*aux191)+(2.*(v11*(-1.+(((0.+4.j)*v24)+aux194)))));
    aux196=(-16.*((v13**2)*(v22*v44)))+((-8.*((v23**2)*v44))+((-4.*(v33*v44))+((8.*(v22*(v33*v44)))+aux195)));
    aux197=(-8.*(v22*(v34**2)))+((-2.*v44)+((8.*((v13**2)*v44))+((4.*(v22*v44))+aux196)));
    aux198=(32.*(v13*(v14*(v22*v34))))+(((0.+-8.j)*(v23*v34))+((16.*(v23*(v24*v34)))+((4.*(v34**2))+aux197)));
    aux199=((0.+8.j)*(v24*v33))+((-8.*((v24**2)*v33))+((-16.*(v13*(v14*v34)))+aux198));
    aux200=(8.*((v14**2)*v33))+((4.*(v22*v33))+((-16.*((v14**2)*(v22*v33)))+aux199));
    aux201=(-32.*(v13*(v14*(v23*v24))))+((-4.*(v24**2))+((16.*((v13**2)*(v24**2)))+((-2.*v33)+aux200)));
    aux202=(16.*((v14**2)*(v23**2)))+(((0.+4.j)*v24)+(((0.+-16.j)*((v13**2)*v24))+aux201));
    aux203=(-8.*((v14**2)*v22))+(((0.+16.j)*(v13*(v14*v23)))+((-4.*(v23**2))+aux202));
    aux204=-1.+((4.*(v13**2))+((4.*(v14**2))+((2.*v22)+((-8.*((v13**2)*v22))+aux203))));
    aux205=v14+((2.*(v14*v22))+(((0.+4.j)*(v14*v24))+((2.*(v24*v34))+(-2.*(v23*v44)))));
    aux206=(4.*(v34**2))+((4.*(v13*((0.+1.j)+(v24+((0.+2.j)*v44)))))+((-2.*v44)+(-4.*(v33*v44))));
    aux207=(-2.*(v13*(aux205-v23)))+(v12*(-1.+((4.*(v14*v23))+((-2.*v33)+(((0.+-8.j)*(v14*v34))+aux206)))));
    aux208=((0.+8.j)*(v11*(v24*v34)))+(((0.+-4.j)*(v23*v44))+(((0.+-8.j)*(v11*(v23*v44)))+aux207));
    aux209=(4.*(v11*(v22*v34)))+((-4.*(v14*(v23*v34)))+(((0.+4.j)*(v24*v34))+aux208));
    aux210=(4.*(v14*(v24*v33)))+(v34+((2.*(v11*v34))+((-4.*((v12**2)*v34))+((2.*(v22*v34))+aux209))));
    aux211=((0.+8.j)*((v14**2)*v23))+((2.*(v14*v24))+((-2.*(v23*v24))+((-4.*(v11*(v23*v24)))+aux210)));
    aux212=(2.*v33)+(((0.+8.j)*(v24*v33))+((v22*(2.+(4.*v33)))+((0.+-8.j)*(v23*v34))));
    aux213=((0.+2.j)*(v14*v34))+(((0.+2.j)*(v23*v34))+((-4.*(v34**2))+((2.*v44)+(4.*(v33*v44)))));
    aux214=v24+((2.*(v24*v33))+((2.*(v13*v44))+((0.+1.j)*(1.+((2.*v33)+aux213)))));
    aux215=(4.*(v11*(v23*v44)))+(((0.+8.j)*(v13*(v23*v44)))+(-2.*(v12*(v13+aux214))));
    aux216=(v14*(1.+((-4.*(v23**2))+(((0.+4.j)*v24)+((4.*(v13*v24))+aux212)))))+((2.*(v23*v44))+aux215);
    aux217=(-2.*(v24*v34))+((-4.*(v11*(v24*v34)))+(((0.+-8.j)*(v13*(v24*v34)))+aux216));
    aux218=(-4.*((v14**2)*v23))+((4.*(v13*(v23*v24)))+((-2.*(v13*v34))+((-4.*(v13*(v22*v34)))+aux217)));
    aux219=(r3*(((0.+-2.j)*v23)+(((0.+-4.j)*(v11*v23))+aux211)))+(r1*(v23+((2.*(v11*v23))+(((0.+4.j)*(v13*v23))+aux218))));
    aux220=(v14*(v24+((2.*(v24*v33))+(-2.*(v23*v34)))))+(v13*(v23+((-2.*(v24*v34))+(2.*(v23*v44)))));
    aux221=(-4.*((v23**2)*(1.+(2.*v44))))+(v22*(2.+((-8.*(v34**2))+((4.*v44)+(v33*(4.+(8.*v44)))))));
    aux222=(16.*(v23*(v24*v34)))+((-4.*(v34**2))+((2.*v44)+((4.*(v33*v44))+aux221)));
    aux223=-2.*(v11*(1.+((-4.*(v24**2))+((2.*v33)+((-8.*((v24**2)*v33))+aux222)))));
    aux224=(4.*((v12**2)*(1.+((-4.*(v34**2))+((2.*v44)+(v33*(2.+(4.*v44))))))))+((-16.*(v12*aux220))+aux223);
    aux225=(16.*((v13**2)*(v22*v44)))+((8.*((v23**2)*v44))+((-4.*(v33*v44))+((-8.*(v22*(v33*v44)))+aux224)));
    aux226=(8.*(v22*(v34**2)))+((-2.*v44)+((8.*((v13**2)*v44))+((-4.*(v22*v44))+aux225)));
    aux227=(-32.*(v13*(v14*(v22*v34))))+((-16.*(v23*(v24*v34)))+((4.*(v34**2))+aux226));
    aux228=(16.*((v14**2)*(v22*v33)))+((8.*((v24**2)*v33))+((-16.*(v13*(v14*v34)))+aux227));
    aux229=(-16.*((v13**2)*(v24**2)))+((-2.*v33)+((8.*((v14**2)*v33))+((-4.*(v22*v33))+aux228)));
    aux230=(-16.*((v14**2)*(v23**2)))+((32.*(v13*(v14*(v23*v24))))+((4.*(v24**2))+aux229));
    aux231=(-2.*v22)+((8.*((v13**2)*v22))+((8.*((v14**2)*v22))+((4.*(v23**2))+aux230)));
    aux232=(((0.+1.j)*(r4*(-1.+aux189)))+((r2*aux204)+((0.+2.j)*aux219)))/(-1.+((4.*(v13**2))+((4.*(v14**2))+aux231)));
    aux233=((0.+-4.j)*(b24*(1.+(2.*b33))))+(((0.+8.j)*(b23*b34))+((-8.*(b34**2))+((4.*b44)+(8.*(b33*b44)))));
    aux234=((b13**2)*(-4.+(((0.+8.j)*b24)+(-8.*b44))))+(b11*(2.+((4.*b33)+aux233)));
    aux235=((0.+4.j)*(b23*b34))+(((0.+-8.j)*(b13*((b14*b23)+((b12*b34)+((0.+2.j)*(b14*b34))))))+aux234);
    aux236=((0.+4.j)*(b12*b14))+(((0.+8.j)*(b12*(b14*b33)))+(((0.+-4.j)*(b24*b33))+aux235));
    aux237=(-8.*((b14**2)*b33))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+(np.conjugate(aux236)))));
    aux238=-2.*((b12**2)*(1.+((2.*b33)+((-4.*(b34**2))+((2.*b44)+(4.*(b33*b44)))))));
    aux239=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux240=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux241=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux240)));
    aux242=(8.*(b12*aux239))+(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux241)))));
    aux243=(-4.*((b23**2)*b44))+((2.*(b33*b44))+((4.*(b22*(b33*b44)))+(aux238+aux242)));
    aux244=(-4.*((b13**2)*b44))+((2.*(b22*b44))+((-8.*((b13**2)*(b22*b44)))+aux243));
    aux245=(16.*(b13*(b14*(b22*b34))))+((8.*(b23*(b24*b34)))+((-4.*(b22*(b34**2)))+aux244));
    aux246=(-8.*((b14**2)*(b22*b33)))+((-4.*((b24**2)*b33))+((8.*(b13*(b14*b34)))+aux245));
    aux247=(8.*((b13**2)*(b24**2)))+((-4.*((b14**2)*b33))+((2.*(b22*b33))+aux246));
    aux248=(-4.*((b14**2)*b22))+((8.*((b14**2)*(b23**2)))+((-16.*(b13*(b14*(b23*b24))))+aux247));
    aux249=(-2.*b33)+((4.*(b34**2))+((-2.*b44)+(-2.*((-4.*((b13**2)*b22))+aux248))));
    aux250=(4.*(b13**2))+((4.*(b14**2))+((-2.*b22)+((4.*(b23**2))+((4.*(b24**2))+aux249))));
    aux251=((8.*(b14**2))+(((0.+-4.j)*b24)+(-2.*(1.+((2.*b33)+aux237)))))/(-1.+aux250);
    aux252=(2.*b33)+(((0.+-8.j)*(b24*b33))+((b22*(2.+(4.*b33)))+((0.+8.j)*(b23*b34))));
    aux253=((0.+-2.j)*(b14*b34))+(((0.+-2.j)*(b23*b34))+((-4.*(b34**2))+((2.*b44)+(4.*(b33*b44)))));
    aux254=b24+((2.*(b24*b33))+((2.*(b13*b44))+((0.+-1.j)*(1.+((2.*b33)+aux253)))));
    aux255=(4.*(b11*(b23*b44)))+(((0.+-8.j)*(b13*(b23*b44)))+(-2.*(b12*(b13+aux254))));
    aux256=(b14*(1.+((-4.*(b23**2))+(((0.+-4.j)*b24)+((4.*(b13*b24))+aux252)))))+((2.*(b23*b44))+aux255);
    aux257=(-2.*(b24*b34))+((-4.*(b11*(b24*b34)))+(((0.+8.j)*(b13*(b24*b34)))+aux256));
    aux258=(-4.*((b14**2)*b23))+((4.*(b13*(b23*b24)))+((-2.*(b13*b34))+((-4.*(b13*(b22*b34)))+aux257)));
    aux259=(2.*(b14*b22))+(((0.+-4.j)*(b14*b24))+((2.*(b24*b34))+(-2.*(b23*b44))));
    aux260=(4.*(b13*((0.+-1.j)+(b24+((0.+-2.j)*b44)))))+((-2.*b44)+(-4.*(b33*b44)));
    aux261=(4.*(b14*b23))+((-2.*b33)+(((0.+8.j)*(b14*b34))+((4.*(b34**2))+aux260)));
    aux262=((0.+8.j)*(b11*(b23*b44)))+((-2.*(b13*((b14+aux259)-b23)))+(b12*(-1.+aux261)));
    aux263=((0.+-4.j)*(b24*b34))+(((0.+-8.j)*(b11*(b24*b34)))+(((0.+4.j)*(b23*b44))+aux262));
    aux264=(-4.*((b12**2)*b34))+((2.*(b22*b34))+((4.*(b11*(b22*b34)))+((-4.*(b14*(b23*b34)))+aux263)));
    aux265=(-4.*(b11*(b23*b24)))+((4.*(b14*(b24*b33)))+(b34+((2.*(b11*b34))+aux264)));
    aux266=((0.+4.j)*(b11*b23))+(((0.+-8.j)*((b14**2)*b23))+((2.*(b14*b24))+((-2.*(b23*b24))+aux265)));
    aux267=(b14*((0.+1.j)+(((0.+2.j)*b33)+((b24*(2.+(4.*b33)))+(-4.*(b23*b34))))))+(4.*(b13*(b23*(1.+b44))));
    aux268=(-8.*((b23**2)*(1.+b44)))+(4.*(b22*(1.+((-2.*(b34**2))+(b44+(2.*(b33*(1.+b44))))))));
    aux269=((8.*(b23*(((0.+1.j)+(2.*b24))*b34)))+aux268)-(((((0.+1.j)+(2.*b24))**2))*(1.+(2.*b33)));
    aux270=(-8.*((b12**2)*(1.+((-2.*(b34**2))+(b44+(2.*(b33*(1.+b44))))))))+(2.*(b11*aux269));
    aux271=(8.*(b22*(b33*b44)))+((8.*(b12*((-2.*(b13*(((0.+1.j)+(2.*b24))*b34)))+aux267)))+aux270);
    aux272=(4.*(b22*b44))+((-16.*((b13**2)*(b22*b44)))+((-8.*((b23**2)*b44))+aux271));
    aux273=((0.+8.j)*(b23*b34))+((16.*(b23*(b24*b34)))+((-8.*(b22*(b34**2)))+aux272));
    aux274=((0.+-8.j)*(b24*b33))+((-8.*((b24**2)*b33))+((32.*(b13*(b14*(b22*b34))))+aux273));
    aux275=(16.*((b13**2)*(b24**2)))+((2.*b33)+((8.*(b22*b33))+((-16.*((b14**2)*(b22*b33)))+aux274)));
    aux276=((0.+16.j)*((b13**2)*b24))+((-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+aux275));
    aux277=((0.+-16.j)*(b13*(b14*b23)))+((-8.*(b23**2))+((16.*((b14**2)*(b23**2)))+(((0.+-4.j)*b24)+aux276)));
    aux278=(-4.*(b13**2))+((4.*b22)+((-16.*((b13**2)*b22))+((-8.*((b14**2)*b22))+aux277)));
    aux279=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux280=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux281=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux280)));
    aux282=2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux281)))));
    aux283=(-4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+((16.*(b12*aux279))+aux282);
    aux284=(-16.*((b13**2)*(b22*b44)))+((-8.*((b23**2)*b44))+((4.*(b33*b44))+((8.*(b22*(b33*b44)))+aux283)));
    aux285=(-8.*(b22*(b34**2)))+((2.*b44)+((-8.*((b13**2)*b44))+((4.*(b22*b44))+aux284)));
    aux286=(32.*(b13*(b14*(b22*b34))))+((16.*(b23*(b24*b34)))+((-4.*(b34**2))+aux285));
    aux287=(-16.*((b14**2)*(b22*b33)))+((-8.*((b24**2)*b33))+((16.*(b13*(b14*b34)))+aux286));
    aux288=(16.*((b13**2)*(b24**2)))+((2.*b33)+((-8.*((b14**2)*b33))+((4.*(b22*b33))+aux287)));
    aux289=(16.*((b14**2)*(b23**2)))+((-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+aux288));
    aux290=(2.*b22)+((-8.*((b13**2)*b22))+((-8.*((b14**2)*b22))+((-4.*(b23**2))+aux289)));
    aux291=((0.+-4.j)*(b24*(1.+(2.*b33))))+(((0.+8.j)*(b23*b34))+((-8.*(b34**2))+((4.*b44)+(8.*(b33*b44)))));
    aux292=((b13**2)*(-4.+(((0.+8.j)*b24)+(-8.*b44))))+(b11*(2.+((4.*b33)+aux291)));
    aux293=((0.+4.j)*(b23*b34))+(((0.+-8.j)*(b13*((b14*b23)+((b12*b34)+((0.+2.j)*(b14*b34))))))+aux292);
    aux294=((0.+4.j)*(b12*b14))+(((0.+8.j)*(b12*(b14*b33)))+(((0.+-4.j)*(b24*b33))+aux293));
    aux295=(-8.*((b14**2)*b33))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+(np.conjugate(aux294)))));
    aux296=-2.*((b12**2)*(1.+((2.*b33)+((-4.*(b34**2))+((2.*b44)+(4.*(b33*b44)))))));
    aux297=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux298=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux299=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux298)));
    aux300=(8.*(b12*aux297))+(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux299)))));
    aux301=(-4.*((b23**2)*b44))+((2.*(b33*b44))+((4.*(b22*(b33*b44)))+(aux296+aux300)));
    aux302=(-4.*((b13**2)*b44))+((2.*(b22*b44))+((-8.*((b13**2)*(b22*b44)))+aux301));
    aux303=(16.*(b13*(b14*(b22*b34))))+((8.*(b23*(b24*b34)))+((-4.*(b22*(b34**2)))+aux302));
    aux304=(-8.*((b14**2)*(b22*b33)))+((-4.*((b24**2)*b33))+((8.*(b13*(b14*b34)))+aux303));
    aux305=(8.*((b13**2)*(b24**2)))+((-4.*((b14**2)*b33))+((2.*(b22*b33))+aux304));
    aux306=(-4.*((b14**2)*b22))+((8.*((b14**2)*(b23**2)))+((-16.*(b13*(b14*(b23*b24))))+aux305));
    aux307=(-2.*b33)+((4.*(b34**2))+((-2.*b44)+(-2.*((-4.*((b13**2)*b22))+aux306))));
    aux308=(4.*(b13**2))+((4.*(b14**2))+((-2.*b22)+((4.*(b23**2))+((4.*(b24**2))+aux307))));
    aux309=((8.*(b14**2))+(((0.+-4.j)*b24)+(-2.*(1.+((2.*b33)+aux295)))))/(-1.+aux308);
    aux310=((0.+-1.j)*((1.+aux278)*s4))+((1.+((-4.*(b13**2))+((-4.*(b14**2))+aux290)))*(s2*(-1.+aux309)));
    aux311=((0.+2.j)*((b23+((2.*(b11*b23))+(((0.+-4.j)*(b13*b23))+aux258)))*s1))+(((0.+2.j)*((((0.+2.j)*b23)+aux266)*s3))+aux310);
    aux312=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux313=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux314=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux313)));
    aux315=2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux314)))));
    aux316=(-4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+((16.*(b12*aux312))+aux315);
    aux317=(-16.*((b13**2)*(b22*b44)))+((-8.*((b23**2)*b44))+((4.*(b33*b44))+((8.*(b22*(b33*b44)))+aux316)));
    aux318=(-8.*(b22*(b34**2)))+((2.*b44)+((-8.*((b13**2)*b44))+((4.*(b22*b44))+aux317)));
    aux319=(32.*(b13*(b14*(b22*b34))))+((16.*(b23*(b24*b34)))+((-4.*(b34**2))+aux318));
    aux320=(-16.*((b14**2)*(b22*b33)))+((-8.*((b24**2)*b33))+((16.*(b13*(b14*b34)))+aux319));
    aux321=(16.*((b13**2)*(b24**2)))+((2.*b33)+((-8.*((b14**2)*b33))+((4.*(b22*b33))+aux320)));
    aux322=(16.*((b14**2)*(b23**2)))+((-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+aux321));
    aux323=(2.*b22)+((-8.*((b13**2)*b22))+((-8.*((b14**2)*b22))+((-4.*(b23**2))+aux322)));
    aux324=(s2*(1.+aux251))+(aux311/(1.+((-4.*(b13**2))+((-4.*(b14**2))+aux323))));
    aux325=(aux135/(1.+((-4.*(v13**2))+((-4.*(v14**2))+aux147))))+(aux177+(aux232+aux324));
    aux326=(((0.+1.j)*(r3*aux79))/(-1.+((4.*(v13**2))+((4.*(v14**2))+aux91))))+(aux113+aux325);
    aux327=aux38+(((aux57*s4)/(1.+((-4.*(b13**2))+((-4.*(b14**2))+aux69))))+aux326);
    output=0.25*(aux19+aux327);
    return output


def lineal3(V,B,R,S):
    v11,v12,v13,v14=separate(V,0)
    v21,v22,v23,v24=separate(V,1)
    v31,v32,v33,v34=separate(V,2)
    v41,v42,v43,v44=separate(V,3)
    b11,b12,b13,b14=separate(B,0)
    b21,b22,b23,b24=separate(B,1)
    b31,b32,b33,b34=separate(B,2)
    b41,b42,b43,b44=separate(B,3)
    r1,r2,r3,r4=R[0],R[1],R[2],R[3]
    s1,s2,s3,s4=S[0],S[1],S[2],S[3]
    aux0=(2.*b44)+(4.*(b33*(1.+(b11+((-2.*(b14**2))+((2.*b44)+(2.*(b11*b44))))))));
    aux1=1.+(((0.+-8.j)*(b14*b34))+((-8.*(b34**2))+((-8.*(b11*(b34**2)))+aux0)));
    aux2=(b22*((0.+2.j)+((8.*(b14*b34))+((0.+4.j)*b44))))+(((0.+2.j)*b44)+(4.*(b12*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))))));
    aux3=(0.+1.j)+((-8.*(b14*(b23*b24)))+(((0.+-4.j)*(b24**2))+((4.*(b14*b34))+aux2)));
    aux4=(-4.*((b13**2)*(1.+((-4.*(b24**2))+((2.*b44)+(b22*(2.+(4.*b44))))))))+((2.*(b22*aux1))+(4.*(b13*aux3)));
    aux5=(8.*(b33*b44))+((8.*(b11*(b33*b44)))+((-16.*((b12**2)*(b33*b44)))+aux4));
    aux6=((0.+-16.j)*(b12*(b23*b44)))+((-16.*((b23**2)*b44))+((-16.*(b11*((b23**2)*b44)))+aux5));
    aux7=(-8.*(b34**2))+((-8.*(b11*(b34**2)))+((16.*((b12**2)*(b34**2)))+((2.*b44)+aux6)));
    aux8=((0.+16.j)*(b12*(b24*b34)))+((32.*(b23*(b24*b34)))+((32.*(b11*(b23*(b24*b34))))+aux7));
    aux9=(-16.*(b11*((b24**2)*b33)))+(((0.+-8.j)*(b14*b34))+((-32.*(b12*(b14*(b23*b34))))+aux8));
    aux10=(-8.*((b14**2)*b33))+((32.*(b12*(b14*(b24*b33))))+((-16.*((b24**2)*b33))+aux9));
    aux11=(-4.*(b24**2))+((4.*b33)+((4.*(b11*b33))+((-8.*((b12**2)*b33))+aux10)));
    aux12=(-8.*(b11*(b23**2)))+((16.*((b14**2)*(b23**2)))+(((0.+16.j)*(b14*(b23*b24)))+aux11));
    aux13=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux14=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux15=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux14)));
    aux16=(16.*(b12*aux13))+(2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux15))))));
    aux17=(-4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+aux16;
    aux18=(-16.*((b13**2)*(b22*b44)))+((-8.*((b23**2)*b44))+((4.*(b33*b44))+((8.*(b22*(b33*b44)))+aux17)));
    aux19=(-8.*(b22*(b34**2)))+((2.*b44)+((-8.*((b13**2)*b44))+((4.*(b22*b44))+aux18)));
    aux20=(32.*(b13*(b14*(b22*b34))))+((16.*(b23*(b24*b34)))+((-4.*(b34**2))+aux19));
    aux21=(-16.*((b14**2)*(b22*b33)))+((-8.*((b24**2)*b33))+((16.*(b13*(b14*b34)))+aux20));
    aux22=(16.*((b13**2)*(b24**2)))+((2.*b33)+((-8.*((b14**2)*b33))+((4.*(b22*b33))+aux21)));
    aux23=(16.*((b14**2)*(b23**2)))+((-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+aux22));
    aux24=(2.*b22)+((-8.*((b13**2)*b22))+((-8.*((b14**2)*b22))+((-4.*(b23**2))+aux23)));
    aux25=((0.+1.j)*((1.+(((0.+-8.j)*(b12*b23))+((-8.*(b23**2))+aux12)))*s1))/(1.+((-4.*(b13**2))+((-4.*(b14**2))+aux24)));
    aux26=(2.*(b14*b22))+(((0.+-4.j)*(b14*b24))+((2.*(b24*b34))+(-2.*(b23*b44))));
    aux27=(4.*(b13*((0.+-1.j)+(b24+((0.+-2.j)*b44)))))+((-2.*b44)+(-4.*(b33*b44)));
    aux28=(4.*(b14*b23))+((-2.*b33)+(((0.+8.j)*(b14*b34))+((4.*(b34**2))+aux27)));
    aux29=((0.+8.j)*(b11*(b23*b44)))+((-2.*(b13*((b14+aux26)-b23)))+(b12*(-1.+aux28)));
    aux30=((0.+-4.j)*(b24*b34))+(((0.+-8.j)*(b11*(b24*b34)))+(((0.+4.j)*(b23*b44))+aux29));
    aux31=(-4.*((b12**2)*b34))+((2.*(b22*b34))+((4.*(b11*(b22*b34)))+((-4.*(b14*(b23*b34)))+aux30)));
    aux32=(-4.*(b11*(b23*b24)))+((4.*(b14*(b24*b33)))+(b34+((2.*(b11*b34))+aux31)));
    aux33=((0.+4.j)*(b11*b23))+(((0.+-8.j)*((b14**2)*b23))+((2.*(b14*b24))+((-2.*(b23*b24))+aux32)));
    aux34=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux35=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux36=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux35)));
    aux37=(16.*(b12*aux34))+(2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux36))))));
    aux38=(-4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+aux37;
    aux39=(-16.*((b13**2)*(b22*b44)))+((-8.*((b23**2)*b44))+((4.*(b33*b44))+((8.*(b22*(b33*b44)))+aux38)));
    aux40=(-8.*(b22*(b34**2)))+((2.*b44)+((-8.*((b13**2)*b44))+((4.*(b22*b44))+aux39)));
    aux41=(32.*(b13*(b14*(b22*b34))))+((16.*(b23*(b24*b34)))+((-4.*(b34**2))+aux40));
    aux42=(-16.*((b14**2)*(b22*b33)))+((-8.*((b24**2)*b33))+((16.*(b13*(b14*b34)))+aux41));
    aux43=(16.*((b13**2)*(b24**2)))+((2.*b33)+((-8.*((b14**2)*b33))+((4.*(b22*b33))+aux42)));
    aux44=(16.*((b14**2)*(b23**2)))+((-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+aux43));
    aux45=(2.*b22)+((-8.*((b13**2)*b22))+((-8.*((b14**2)*b22))+((-4.*(b23**2))+aux44)));
    aux46=((0.+2.j)*((((0.+2.j)*b23)+aux33)*s2))/(1.+((-4.*(b13**2))+((-4.*(b14**2))+aux45)));
    aux47=(4.*((b12**2)*b34))+((1.+(2.*b11))*(((2.*(b23*b24))+(-2.*(b22*b34)))-b34));
    aux48=(-4.*(b12*(b14*b23)))+((2.*(b13*(b14+((2.*(b14*b22))+(-2.*(b12*b24))))))+aux47);
    aux49=b12*(b13+(b24+((2.*(b24*b33))+((-2.*((b14+b23)*b34))+(2.*(b13*b44))))));
    aux50=(4.*(b11*(b24*b34)))+((-2.*(b23*b44))+((-4.*(b11*(b23*b44)))+(2.*aux49)));
    aux51=(-4.*(b13*(b23*b24)))+((2.*(b13*b34))+((4.*(b13*(b22*b34)))+((2.*(b24*b34))+aux50)));
    aux52=b14*(1.+((-4.*(b23**2))+((4.*(b13*b24))+((2.*b33)+(b22*(2.+(4.*b33)))))));
    aux53=(4.*aux48)+((0.+2.j)*((((-2.*(b11*b23))+((4.*((b14**2)*b23))+aux51))-aux52)-b23));
    aux54=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux55=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux56=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux55)));
    aux57=(16.*(b12*aux54))+(2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux56))))));
    aux58=(-4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+aux57;
    aux59=(-16.*((b13**2)*(b22*b44)))+((-8.*((b23**2)*b44))+((4.*(b33*b44))+((8.*(b22*(b33*b44)))+aux58)));
    aux60=(-8.*(b22*(b34**2)))+((2.*b44)+((-8.*((b13**2)*b44))+((4.*(b22*b44))+aux59)));
    aux61=(32.*(b13*(b14*(b22*b34))))+((16.*(b23*(b24*b34)))+((-4.*(b34**2))+aux60));
    aux62=(-16.*((b14**2)*(b22*b33)))+((-8.*((b24**2)*b33))+((16.*(b13*(b14*b34)))+aux61));
    aux63=(16.*((b13**2)*(b24**2)))+((2.*b33)+((-8.*((b14**2)*b33))+((4.*(b22*b33))+aux62)));
    aux64=(16.*((b14**2)*(b23**2)))+((-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+aux63));
    aux65=(2.*b22)+((-8.*((b13**2)*b22))+((-8.*((b14**2)*b22))+((-4.*(b23**2))+aux64)));
    aux66=((0.+-16.j)*((v12**2)*(v33*v44)))+(((0.+8.j)*(v22*(v33*v44)))+((0.+16.j)*(v11*(v22*(v33*v44)))));
    aux67=((0.+-16.j)*(v11*((v23**2)*v44)))+(((0.+4.j)*(v33*v44))+(((0.+8.j)*(v11*(v33*v44)))+aux66));
    aux68=(16.*(v12*(v23*v44)))+(((0.+32.j)*(v12*(v13*(v23*v44))))+(((0.+-8.j)*((v23**2)*v44))+aux67));
    aux69=((0.+24.j)*(v11*(v22*v44)))+((-16.*(v13*(v22*v44)))+(((0.+-16.j)*((v13**2)*(v22*v44)))+aux68));
    aux70=(-8.*(v13*v44))+(((0.+-8.j)*((v13**2)*v44))+(((0.+12.j)*(v22*v44))+aux69));
    aux71=((0.+6.j)*v44)+(((0.+12.j)*(v11*v44))+(((0.+-24.j)*((v12**2)*v44))+aux70));
    aux72=((0.+16.j)*((v12**2)*(v34**2)))+(((0.+-8.j)*(v22*(v34**2)))+(((0.+-16.j)*(v11*(v22*(v34**2))))+aux71));
    aux73=((0.+32.j)*(v11*(v23*(v24*v34))))+(((0.+-4.j)*(v34**2))+(((0.+-8.j)*(v11*(v34**2)))+aux72));
    aux74=(-16.*(v12*(v24*v34)))+(((0.+-32.j)*(v12*(v13*(v24*v34))))+(((0.+16.j)*(v23*(v24*v34)))+aux73));
    aux75=((0.+32.j)*(v13*(v14*(v22*v34))))+(((0.+-32.j)*(v12*(v14*(v23*v34))))+aux74);
    aux76=(8.*(v14*v34))+(((0.+16.j)*(v13*(v14*v34)))+((16.*(v14*(v22*v34)))+aux75));
    aux77=((0.+32.j)*(v12*(v14*(v24*v33))))+(((0.+-8.j)*((v24**2)*v33))+(((0.+-16.j)*(v11*((v24**2)*v33)))+aux76));
    aux78=((0.+4.j)*(v22*v33))+(((0.+8.j)*(v11*(v22*v33)))+(((0.+-16.j)*((v14**2)*(v22*v33)))+aux77));
    aux79=((0.+4.j)*(v11*v33))+(((0.+-8.j)*((v12**2)*v33))+(((0.+-8.j)*((v14**2)*v33))+aux78));
    aux80=(16.*(v13*(v24**2)))+(((0.+16.j)*((v13**2)*(v24**2)))+(((0.+2.j)*v33)+aux79));
    aux81=((0.+-32.j)*(v13*(v14*(v23*v24))))+(((0.+-12.j)*(v24**2))+(((0.+-24.j)*(v11*(v24**2)))+aux80));
    aux82=((0.+16.j)*((v14**2)*(v23**2)))+(((0.+48.j)*(v12*(v14*v24)))+((-16.*(v14*(v23*v24)))+aux81));
    aux83=((0.+16.j)*(v12*(v13*v23)))+(((0.+-4.j)*(v23**2))+(((0.+-8.j)*(v11*(v23**2)))+aux82));
    aux84=((0.+-8.j)*((v13**2)*v22))+(((0.+-24.j)*((v14**2)*v22))+((8.*(v12*v23))+aux83));
    aux85=((0.+-12.j)*(v14**2))+(((0.+6.j)*v22)+(((0.+12.j)*(v11*v22))+((-8.*(v13*v22))+aux84)));
    aux86=((0.+6.j)*v11)+(((0.+-12.j)*(v12**2))+((-4.*v13)+(((0.+-4.j)*(v13**2))+aux85)));
    aux87=(v14*(v24+((2.*(v24*v33))+(-2.*(v23*v34)))))+(v13*(v23+((-2.*(v24*v34))+(2.*(v23*v44)))));
    aux88=(-4.*((v23**2)*(1.+(2.*v44))))+(v22*(2.+((-8.*(v34**2))+((4.*v44)+(v33*(4.+(8.*v44)))))));
    aux89=(16.*(v23*(v24*v34)))+((-4.*(v34**2))+((2.*v44)+((4.*(v33*v44))+aux88)));
    aux90=-2.*(v11*(1.+((-4.*(v24**2))+((2.*v33)+((-8.*((v24**2)*v33))+aux89)))));
    aux91=(4.*((v12**2)*(1.+((-4.*(v34**2))+((2.*v44)+(v33*(2.+(4.*v44))))))))+((-16.*(v12*aux87))+aux90);
    aux92=(16.*((v13**2)*(v22*v44)))+((8.*((v23**2)*v44))+((-4.*(v33*v44))+((-8.*(v22*(v33*v44)))+aux91)));
    aux93=(8.*(v22*(v34**2)))+((-2.*v44)+((8.*((v13**2)*v44))+((-4.*(v22*v44))+aux92)));
    aux94=(-32.*(v13*(v14*(v22*v34))))+((-16.*(v23*(v24*v34)))+((4.*(v34**2))+aux93));
    aux95=(16.*((v14**2)*(v22*v33)))+((8.*((v24**2)*v33))+((-16.*(v13*(v14*v34)))+aux94));
    aux96=(-16.*((v13**2)*(v24**2)))+((-2.*v33)+((8.*((v14**2)*v33))+((-4.*(v22*v33))+aux95)));
    aux97=(-16.*((v14**2)*(v23**2)))+((32.*(v13*(v14*(v23*v24))))+((4.*(v24**2))+aux96));
    aux98=(-2.*v22)+((8.*((v13**2)*v22))+((8.*((v14**2)*v22))+((4.*(v23**2))+aux97)));
    aux99=((0.+1.j)*(r3*((0.+3.j)+aux86)))/(-1.+((4.*(v13**2))+((4.*(v14**2))+aux98)));
    aux100=(-16.*((v12**2)*(v33*v44)))+((16.*(v22*(v33*v44)))+(16.*(v11*(v22*(v33*v44)))));
    aux101=(-16.*(v11*((v23**2)*v44)))+((8.*(v33*v44))+((8.*(v11*(v33*v44)))+aux100));
    aux102=((0.+16.j)*(v12*(v23*v44)))+((32.*(v12*(v13*(v23*v44))))+((-16.*((v23**2)*v44))+aux101));
    aux103=(4.*(v22*v44))+(((0.+-16.j)*(v13*(v22*v44)))+((-16.*((v13**2)*(v22*v44)))+aux102));
    aux104=(-16.*(v11*(v22*(v34**2))))+((2.*v44)+(((0.+-8.j)*(v13*v44))+((-8.*((v13**2)*v44))+aux103)));
    aux105=(-8.*(v11*(v34**2)))+((16.*((v12**2)*(v34**2)))+((-16.*(v22*(v34**2)))+aux104));
    aux106=(32.*(v23*(v24*v34)))+((32.*(v11*(v23*(v24*v34))))+((-8.*(v34**2))+aux105));
    aux107=(-32.*(v12*(v14*(v23*v34))))+(((0.+-16.j)*(v12*(v24*v34)))+((-32.*(v12*(v13*(v24*v34))))+aux106));
    aux108=(16.*(v13*(v14*v34)))+(((0.+16.j)*(v14*(v22*v34)))+((32.*(v13*(v14*(v22*v34))))+aux107));
    aux109=(-16.*((v24**2)*v33))+((-16.*(v11*((v24**2)*v33)))+(((0.+8.j)*(v14*v34))+aux108));
    aux110=(8.*(v11*(v22*v33)))+((-16.*((v14**2)*(v22*v33)))+((32.*(v12*(v14*(v24*v33))))+aux109));
    aux111=(4.*(v11*v33))+((-8.*((v12**2)*v33))+((-8.*((v14**2)*v33))+((8.*(v22*v33))+aux110)));
    aux112=((0.+16.j)*(v13*(v24**2)))+((16.*((v13**2)*(v24**2)))+((4.*v33)+aux111));
    aux113=((0.+-16.j)*(v14*(v23*v24)))+((-32.*(v13*(v14*(v23*v24))))+((-4.*(v24**2))+aux112));
    aux114=(-8.*(v23**2))+((-8.*(v11*(v23**2)))+((16.*((v14**2)*(v23**2)))+aux113));
    aux115=(-8.*((v13**2)*v22))+(((0.+8.j)*(v12*v23))+((16.*(v12*(v13*v23)))+aux114));
    aux116=((0.+-4.j)*v13)+((-4.*(v13**2))+((2.*v22)+(((0.+-8.j)*(v13*v22))+aux115)));
    aux117=(v14*(v24+((2.*(v24*v33))+(-2.*(v23*v34)))))+(v13*(v23+((-2.*(v24*v34))+(2.*(v23*v44)))));
    aux118=(-4.*((v23**2)*(1.+(2.*v44))))+(v22*(2.+((-8.*(v34**2))+((4.*v44)+(v33*(4.+(8.*v44)))))));
    aux119=(16.*(v23*(v24*v34)))+((-4.*(v34**2))+((2.*v44)+((4.*(v33*v44))+aux118)));
    aux120=-2.*(v11*(1.+((-4.*(v24**2))+((2.*v33)+((-8.*((v24**2)*v33))+aux119)))));
    aux121=(4.*((v12**2)*(1.+((-4.*(v34**2))+((2.*v44)+(v33*(2.+(4.*v44))))))))+((-16.*(v12*aux117))+aux120);
    aux122=(16.*((v13**2)*(v22*v44)))+((8.*((v23**2)*v44))+((-4.*(v33*v44))+((-8.*(v22*(v33*v44)))+aux121)));
    aux123=(8.*(v22*(v34**2)))+((-2.*v44)+((8.*((v13**2)*v44))+((-4.*(v22*v44))+aux122)));
    aux124=(-32.*(v13*(v14*(v22*v34))))+((-16.*(v23*(v24*v34)))+((4.*(v34**2))+aux123));
    aux125=(16.*((v14**2)*(v22*v33)))+((8.*((v24**2)*v33))+((-16.*(v13*(v14*v34)))+aux124));
    aux126=(-16.*((v13**2)*(v24**2)))+((-2.*v33)+((8.*((v14**2)*v33))+((-4.*(v22*v33))+aux125)));
    aux127=(-16.*((v14**2)*(v23**2)))+((32.*(v13*(v14*(v23*v24))))+((4.*(v24**2))+aux126));
    aux128=(-2.*v22)+((8.*((v13**2)*v22))+((8.*((v14**2)*v22))+((4.*(v23**2))+aux127)));
    aux129=((0.+1.j)*(r1*(1.+aux116)))/(-1.+((4.*(v13**2))+((4.*(v14**2))+aux128)));
    aux130=(-8.*(v11*(v24*v34)))+((-8.*(v12*(v13*v44)))+((4.*(v23*v44))+(8.*(v11*(v23*v44)))));
    aux131=((0.+16.j)*(v11*(v22*v34)))+((-8.*(v13*(v22*v34)))+((8.*(v12*(v23*v34)))+((-4.*(v24*v34))+aux130)));
    aux132=((0.+-16.j)*((v12**2)*v34))+((-4.*(v13*v34))+((8.*(v12*(v14*v34)))+(((0.+8.j)*(v22*v34))+aux131)));
    aux133=(8.*(v14*(v22*v33)))+((-8.*(v12*(v24*v33)))+(((0.+4.j)*v34)+(((0.+8.j)*(v11*v34))+aux132)));
    aux134=((0.+-16.j)*(v11*(v23*v24)))+((8.*(v13*(v23*v24)))+((4.*(v14*v33))+aux133));
    aux135=((0.+16.j)*(v12*(v13*v24)))+((8.*(v13*(v14*v24)))+(((0.+-8.j)*(v23*v24))+aux134));
    aux136=((0.+16.j)*(v12*(v14*v23)))+((-8.*((v14**2)*v23))+((-8.*(v14*(v23**2)))+((-4.*(v12*v24))+aux135)));
    aux137=(4.*(v14*v22))+(((0.+-16.j)*(v13*(v14*v22)))+((2.*v23)+((4.*(v11*v23))+aux136)));
    aux138=(0.+1.j)*(r4*((-4.*(v12*v13))+((2.*v14)+(((0.+-8.j)*(v13*v14))+aux137))));
    aux139=(v14*(v24+((2.*(v24*v33))+(-2.*(v23*v34)))))+(v13*(v23+((-2.*(v24*v34))+(2.*(v23*v44)))));
    aux140=(-4.*((v23**2)*(1.+(2.*v44))))+(v22*(2.+((-8.*(v34**2))+((4.*v44)+(v33*(4.+(8.*v44)))))));
    aux141=(16.*(v23*(v24*v34)))+((-4.*(v34**2))+((2.*v44)+((4.*(v33*v44))+aux140)));
    aux142=2.*(v11*(1.+((-4.*(v24**2))+((2.*v33)+((-8.*((v24**2)*v33))+aux141)))));
    aux143=(-4.*((v12**2)*(1.+((-4.*(v34**2))+((2.*v44)+(v33*(2.+(4.*v44))))))))+((16.*(v12*aux139))+aux142);
    aux144=(-16.*((v13**2)*(v22*v44)))+((-8.*((v23**2)*v44))+((4.*(v33*v44))+((8.*(v22*(v33*v44)))+aux143)));
    aux145=(-8.*(v22*(v34**2)))+((2.*v44)+((-8.*((v13**2)*v44))+((4.*(v22*v44))+aux144)));
    aux146=(32.*(v13*(v14*(v22*v34))))+((16.*(v23*(v24*v34)))+((-4.*(v34**2))+aux145));
    aux147=(-16.*((v14**2)*(v22*v33)))+((-8.*((v24**2)*v33))+((16.*(v13*(v14*v34)))+aux146));
    aux148=(16.*((v13**2)*(v24**2)))+((2.*v33)+((-8.*((v14**2)*v33))+((4.*(v22*v33))+aux147)));
    aux149=(16.*((v14**2)*(v23**2)))+((-32.*(v13*(v14*(v23*v24))))+((-4.*(v24**2))+aux148));
    aux150=(2.*v22)+((-8.*((v13**2)*v22))+((-8.*((v14**2)*v22))+((-4.*(v23**2))+aux149)));
    aux151=((0.+16.j)*(v11*(v23*v44)))+((-8.*(v13*(v23*v44)))+(8.*(v12*(v33*v44))));
    aux152=(4.*(v12*v44))+(((0.+-16.j)*(v12*(v13*v44)))+(((0.+8.j)*(v23*v44))+aux151));
    aux153=((0.+-16.j)*(v11*(v24*v34)))+((8.*(v13*(v24*v34)))+((-8.*(v12*(v34**2)))+aux152));
    aux154=(-8.*(v11*(v22*v34)))+((8.*(v14*(v23*v34)))+(((0.+-8.j)*(v24*v34))+aux153));
    aux155=(8.*((v12**2)*v34))+(((0.+16.j)*(v12*(v14*v34)))+((-4.*(v22*v34))+aux154));
    aux156=(4.*(v12*v33))+((-8.*(v14*(v24*v33)))+((-2.*v34)+((-4.*(v11*v34))+aux155)));
    aux157=((0.+16.j)*(v13*(v14*v24)))+((4.*(v23*v24))+((8.*(v11*(v23*v24)))+aux156));
    aux158=((0.+-16.j)*((v14**2)*v23))+((-8.*(v12*(v13*v24)))+((-4.*(v14*v24))+aux157));
    aux159=((0.+4.j)*v23)+(((0.+8.j)*(v11*v23))+((-4.*(v13*v23))+((-8.*(v12*(v14*v23)))+aux158)));
    aux160=(2.*v12)+(((0.+-8.j)*(v12*v13))+((4.*(v13*v14))+((8.*(v13*(v14*v22)))+aux159)));
    aux161=(v14*(v24+((2.*(v24*v33))+(-2.*(v23*v34)))))+(v13*(v23+((-2.*(v24*v34))+(2.*(v23*v44)))));
    aux162=(-4.*((v23**2)*(1.+(2.*v44))))+(v22*(2.+((-8.*(v34**2))+((4.*v44)+(v33*(4.+(8.*v44)))))));
    aux163=(16.*(v23*(v24*v34)))+((-4.*(v34**2))+((2.*v44)+((4.*(v33*v44))+aux162)));
    aux164=2.*(v11*(1.+((-4.*(v24**2))+((2.*v33)+((-8.*((v24**2)*v33))+aux163)))));
    aux165=(-4.*((v12**2)*(1.+((-4.*(v34**2))+((2.*v44)+(v33*(2.+(4.*v44))))))))+((16.*(v12*aux161))+aux164);
    aux166=(-16.*((v13**2)*(v22*v44)))+((-8.*((v23**2)*v44))+((4.*(v33*v44))+((8.*(v22*(v33*v44)))+aux165)));
    aux167=(-8.*(v22*(v34**2)))+((2.*v44)+((-8.*((v13**2)*v44))+((4.*(v22*v44))+aux166)));
    aux168=(32.*(v13*(v14*(v22*v34))))+((16.*(v23*(v24*v34)))+((-4.*(v34**2))+aux167));
    aux169=(-16.*((v14**2)*(v22*v33)))+((-8.*((v24**2)*v33))+((16.*(v13*(v14*v34)))+aux168));
    aux170=(16.*((v13**2)*(v24**2)))+((2.*v33)+((-8.*((v14**2)*v33))+((4.*(v22*v33))+aux169)));
    aux171=(16.*((v14**2)*(v23**2)))+((-32.*(v13*(v14*(v23*v24))))+((-4.*(v24**2))+aux170));
    aux172=(2.*v22)+((-8.*((v13**2)*v22))+((-8.*((v14**2)*v22))+((-4.*(v23**2))+aux171)));
    aux173=(2.*v44)+(4.*(v33*(1.+(v11+((-2.*(v14**2))+((2.*v44)+(2.*(v11*v44))))))));
    aux174=1.+(((0.+8.j)*(v14*v34))+((-8.*(v34**2))+((-8.*(v11*(v34**2)))+aux173)));
    aux175=((0.+-2.j)*(v22*(1.+(2.*v44))))+(4.*(v12*(v23+((-2.*(v24*v34))+(2.*(v23*v44))))));
    aux176=((0.+4.j)*(v24**2))+((4.*(v14*v34))+((8.*(v14*(v22*v34)))+(((0.+-2.j)*v44)+aux175)));
    aux177=(2.*(v22*aux174))+(4.*(v13*((0.+-1.j)+((-8.*(v14*(v23*v24)))+aux176))));
    aux178=(-4.*((v13**2)*(1.+((-4.*(v24**2))+((2.*v44)+(v22*(2.+(4.*v44))))))))+aux177;
    aux179=(8.*(v33*v44))+((8.*(v11*(v33*v44)))+((-16.*((v12**2)*(v33*v44)))+aux178));
    aux180=((0.+16.j)*(v12*(v23*v44)))+((-16.*((v23**2)*v44))+((-16.*(v11*((v23**2)*v44)))+aux179));
    aux181=(-8.*(v34**2))+((-8.*(v11*(v34**2)))+((16.*((v12**2)*(v34**2)))+((2.*v44)+aux180)));
    aux182=((0.+-16.j)*(v12*(v24*v34)))+((32.*(v23*(v24*v34)))+((32.*(v11*(v23*(v24*v34))))+aux181));
    aux183=(-16.*(v11*((v24**2)*v33)))+(((0.+8.j)*(v14*v34))+((-32.*(v12*(v14*(v23*v34))))+aux182));
    aux184=(-8.*((v14**2)*v33))+((32.*(v12*(v14*(v24*v33))))+((-16.*((v24**2)*v33))+aux183));
    aux185=(-4.*(v24**2))+((4.*v33)+((4.*(v11*v33))+((-8.*((v12**2)*v33))+aux184)));
    aux186=(-8.*(v11*(v23**2)))+((16.*((v14**2)*(v23**2)))+(((0.+-16.j)*(v14*(v23*v24)))+aux185));
    aux187=(-4.*(v23**2))+((4.*(v13*((0.+-1.j)+(((0.+-2.j)*v22)+v24))))+((2.*v33)+(4.*(v22*v33))));
    aux188=(-4.*(v24*v33))+((4.*(v14*v34))+((4.*(v23*v34))+(v13*(-2.+(((0.+8.j)*v24)+(-4.*v44))))));
    aux189=(v12*(((0.+8.j)*(v14*v23))+((-2.*v24)+aux188)))+((2.*(v23*v44))+(4.*(v11*(v23*v44))));
    aux190=((0.+8.j)*(v11*(v22*v34)))+((-4.*(v13*(v22*v34)))+((-2.*(v24*v34))+((-4.*(v11*(v24*v34)))+aux189)));
    aux191=((0.+-8.j)*((v12**2)*v34))+((-2.*(v13*v34))+(((0.+4.j)*(v22*v34))+aux190));
    aux192=(v14*(1.+((2.*v22)+aux187)))+(((0.+2.j)*v34)+(((0.+4.j)*(v11*v34))+aux191));
    aux193=((0.+-4.j)*(v23*v24))+(((0.+-8.j)*(v11*(v23*v24)))+((4.*(v13*(v23*v24)))+aux192));
    aux194=v14+((2.*(v14*v22))+(((0.+4.j)*(v14*v24))+((2.*(v24*v34))+(-2.*(v23*v44)))));
    aux195=(-4.*(v34**2))+((-4.*(v13*((0.+1.j)+(v24+((0.+2.j)*v44)))))+((2.*v44)+(4.*(v33*v44))));
    aux196=(2.*(v13*(aux194-v23)))+(v12*(1.+((-4.*(v14*v23))+((2.*v33)+(((0.+8.j)*(v14*v34))+aux195)))));
    aux197=((0.+-8.j)*(v11*(v24*v34)))+(((0.+4.j)*(v23*v44))+(((0.+8.j)*(v11*(v23*v44)))+aux196));
    aux198=(-4.*(v11*(v22*v34)))+((4.*(v14*(v23*v34)))+(((0.+-4.j)*(v24*v34))+aux197));
    aux199=(-4.*(v14*(v24*v33)))+((-2.*(v11*v34))+((4.*((v12**2)*v34))+((-2.*(v22*v34))+aux198)));
    aux200=((0.+-8.j)*((v14**2)*v23))+((-2.*(v14*v24))+((2.*(v23*v24))+((4.*(v11*(v23*v24)))+aux199)));
    aux201=(r4*(v23+((2.*(v11*v23))+((-4.*((v14**2)*v23))+aux193))))+(r2*((((0.+2.j)*v23)+(((0.+4.j)*(v11*v23))+aux200))-v34));
    aux202=4.*((v12**2)*(1.+((4.*(v34**2))+((2.*v44)+(-2.*(v33*(1.+(2.*v44))))))));
    aux203=(-4.*((v23**2)*(1.+(2.*v44))))+(v22*(-2.+((4.*v33)+((-8.*(v34**2))+((-4.*v44)+(8.*(v33*v44)))))));
    aux204=(16.*(v23*(v24*v34)))+((-4.*(v34**2))+((-2.*v44)+((4.*(v33*v44))+aux203)));
    aux205=2.*(v11*(-1.+((4.*(v24**2))+((2.*v33)+((-8.*((v24**2)*v33))+aux204)))));
    aux206=(2.*(v24*((v14*(-1.+(2.*v33)))-(((0.+1.j)+(2.*v13))*v34))))+(v23*((0.+1.j)+((-4.*(v14*v34))+(((0.+2.j)*v44)+(v13*(2.+(4.*v44)))))));
    aux207=(4.*(v33*v44))+((8.*(v22*(v33*v44)))+(aux202+(aux205+(8.*(v12*aux206)))));
    aux208=((0.+-16.j)*(v13*(v22*v44)))+((-16.*((v13**2)*(v22*v44)))+((-8.*((v23**2)*v44))+aux207));
    aux209=(-2.*v44)+(((0.+-8.j)*(v13*v44))+((-8.*((v13**2)*v44))+((-4.*(v22*v44))+aux208)));
    aux210=(32.*(v13*(v14*(v22*v34))))+((16.*(v23*(v24*v34)))+((-4.*(v34**2))+((-8.*(v22*(v34**2)))+aux209)));
    aux211=((0.+8.j)*(v14*v34))+((16.*(v13*(v14*v34)))+(((0.+16.j)*(v14*(v22*v34)))+aux210));
    aux212=(4.*(v22*v33))+((-16.*((v14**2)*(v22*v33)))+((-8.*((v24**2)*v33))+aux211));
    aux213=((0.+16.j)*(v13*(v24**2)))+((16.*((v13**2)*(v24**2)))+((2.*v33)+((-8.*((v14**2)*v33))+aux212)));
    aux214=((0.+-16.j)*(v14*(v23*v24)))+((-32.*(v13*(v14*(v23*v24))))+((4.*(v24**2))+aux213));
    aux215=(8.*((v14**2)*v22))+((-4.*(v23**2))+((16.*((v14**2)*(v23**2)))+aux214));
    aux216=(4.*(v14**2))+((-2.*v22)+(((0.+-8.j)*(v13*v22))+((-8.*((v13**2)*v22))+aux215)));
    aux217=((0.+-2.j)*aux201)+(r3*(-1.+(((0.+-4.j)*v13)+((-4.*(v13**2))+aux216))));
    aux218=((0.+1.j)*(r1*(1.+(((0.+8.j)*(v12*v23))+((-8.*(v23**2))+aux186)))))+aux217;
    aux219=(v14*(v24+((2.*(v24*v33))+(-2.*(v23*v34)))))+(v13*(v23+((-2.*(v24*v34))+(2.*(v23*v44)))));
    aux220=(-4.*((v23**2)*(1.+(2.*v44))))+(v22*(2.+((-8.*(v34**2))+((4.*v44)+(v33*(4.+(8.*v44)))))));
    aux221=(16.*(v23*(v24*v34)))+((-4.*(v34**2))+((2.*v44)+((4.*(v33*v44))+aux220)));
    aux222=-2.*(v11*(1.+((-4.*(v24**2))+((2.*v33)+((-8.*((v24**2)*v33))+aux221)))));
    aux223=(4.*((v12**2)*(1.+((-4.*(v34**2))+((2.*v44)+(v33*(2.+(4.*v44))))))))+((-16.*(v12*aux219))+aux222);
    aux224=(16.*((v13**2)*(v22*v44)))+((8.*((v23**2)*v44))+((-4.*(v33*v44))+((-8.*(v22*(v33*v44)))+aux223)));
    aux225=(8.*(v22*(v34**2)))+((-2.*v44)+((8.*((v13**2)*v44))+((-4.*(v22*v44))+aux224)));
    aux226=(-32.*(v13*(v14*(v22*v34))))+((-16.*(v23*(v24*v34)))+((4.*(v34**2))+aux225));
    aux227=(16.*((v14**2)*(v22*v33)))+((8.*((v24**2)*v33))+((-16.*(v13*(v14*v34)))+aux226));
    aux228=(-16.*((v13**2)*(v24**2)))+((-2.*v33)+((8.*((v14**2)*v33))+((-4.*(v22*v33))+aux227)));
    aux229=(-16.*((v14**2)*(v23**2)))+((32.*(v13*(v14*(v23*v24))))+((4.*(v24**2))+aux228));
    aux230=(-2.*v22)+((8.*((v13**2)*v22))+((8.*((v14**2)*v22))+((4.*(v23**2))+aux229)));
    aux231=(0.+1.j)*(b12*(b23+(((0.+4.j)*(b14*b24))+((-2.*(b24*b34))+(2.*(b23*b44))))));
    aux232=((0.+2.j)*(b14*(b22*b34)))+(((0.+-1.j)*(b13*(b22+((-2.*(b24**2))+(b44+(2.*(b22*b44)))))))+aux231);
    aux233=np.conjugate((((0.+-2.j)*(b14*(b23*b24)))+(((0.+1.j)*(b14*b34))+aux232)));
    aux234=(-4.*(b11*(1.+((-4.*(b24**2))+((2.*b44)+(b22*(2.+(4.*b44))))))))+(8.*(((2.*((b14**2)*b22))+(((b12**2)*(1.+(2.*b44)))+aux233))-(b22*b44)));
    aux235=((0.+4.j)*b13)+((8.*(b14**2))+((-4.*b22)+((8.*(b24**2))+((-4.*b44)+aux234))));
    aux236=-2.*((b12**2)*(1.+((2.*b33)+((-4.*(b34**2))+((2.*b44)+(4.*(b33*b44)))))));
    aux237=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux238=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux239=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux238)));
    aux240=(8.*(b12*aux237))+(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux239)))));
    aux241=(-4.*((b23**2)*b44))+((2.*(b33*b44))+((4.*(b22*(b33*b44)))+(aux236+aux240)));
    aux242=(-4.*((b13**2)*b44))+((2.*(b22*b44))+((-8.*((b13**2)*(b22*b44)))+aux241));
    aux243=(16.*(b13*(b14*(b22*b34))))+((8.*(b23*(b24*b34)))+((-4.*(b22*(b34**2)))+aux242));
    aux244=(-8.*((b14**2)*(b22*b33)))+((-4.*((b24**2)*b33))+((8.*(b13*(b14*b34)))+aux243));
    aux245=(8.*((b13**2)*(b24**2)))+((-4.*((b14**2)*b33))+((2.*(b22*b33))+aux244));
    aux246=(-4.*((b14**2)*b22))+((8.*((b14**2)*(b23**2)))+((-16.*(b13*(b14*(b23*b24))))+aux245));
    aux247=(-2.*b33)+((4.*(b34**2))+((-2.*b44)+(-2.*((-4.*((b13**2)*b22))+aux246))));
    aux248=(4.*(b13**2))+((4.*(b14**2))+((-2.*b22)+((4.*(b23**2))+((4.*(b24**2))+aux247))));
    aux249=(b14*((-2.*(b23*b24))+(b34+(2.*(b22*b34)))))+(b12*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux250=(-4.*((b23**2)*b44))+((2.*(b33*b44))+((4.*(b22*(b33*b44)))+((b12**2)*(2.+(4.*b44)))));
    aux251=(-4.*((b24**2)*b33))+((8.*(b23*(b24*b34)))+((-2.*(b34**2))+((-4.*(b22*(b34**2)))+aux250)));
    aux252=(4.*((b14**2)*b22))+((-2.*(b23**2))+((-8.*(b12*(b14*b24)))+(b33+((2.*(b22*b33))+aux251))));
    aux253=((2.*(b14**2))+aux252)-(b11*(1.+((-4.*(b24**2))+((2.*b44)+(b22*(2.+(4.*b44)))))));
    aux254=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux255=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux256=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux255)));
    aux257=2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux256)))));
    aux258=(-4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+((16.*(b12*aux254))+aux257);
    aux259=(-16.*((b13**2)*(b22*b44)))+((-8.*((b23**2)*b44))+((4.*(b33*b44))+((8.*(b22*(b33*b44)))+aux258)));
    aux260=(-8.*(b22*(b34**2)))+((2.*b44)+((-8.*((b13**2)*b44))+((4.*(b22*b44))+aux259)));
    aux261=(32.*(b13*(b14*(b22*b34))))+((16.*(b23*(b24*b34)))+((-4.*(b34**2))+aux260));
    aux262=(-16.*((b14**2)*(b22*b33)))+((-8.*((b24**2)*b33))+((16.*(b13*(b14*b34)))+aux261));
    aux263=(16.*((b13**2)*(b24**2)))+((2.*b33)+((-8.*((b14**2)*b33))+((4.*(b22*b33))+aux262)));
    aux264=(16.*((b14**2)*(b23**2)))+((-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+aux263));
    aux265=(2.*b22)+((-8.*((b13**2)*b22))+((-8.*((b14**2)*b22))+((-4.*(b23**2))+aux264)));
    aux266=-2.*(b13*((b14+((2.*(b14*b22))+((2.*(b24*b34))+(-2.*(b23*b44)))))-b23));
    aux267=(4.*(b14*b23))+((4.*(b13*b24))+((-2.*b33)+((4.*(b34**2))+((-2.*b44)+(-4.*(b33*b44))))));
    aux268=(4.*(b11*(b22*b34)))+((-4.*(b14*(b23*b34)))+(aux266+(b12*(-1.+aux267))));
    aux269=(4.*(b14*(b24*b33)))+(b34+((2.*(b11*b34))+((-4.*((b12**2)*b34))+((2.*(b22*b34))+aux268))));
    aux270=(0.+2.j)*(((2.*(b14*b24))+((-2.*(b23*b24))+((-4.*(b11*(b23*b24)))+aux269)))*s2);
    aux271=(4.*((b12**2)*b34))+((1.+(2.*b11))*(((2.*(b23*b24))+(-2.*(b22*b34)))-b34));
    aux272=(-4.*(b12*(b14*b23)))+((2.*(b13*(b14+((2.*(b14*b22))+(-2.*(b12*b24))))))+aux271);
    aux273=b12*(b13+(b24+((2.*(b24*b33))+((-2.*((b14+b23)*b34))+(2.*(b13*b44))))));
    aux274=(4.*(b11*(b24*b34)))+((-2.*(b23*b44))+((-4.*(b11*(b23*b44)))+(2.*aux273)));
    aux275=(-4.*(b13*(b23*b24)))+((2.*(b13*b34))+((4.*(b13*(b22*b34)))+((2.*(b24*b34))+aux274)));
    aux276=b14*(1.+((-4.*(b23**2))+((4.*(b13*b24))+((2.*b33)+(b22*(2.+(4.*b33)))))));
    aux277=(0.+2.j)*(((((-2.*(b11*b23))+((4.*((b14**2)*b23))+aux275))-aux276)-b23)*s4);
    aux278=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux279=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux280=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux279)));
    aux281=2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux280)))));
    aux282=(-4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+((16.*(b12*aux278))+aux281);
    aux283=(-16.*((b13**2)*(b22*b44)))+((-8.*((b23**2)*b44))+((4.*(b33*b44))+((8.*(b22*(b33*b44)))+aux282)));
    aux284=(-8.*(b22*(b34**2)))+((2.*b44)+((-8.*((b13**2)*b44))+((4.*(b22*b44))+aux283)));
    aux285=(32.*(b13*(b14*(b22*b34))))+((16.*(b23*(b24*b34)))+((-4.*(b34**2))+aux284));
    aux286=(-16.*((b14**2)*(b22*b33)))+((-8.*((b24**2)*b33))+((16.*(b13*(b14*b34)))+aux285));
    aux287=(16.*((b13**2)*(b24**2)))+((2.*b33)+((-8.*((b14**2)*b33))+((4.*(b22*b33))+aux286)));
    aux288=(16.*((b14**2)*(b23**2)))+((-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+aux287));
    aux289=(2.*b22)+((-8.*((b13**2)*b22))+((-8.*((b14**2)*b22))+((-4.*(b23**2))+aux288)));
    aux290=(0.+1.j)*(b12*(b23+(((0.+4.j)*(b14*b24))+((-2.*(b24*b34))+(2.*(b23*b44))))));
    aux291=((0.+2.j)*(b14*(b22*b34)))+(((0.+-1.j)*(b13*(b22+((-2.*(b24**2))+(b44+(2.*(b22*b44)))))))+aux290);
    aux292=np.conjugate((((0.+-2.j)*(b14*(b23*b24)))+(((0.+1.j)*(b14*b34))+aux291)));
    aux293=(-4.*(b11*(1.+((-4.*(b24**2))+((2.*b44)+(b22*(2.+(4.*b44))))))))+(8.*(((2.*((b14**2)*b22))+(((b12**2)*(1.+(2.*b44)))+aux292))-(b22*b44)));
    aux294=((0.+4.j)*b13)+((8.*(b14**2))+((-4.*b22)+((8.*(b24**2))+((-4.*b44)+aux293))));
    aux295=-2.*((b12**2)*(1.+((2.*b33)+((-4.*(b34**2))+((2.*b44)+(4.*(b33*b44)))))));
    aux296=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux297=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux298=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux297)));
    aux299=(8.*(b12*aux296))+(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux298)))));
    aux300=(-4.*((b23**2)*b44))+((2.*(b33*b44))+((4.*(b22*(b33*b44)))+(aux295+aux299)));
    aux301=(-4.*((b13**2)*b44))+((2.*(b22*b44))+((-8.*((b13**2)*(b22*b44)))+aux300));
    aux302=(16.*(b13*(b14*(b22*b34))))+((8.*(b23*(b24*b34)))+((-4.*(b22*(b34**2)))+aux301));
    aux303=(-8.*((b14**2)*(b22*b33)))+((-4.*((b24**2)*b33))+((8.*(b13*(b14*b34)))+aux302));
    aux304=(8.*((b13**2)*(b24**2)))+((-4.*((b14**2)*b33))+((2.*(b22*b33))+aux303));
    aux305=(-4.*((b14**2)*b22))+((8.*((b14**2)*(b23**2)))+((-16.*(b13*(b14*(b23*b24))))+aux304));
    aux306=(-2.*b33)+((4.*(b34**2))+((-2.*b44)+(-2.*((-4.*((b13**2)*b22))+aux305))));
    aux307=(4.*(b13**2))+((4.*(b14**2))+((-2.*b22)+((4.*(b23**2))+((4.*(b24**2))+aux306))));
    aux308=(1.+((-4.*(b13**2))+((-4.*(b14**2))+aux289)))*(s3*(-1.+((-2.+aux294)/(-1.+aux307))));
    aux309=(-4.*(b23*((1.+((-4.*(b14**2))+((2.*b44)+(b11*(2.+(4.*b44))))))*s2)))+(aux270+((4.*(aux272*s4))+(aux277+aux308)));
    aux310=(8.*(b24*(((-2.*(b13*b14))+(b34+(2.*(b11*b34))))*s2)))+((8.*(b12*((b13+((-2.*(b14*b34))+(2.*(b13*b44))))*s2)))+aux309);
    aux311=((0.+2.j)*(aux253*s1))+(((0.+1.j)*((1.+((-4.*(b13**2))+((-4.*(b14**2))+aux265)))*s1))+aux310);
    aux312=(-4.*(b13*((1.+((-4.*(b24**2))+((2.*b44)+(b22*(2.+(4.*b44))))))*s1)))+((8.*(aux249*s1))+aux311);
    aux313=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux314=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux315=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux314)));
    aux316=2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux315)))));
    aux317=(-4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+((16.*(b12*aux313))+aux316);
    aux318=(-16.*((b13**2)*(b22*b44)))+((-8.*((b23**2)*b44))+((4.*(b33*b44))+((8.*(b22*(b33*b44)))+aux317)));
    aux319=(-8.*(b22*(b34**2)))+((2.*b44)+((-8.*((b13**2)*b44))+((4.*(b22*b44))+aux318)));
    aux320=(32.*(b13*(b14*(b22*b34))))+((16.*(b23*(b24*b34)))+((-4.*(b34**2))+aux319));
    aux321=(-16.*((b14**2)*(b22*b33)))+((-8.*((b24**2)*b33))+((16.*(b13*(b14*b34)))+aux320));
    aux322=(16.*((b13**2)*(b24**2)))+((2.*b33)+((-8.*((b14**2)*b33))+((4.*(b22*b33))+aux321)));
    aux323=(16.*((b14**2)*(b23**2)))+((-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+aux322));
    aux324=(2.*b22)+((-8.*((b13**2)*b22))+((-8.*((b14**2)*b22))+((-4.*(b23**2))+aux323)));
    aux325=(s3*(1.+((-2.+aux235)/(-1.+aux248))))+(aux312/(1.+((-4.*(b13**2))+((-4.*(b14**2))+aux324))));
    aux326=(((0.+1.j)*(r2*aux160))/(1.+((-4.*(v13**2))+((-4.*(v14**2))+aux172))))+((aux218/(-1.+((4.*(v13**2))+((4.*(v14**2))+aux230))))+aux325);
    aux327=aux99+(aux129+((aux138/(1.+((-4.*(v13**2))+((-4.*(v14**2))+aux150))))+aux326));
    aux328=aux46+(((aux53*s4)/(1.+((-4.*(b13**2))+((-4.*(b14**2))+aux65))))+aux327);
    output=0.25*(aux25+aux328);
    return output



def lineal4(V,B,R,S):
    v11,v12,v13,v14=separate(V,0)
    v21,v22,v23,v24=separate(V,1)
    v31,v32,v33,v34=separate(V,2)
    v41,v42,v43,v44=separate(V,3)
    b11,b12,b13,b14=separate(B,0)
    b21,b22,b23,b24=separate(B,1)
    b31,b32,b33,b34=separate(B,2)
    b41,b42,b43,b44=separate(B,3)
    r1,r2,r3,r4=R[0],R[1],R[2],R[3]
    s1,s2,s3,s4=S[0],S[1],S[2],S[3]
    aux0=((0.+2.j)*b33)+((2.*(b24*b33))+(((0.+2.j)*(b22*(1.+(2.*b33))))+(-2.*(b23*b34))));
    aux1=2.*(b14*(((0.+1.j)+(((0.+-4.j)*(b23**2))+(b24+aux0)))-(b13*(1.+(2.*b22)))));
    aux2=(-2.*b33)+(((0.+8.j)*(b23*b34))+((4.*(b34**2))+((-2.*b44)+(-4.*(b33*b44)))));
    aux3=-1.+((4.*(b14*b23))+((4.*(b24*((0.+-1.j)+(b13+((0.+-2.j)*b33)))))+aux2));
    aux4=((0.+-8.j)*(b13*(b22*b34)))+((-4.*(b13*(b24*b34)))+(aux1+((4.*(b13*(b23*b44)))+(b12*aux3))));
    aux5=(-4.*((b12**2)*b34))+(((0.+-4.j)*(b13*b34))+((2.*(b22*b34))+((4.*(b11*(b22*b34)))+aux4)));
    aux6=(-4.*(b11*(b23*b24)))+(((0.+8.j)*(b13*(b23*b24)))+(b34+((2.*(b11*b34))+aux5)));
    aux7=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux8=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux9=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux8)));
    aux10=(16.*(b12*aux7))+(2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux9))))));
    aux11=(-4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+aux10;
    aux12=(-16.*((b13**2)*(b22*b44)))+((-8.*((b23**2)*b44))+((4.*(b33*b44))+((8.*(b22*(b33*b44)))+aux11)));
    aux13=(-8.*(b22*(b34**2)))+((2.*b44)+((-8.*((b13**2)*b44))+((4.*(b22*b44))+aux12)));
    aux14=(32.*(b13*(b14*(b22*b34))))+((16.*(b23*(b24*b34)))+((-4.*(b34**2))+aux13));
    aux15=(-16.*((b14**2)*(b22*b33)))+((-8.*((b24**2)*b33))+((16.*(b13*(b14*b34)))+aux14));
    aux16=(16.*((b13**2)*(b24**2)))+((2.*b33)+((-8.*((b14**2)*b33))+((4.*(b22*b33))+aux15)));
    aux17=(16.*((b14**2)*(b23**2)))+((-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+aux16));
    aux18=(2.*b22)+((-8.*((b13**2)*b22))+((-8.*((b14**2)*b22))+((-4.*(b23**2))+aux17)));
    aux19=((0.+2.j)*(((2.*(b13*b23))+((-2.*(b23*b24))+aux6))*s1))/(1.+((-4.*(b13**2))+((-4.*(b14**2))+aux18)));
    aux20=4.*((b13**2)*(-1.+(((0.+-4.j)*b24)+((4.*(b24**2))+(-4.*((1.+b22)*b44))))));
    aux21=(-2.*(b14*((1.+b22)*b34)))+((b12*(((0.+-1.j)+(2.*b24))*b34))+(-2.*(b12*(b23*b44))));
    aux22=(-4.*(b22*b44))+((8.*((b23**2)*b44))+(-2.*(b33*(1.+(4.*((1.+b22)*b44))))));
    aux23=((0.+-4.j)*(b24*(1.+((2.*b33)+((0.+-4.j)*(b23*b34))))))+((-4.*b44)+aux22);
    aux24=((b24**2)*(4.+(8.*b33)))+(((0.+8.j)*(b23*b34))+((8.*(b34**2))+((8.*(b22*(b34**2)))+aux23)));
    aux25=(-16.*(b13*((b14*(b23*((0.+-1.j)+(2.*b24))))+aux21)))+(-2.*(b11*(-1.+aux24)));
    aux26=(8.*(b33*b44))+((-16.*((b12**2)*(b33*b44)))+((8.*(b22*(b33*b44)))+(aux20+aux25)));
    aux27=(4.*b44)+((-8.*((b12**2)*b44))+((4.*(b22*b44))+((-8.*((b23**2)*b44))+aux26)));
    aux28=(-8.*(b34**2))+((16.*((b12**2)*(b34**2)))+((-8.*(b22*(b34**2)))+aux27));
    aux29=((0.+-8.j)*(b23*b34))+((-32.*(b12*(b14*(b23*b34))))+((16.*(b23*(b24*b34)))+aux28));
    aux30=((0.+8.j)*(b24*b33))+((32.*(b12*(b14*(b24*b33))))+((-8.*((b24**2)*b33))+aux29));
    aux31=((0.+-16.j)*(b12*(b14*b33)))+((-16.*((b14**2)*b33))+((-16.*((b14**2)*(b22*b33)))+aux30));
    aux32=((0.+4.j)*b24)+((16.*(b12*(b14*b24)))+((-4.*(b24**2))+((2.*b33)+aux31)));
    aux33=(-8.*(b14**2))+((-8.*((b14**2)*b22))+((16.*((b14**2)*(b23**2)))+aux32));
    aux34=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux35=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux36=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux35)));
    aux37=(16.*(b12*aux34))+(2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux36))))));
    aux38=(-4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+aux37;
    aux39=(-16.*((b13**2)*(b22*b44)))+((-8.*((b23**2)*b44))+((4.*(b33*b44))+((8.*(b22*(b33*b44)))+aux38)));
    aux40=(-8.*(b22*(b34**2)))+((2.*b44)+((-8.*((b13**2)*b44))+((4.*(b22*b44))+aux39)));
    aux41=(32.*(b13*(b14*(b22*b34))))+((16.*(b23*(b24*b34)))+((-4.*(b34**2))+aux40));
    aux42=(-16.*((b14**2)*(b22*b33)))+((-8.*((b24**2)*b33))+((16.*(b13*(b14*b34)))+aux41));
    aux43=(16.*((b13**2)*(b24**2)))+((2.*b33)+((-8.*((b14**2)*b33))+((4.*(b22*b33))+aux42)));
    aux44=(16.*((b14**2)*(b23**2)))+((-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+aux43));
    aux45=(2.*b22)+((-8.*((b13**2)*b22))+((-8.*((b14**2)*b22))+((-4.*(b23**2))+aux44)));
    aux46=((0.+1.j)*((1.+(((0.+-8.j)*(b12*b14))+aux33))*s2))/(1.+((-4.*(b13**2))+((-4.*(b14**2))+aux45)));
    aux47=(4.*((b12**2)*b34))+((1.+(2.*b11))*(((2.*(b23*b24))+(-2.*(b22*b34)))-b34));
    aux48=(-4.*(b12*(b14*b23)))+((2.*(b13*(b14+((2.*(b14*b22))+(-2.*(b12*b24))))))+aux47);
    aux49=b12*(b13+(b24+((2.*(b24*b33))+((-2.*((b14+b23)*b34))+(2.*(b13*b44))))));
    aux50=(4.*(b11*(b24*b34)))+((-2.*(b23*b44))+((-4.*(b11*(b23*b44)))+(2.*aux49)));
    aux51=(-4.*(b13*(b23*b24)))+((2.*(b13*b34))+((4.*(b13*(b22*b34)))+((2.*(b24*b34))+aux50)));
    aux52=b14*(1.+((-4.*(b23**2))+((4.*(b13*b24))+((2.*b33)+(b22*(2.+(4.*b33)))))));
    aux53=(4.*aux48)+((0.+2.j)*((((-2.*(b11*b23))+((4.*((b14**2)*b23))+aux51))-aux52)-b23));
    aux54=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux55=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux56=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux55)));
    aux57=(16.*(b12*aux54))+(2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux56))))));
    aux58=(-4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+aux57;
    aux59=(-16.*((b13**2)*(b22*b44)))+((-8.*((b23**2)*b44))+((4.*(b33*b44))+((8.*(b22*(b33*b44)))+aux58)));
    aux60=(-8.*(b22*(b34**2)))+((2.*b44)+((-8.*((b13**2)*b44))+((4.*(b22*b44))+aux59)));
    aux61=(32.*(b13*(b14*(b22*b34))))+((16.*(b23*(b24*b34)))+((-4.*(b34**2))+aux60));
    aux62=(-16.*((b14**2)*(b22*b33)))+((-8.*((b24**2)*b33))+((16.*(b13*(b14*b34)))+aux61));
    aux63=(16.*((b13**2)*(b24**2)))+((2.*b33)+((-8.*((b14**2)*b33))+((4.*(b22*b33))+aux62)));
    aux64=(16.*((b14**2)*(b23**2)))+((-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+aux63));
    aux65=(2.*b22)+((-8.*((b13**2)*b22))+((-8.*((b14**2)*b22))+((-4.*(b23**2))+aux64)));
    aux66=(8.*(v11*(v24*v34)))+((8.*(v12*(v13*v44)))+((-4.*(v23*v44))+(-8.*(v11*(v23*v44)))));
    aux67=((0.+-16.j)*(v11*(v22*v34)))+((8.*(v13*(v22*v34)))+((-8.*(v12*(v23*v34)))+((4.*(v24*v34))+aux66)));
    aux68=((0.+16.j)*((v12**2)*v34))+((4.*(v13*v34))+((-8.*(v12*(v14*v34)))+(((0.+-8.j)*(v22*v34))+aux67)));
    aux69=(-8.*(v14*(v22*v33)))+((8.*(v12*(v24*v33)))+(((0.+-4.j)*v34)+(((0.+-8.j)*(v11*v34))+aux68)));
    aux70=((0.+16.j)*(v11*(v23*v24)))+((-8.*(v13*(v23*v24)))+((-4.*(v14*v33))+aux69));
    aux71=((0.+-16.j)*(v12*(v13*v24)))+((-8.*(v13*(v14*v24)))+(((0.+8.j)*(v23*v24))+aux70));
    aux72=((0.+-16.j)*(v12*(v14*v23)))+((8.*((v14**2)*v23))+((8.*(v14*(v23**2)))+((4.*(v12*v24))+aux71)));
    aux73=(-4.*(v14*v22))+(((0.+16.j)*(v13*(v14*v22)))+((-2.*v23)+((-4.*(v11*v23))+aux72)));
    aux74=(0.+1.j)*(r3*((4.*(v12*v13))+((-2.*v14)+(((0.+8.j)*(v13*v14))+aux73))));
    aux75=(v14*(v24+((2.*(v24*v33))+(-2.*(v23*v34)))))+(v13*(v23+((-2.*(v24*v34))+(2.*(v23*v44)))));
    aux76=(-4.*((v23**2)*(1.+(2.*v44))))+(v22*(2.+((-8.*(v34**2))+((4.*v44)+(v33*(4.+(8.*v44)))))));
    aux77=(16.*(v23*(v24*v34)))+((-4.*(v34**2))+((2.*v44)+((4.*(v33*v44))+aux76)));
    aux78=-2.*(v11*(1.+((-4.*(v24**2))+((2.*v33)+((-8.*((v24**2)*v33))+aux77)))));
    aux79=(4.*((v12**2)*(1.+((-4.*(v34**2))+((2.*v44)+(v33*(2.+(4.*v44))))))))+((-16.*(v12*aux75))+aux78);
    aux80=(16.*((v13**2)*(v22*v44)))+((8.*((v23**2)*v44))+((-4.*(v33*v44))+((-8.*(v22*(v33*v44)))+aux79)));
    aux81=(8.*(v22*(v34**2)))+((-2.*v44)+((8.*((v13**2)*v44))+((-4.*(v22*v44))+aux80)));
    aux82=(-32.*(v13*(v14*(v22*v34))))+((-16.*(v23*(v24*v34)))+((4.*(v34**2))+aux81));
    aux83=(16.*((v14**2)*(v22*v33)))+((8.*((v24**2)*v33))+((-16.*(v13*(v14*v34)))+aux82));
    aux84=(-16.*((v13**2)*(v24**2)))+((-2.*v33)+((8.*((v14**2)*v33))+((-4.*(v22*v33))+aux83)));
    aux85=(-16.*((v14**2)*(v23**2)))+((32.*(v13*(v14*(v23*v24))))+((4.*(v24**2))+aux84));
    aux86=(-2.*v22)+((8.*((v13**2)*v22))+((8.*((v14**2)*v22))+((4.*(v23**2))+aux85)));
    aux87=(8.*(v12*(v34**2)))+((-4.*(v12*v44))+((8.*(v13*(v23*v44)))+(-8.*(v12*(v33*v44)))));
    aux88=((0.+-16.j)*(v12*(v23*v34)))+((-8.*(v14*(v23*v34)))+((-8.*(v13*(v24*v34)))+aux87));
    aux89=(4.*(v22*v34))+((8.*(v11*(v22*v34)))+(((0.+16.j)*(v13*(v22*v34)))+aux88));
    aux90=(2.*v34)+((4.*(v11*v34))+((-8.*((v12**2)*v34))+(((0.+8.j)*(v13*v34))+aux89)));
    aux91=((0.+-16.j)*(v14*(v22*v33)))+(((0.+16.j)*(v12*(v24*v33)))+((8.*(v14*(v24*v33)))+aux90));
    aux92=((0.+-16.j)*(v13*(v23*v24)))+((-4.*(v12*v33))+(((0.+-8.j)*(v14*v33))+aux91));
    aux93=(8.*(v12*(v13*v24)))+((4.*(v14*v24))+((-4.*(v23*v24))+((-8.*(v11*(v23*v24)))+aux92)));
    aux94=(8.*(v12*(v14*v23)))+(((0.+16.j)*(v14*(v23**2)))+(((0.+8.j)*(v12*v24))+aux93));
    aux95=(-4.*(v13*v14))+(((0.+-8.j)*(v14*v22))+((-8.*(v13*(v14*v22)))+((4.*(v13*v23))+aux94)));
    aux96=(v14*(v24+((2.*(v24*v33))+(-2.*(v23*v34)))))+(v13*(v23+((-2.*(v24*v34))+(2.*(v23*v44)))));
    aux97=(-4.*((v23**2)*(1.+(2.*v44))))+(v22*(2.+((-8.*(v34**2))+((4.*v44)+(v33*(4.+(8.*v44)))))));
    aux98=(16.*(v23*(v24*v34)))+((-4.*(v34**2))+((2.*v44)+((4.*(v33*v44))+aux97)));
    aux99=-2.*(v11*(1.+((-4.*(v24**2))+((2.*v33)+((-8.*((v24**2)*v33))+aux98)))));
    aux100=(4.*((v12**2)*(1.+((-4.*(v34**2))+((2.*v44)+(v33*(2.+(4.*v44))))))))+((-16.*(v12*aux96))+aux99);
    aux101=(16.*((v13**2)*(v22*v44)))+((8.*((v23**2)*v44))+((-4.*(v33*v44))+((-8.*(v22*(v33*v44)))+aux100)));
    aux102=(8.*(v22*(v34**2)))+((-2.*v44)+((8.*((v13**2)*v44))+((-4.*(v22*v44))+aux101)));
    aux103=(-32.*(v13*(v14*(v22*v34))))+((-16.*(v23*(v24*v34)))+((4.*(v34**2))+aux102));
    aux104=(16.*((v14**2)*(v22*v33)))+((8.*((v24**2)*v33))+((-16.*(v13*(v14*v34)))+aux103));
    aux105=(-16.*((v13**2)*(v24**2)))+((-2.*v33)+((8.*((v14**2)*v33))+((-4.*(v22*v33))+aux104)));
    aux106=(-16.*((v14**2)*(v23**2)))+((32.*(v13*(v14*(v23*v24))))+((4.*(v24**2))+aux105));
    aux107=(-2.*v22)+((8.*((v13**2)*v22))+((8.*((v14**2)*v22))+((4.*(v23**2))+aux106)));
    aux108=((0.+1.j)*(r1*((-2.*v12)+(((0.+-4.j)*v14)+aux95))))/(-1.+((4.*(v13**2))+((4.*(v14**2))+aux107)));
    aux109=(16.*((v12**2)*(v33*v44)))+((-8.*(v22*(v33*v44)))+(-16.*(v11*(v22*(v33*v44)))));
    aux110=(16.*(v11*((v23**2)*v44)))+((-8.*(v33*v44))+((-16.*(v11*(v33*v44)))+aux109));
    aux111=(16.*((v13**2)*(v22*v44)))+((-32.*(v12*(v13*(v23*v44))))+((8.*((v23**2)*v44))+aux110));
    aux112=(8.*((v12**2)*v44))+((16.*((v13**2)*v44))+((-4.*(v22*v44))+((-8.*(v11*(v22*v44)))+aux111)));
    aux113=(8.*(v22*(v34**2)))+((16.*(v11*(v22*(v34**2))))+((-4.*v44)+((-8.*(v11*v44))+aux112)));
    aux114=(8.*(v34**2))+((16.*(v11*(v34**2)))+((-16.*((v12**2)*(v34**2)))+aux113));
    aux115=(32.*(v12*(v13*(v24*v34))))+((-16.*(v23*(v24*v34)))+((-32.*(v11*(v23*(v24*v34))))+aux114));
    aux116=((0.+-8.j)*(v23*v34))+(((0.+-16.j)*(v11*(v23*v34)))+((32.*(v12*(v14*(v23*v34))))+aux115));
    aux117=((0.+16.j)*(v12*(v13*v34)))+((-32.*(v13*(v14*v34)))+((-32.*(v13*(v14*(v22*v34))))+aux116));
    aux118=(-32.*(v12*(v14*(v24*v33))))+((8.*((v24**2)*v33))+((16.*(v11*((v24**2)*v33)))+aux117));
    aux119=(16.*((v14**2)*(v22*v33)))+(((0.+8.j)*(v24*v33))+(((0.+16.j)*(v11*(v24*v33)))+aux118));
    aux120=(-4.*(v11*v33))+(((0.+-16.j)*(v12*(v14*v33)))+((16.*((v14**2)*v33))+aux119));
    aux121=(4.*(v24**2))+((8.*(v11*(v24**2)))+((-16.*((v13**2)*(v24**2)))+((-2.*v33)+aux120)));
    aux122=((0.+-16.j)*((v13**2)*v24))+((-16.*(v12*(v14*v24)))+((32.*(v13*(v14*(v23*v24))))+aux121));
    aux123=(-16.*((v14**2)*(v23**2)))+(((0.+4.j)*v24)+(((0.+8.j)*(v11*v24))+aux122));
    aux124=(8.*(v14**2))+((8.*((v14**2)*v22))+(((0.+16.j)*(v13*(v14*v23)))+aux123));
    aux125=(0.+1.j)*(r2*(-1.+((-2.*v11)+((4.*(v13**2))+(((0.+-8.j)*(v12*v14))+aux124)))));
    aux126=(v14*(v24+((2.*(v24*v33))+(-2.*(v23*v34)))))+(v13*(v23+((-2.*(v24*v34))+(2.*(v23*v44)))));
    aux127=(-4.*((v23**2)*(1.+(2.*v44))))+(v22*(2.+((-8.*(v34**2))+((4.*v44)+(v33*(4.+(8.*v44)))))));
    aux128=(16.*(v23*(v24*v34)))+((-4.*(v34**2))+((2.*v44)+((4.*(v33*v44))+aux127)));
    aux129=2.*(v11*(1.+((-4.*(v24**2))+((2.*v33)+((-8.*((v24**2)*v33))+aux128)))));
    aux130=(-4.*((v12**2)*(1.+((-4.*(v34**2))+((2.*v44)+(v33*(2.+(4.*v44))))))))+((16.*(v12*aux126))+aux129);
    aux131=(-16.*((v13**2)*(v22*v44)))+((-8.*((v23**2)*v44))+((4.*(v33*v44))+((8.*(v22*(v33*v44)))+aux130)));
    aux132=(-8.*(v22*(v34**2)))+((2.*v44)+((-8.*((v13**2)*v44))+((4.*(v22*v44))+aux131)));
    aux133=(32.*(v13*(v14*(v22*v34))))+((16.*(v23*(v24*v34)))+((-4.*(v34**2))+aux132));
    aux134=(-16.*((v14**2)*(v22*v33)))+((-8.*((v24**2)*v33))+((16.*(v13*(v14*v34)))+aux133));
    aux135=(16.*((v13**2)*(v24**2)))+((2.*v33)+((-8.*((v14**2)*v33))+((4.*(v22*v33))+aux134)));
    aux136=(16.*((v14**2)*(v23**2)))+((-32.*(v13*(v14*(v23*v24))))+((-4.*(v24**2))+aux135));
    aux137=(2.*v22)+((-8.*((v13**2)*v22))+((-8.*((v14**2)*v22))+((-4.*(v23**2))+aux136)));
    aux138=((0.+16.j)*((v12**2)*(v33*v44)))+(((0.+-8.j)*(v22*(v33*v44)))+((0.+-16.j)*(v11*(v22*(v33*v44)))));
    aux139=((0.+16.j)*(v11*((v23**2)*v44)))+(((0.+-4.j)*(v33*v44))+(((0.+-8.j)*(v11*(v33*v44)))+aux138));
    aux140=((0.+16.j)*((v13**2)*(v22*v44)))+(((0.+-32.j)*(v12*(v13*(v23*v44))))+(((0.+8.j)*((v23**2)*v44))+aux139));
    aux141=((0.+8.j)*((v13**2)*v44))+(((0.+-4.j)*(v22*v44))+(((0.+-8.j)*(v11*(v22*v44)))+aux140));
    aux142=((0.+-2.j)*v44)+(((0.+-4.j)*(v11*v44))+(((0.+8.j)*((v12**2)*v44))+aux141));
    aux143=((0.+-16.j)*((v12**2)*(v34**2)))+(((0.+8.j)*(v22*(v34**2)))+(((0.+16.j)*(v11*(v22*(v34**2))))+aux142));
    aux144=((0.+-32.j)*(v11*(v23*(v24*v34))))+(((0.+4.j)*(v34**2))+(((0.+8.j)*(v11*(v34**2)))+aux143));
    aux145=((0.+32.j)*(v12*(v13*(v24*v34))))+(((0.+-16.j)*(v23*(v24*v34)))+aux144);
    aux146=(-8.*(v23*v34))+((-16.*(v11*(v23*v34)))+(((0.+32.j)*(v12*(v14*(v23*v34))))+aux145));
    aux147=((0.+-16.j)*(v13*(v14*v34)))+(((0.+-32.j)*(v13*(v14*(v22*v34))))+aux146);
    aux148=((0.+8.j)*((v24**2)*v33))+(((0.+16.j)*(v11*((v24**2)*v33)))+((16.*(v12*(v13*v34)))+aux147));
    aux149=(8.*(v24*v33))+((16.*(v11*(v24*v33)))+(((0.+-32.j)*(v12*(v14*(v24*v33))))+aux148));
    aux150=((0.+-12.j)*(v22*v33))+(((0.+-24.j)*(v11*(v22*v33)))+(((0.+16.j)*((v14**2)*(v22*v33)))+aux149));
    aux151=((0.+24.j)*((v12**2)*v33))+((-16.*(v12*(v14*v33)))+(((0.+8.j)*((v14**2)*v33))+aux150));
    aux152=((0.+-16.j)*((v13**2)*(v24**2)))+(((0.+-6.j)*v33)+(((0.+-12.j)*(v11*v33))+aux151));
    aux153=((0.+32.j)*(v13*(v14*(v23*v24))))+(((0.+4.j)*(v24**2))+(((0.+8.j)*(v11*(v24**2)))+aux152));
    aux154=(8.*(v11*v24))+((-16.*((v13**2)*v24))+(((0.+-16.j)*(v12*(v14*v24)))+aux153));
    aux155=((0.+24.j)*(v11*(v23**2)))+(((0.+-16.j)*((v14**2)*(v23**2)))+((4.*v24)+aux154));
    aux156=((0.+-48.j)*(v12*(v13*v23)))+((16.*(v13*(v14*v23)))+(((0.+12.j)*(v23**2))+aux155));
    aux157=((0.+-12.j)*(v11*v22))+(((0.+24.j)*((v13**2)*v22))+(((0.+8.j)*((v14**2)*v22))+aux156));
    aux158=((0.+12.j)*(v13**2))+((-8.*(v12*v14))+(((0.+4.j)*(v14**2))+(((0.+-6.j)*v22)+aux157)));
    aux159=(0.+1.j)*(r4*((0.+-3.j)+(((0.+-6.j)*v11)+(((0.+12.j)*(v12**2))+aux158))));
    aux160=(v14*(v24+((2.*(v24*v33))+(-2.*(v23*v34)))))+(v13*(v23+((-2.*(v24*v34))+(2.*(v23*v44)))));
    aux161=(-4.*((v23**2)*(1.+(2.*v44))))+(v22*(2.+((-8.*(v34**2))+((4.*v44)+(v33*(4.+(8.*v44)))))));
    aux162=(16.*(v23*(v24*v34)))+((-4.*(v34**2))+((2.*v44)+((4.*(v33*v44))+aux161)));
    aux163=2.*(v11*(1.+((-4.*(v24**2))+((2.*v33)+((-8.*((v24**2)*v33))+aux162)))));
    aux164=(-4.*((v12**2)*(1.+((-4.*(v34**2))+((2.*v44)+(v33*(2.+(4.*v44))))))))+((16.*(v12*aux160))+aux163);
    aux165=(-16.*((v13**2)*(v22*v44)))+((-8.*((v23**2)*v44))+((4.*(v33*v44))+((8.*(v22*(v33*v44)))+aux164)));
    aux166=(-8.*(v22*(v34**2)))+((2.*v44)+((-8.*((v13**2)*v44))+((4.*(v22*v44))+aux165)));
    aux167=(32.*(v13*(v14*(v22*v34))))+((16.*(v23*(v24*v34)))+((-4.*(v34**2))+aux166));
    aux168=(-16.*((v14**2)*(v22*v33)))+((-8.*((v24**2)*v33))+((16.*(v13*(v14*v34)))+aux167));
    aux169=(16.*((v13**2)*(v24**2)))+((2.*v33)+((-8.*((v14**2)*v33))+((4.*(v22*v33))+aux168)));
    aux170=(16.*((v14**2)*(v23**2)))+((-32.*(v13*(v14*(v23*v24))))+((-4.*(v24**2))+aux169));
    aux171=(2.*v22)+((-8.*((v13**2)*v22))+((-8.*((v14**2)*v22))+((-4.*(v23**2))+aux170)));
    aux172=4.*((v13**2)*(-1.+(((0.+4.j)*v24)+((4.*(v24**2))+(-4.*((1.+v22)*v44))))));
    aux173=(-2.*(v14*((1.+v22)*v34)))+((v12*(((0.+1.j)+(2.*v24))*v34))+(-2.*(v12*(v23*v44))));
    aux174=(-4.*(v22*v44))+((8.*((v23**2)*v44))+(-2.*(v33*(1.+(4.*((1.+v22)*v44))))));
    aux175=((0.+4.j)*(v24*(1.+((2.*v33)+((0.+4.j)*(v23*v34))))))+((-4.*v44)+aux174);
    aux176=((v24**2)*(4.+(8.*v33)))+(((0.+-8.j)*(v23*v34))+((8.*(v34**2))+((8.*(v22*(v34**2)))+aux175)));
    aux177=(-16.*(v13*((v14*(v23*((0.+1.j)+(2.*v24))))+aux173)))+(-2.*(v11*(-1.+aux176)));
    aux178=(8.*(v33*v44))+((-16.*((v12**2)*(v33*v44)))+((8.*(v22*(v33*v44)))+(aux172+aux177)));
    aux179=(4.*v44)+((-8.*((v12**2)*v44))+((4.*(v22*v44))+((-8.*((v23**2)*v44))+aux178)));
    aux180=(-8.*(v34**2))+((16.*((v12**2)*(v34**2)))+((-8.*(v22*(v34**2)))+aux179));
    aux181=((0.+8.j)*(v23*v34))+((-32.*(v12*(v14*(v23*v34))))+((16.*(v23*(v24*v34)))+aux180));
    aux182=((0.+-8.j)*(v24*v33))+((32.*(v12*(v14*(v24*v33))))+((-8.*((v24**2)*v33))+aux181));
    aux183=((0.+16.j)*(v12*(v14*v33)))+((-16.*((v14**2)*v33))+((-16.*((v14**2)*(v22*v33)))+aux182));
    aux184=((0.+-4.j)*v24)+((16.*(v12*(v14*v24)))+((-4.*(v24**2))+((2.*v33)+aux183)));
    aux185=(-8.*(v14**2))+((-8.*((v14**2)*v22))+((16.*((v14**2)*(v23**2)))+aux184));
    aux186=(v22*(2.+((8.*(v34**2))+((v33*(4.+(-8.*v44)))+(-4.*v44)))))+((-2.*v44)+((-4.*(v33*v44))+((v23**2)*(-4.+(8.*v44)))));
    aux187=(8.*((v24**2)*v33))+((-8.*(v23*(((0.+1.j)+(2.*v24))*v34)))+((4.*(v34**2))+aux186));
    aux188=((0.+4.j)*v24)+((4.*(v24**2))+((2.*v33)+(((0.+8.j)*(v24*v33))+aux187)));
    aux189=(v14*((0.+1.j)+(((0.+2.j)*v33)+((v24*(2.+(4.*v33)))+(-4.*(v23*v34))))))+(-2.*(v13*(v23+((((0.+1.j)+(2.*v24))*v34)+(-2.*(v23*v44))))));
    aux190=(4.*(v33*v44))+((8.*(v22*(v33*v44)))+((-2.*(v11*(1.+aux188)))+(8.*(v12*aux189))));
    aux191=(4.*(v22*v44))+((-16.*((v13**2)*(v22*v44)))+((-8.*((v23**2)*v44))+aux190));
    aux192=(4.*((v12**2)*(1.+((4.*(v34**2))+((v33*(2.+(-4.*v44)))+(-2.*v44))))))+((2.*v44)+((-8.*((v13**2)*v44))+aux191));
    aux193=((0.+8.j)*(v23*v34))+((16.*(v23*(v24*v34)))+((-4.*(v34**2))+((-8.*(v22*(v34**2)))+aux192)));
    aux194=(-8.*((v24**2)*v33))+((16.*(v13*(v14*v34)))+((32.*(v13*(v14*(v22*v34))))+aux193));
    aux195=(-4.*(v22*v33))+((-16.*((v14**2)*(v22*v33)))+(((0.+-8.j)*(v24*v33))+aux194));
    aux196=(-4.*(v24**2))+((16.*((v13**2)*(v24**2)))+((-2.*v33)+((-8.*((v14**2)*v33))+aux195)));
    aux197=((0.+-4.j)*v24)+(((0.+16.j)*((v13**2)*v24))+((-32.*(v13*(v14*(v23*v24))))+aux196));
    aux198=((0.+-16.j)*(v13*(v14*v23)))+((4.*(v23**2))+((16.*((v14**2)*(v23**2)))+aux197));
    aux199=(-4.*(v14**2))+((-2.*v22)+((8.*((v13**2)*v22))+((-8.*((v14**2)*v22))+aux198)));
    aux200=(-4.*(v23**2))+((4.*(v13*((0.+-1.j)+(((0.+-2.j)*v22)+v24))))+((2.*v33)+(4.*(v22*v33))));
    aux201=(-4.*(v24*v33))+((4.*(v14*v34))+((4.*(v23*v34))+(v13*(-2.+(((0.+8.j)*v24)+(-4.*v44))))));
    aux202=(v12*(((0.+8.j)*(v14*v23))+((-2.*v24)+aux201)))+((2.*(v23*v44))+(4.*(v11*(v23*v44))));
    aux203=((0.+8.j)*(v11*(v22*v34)))+((-4.*(v13*(v22*v34)))+((-2.*(v24*v34))+((-4.*(v11*(v24*v34)))+aux202)));
    aux204=((0.+-8.j)*((v12**2)*v34))+((-2.*(v13*v34))+(((0.+4.j)*(v22*v34))+aux203));
    aux205=(v14*(1.+((2.*v22)+aux200)))+(((0.+2.j)*v34)+(((0.+4.j)*(v11*v34))+aux204));
    aux206=((0.+-4.j)*(v23*v24))+(((0.+-8.j)*(v11*(v23*v24)))+((4.*(v13*(v23*v24)))+aux205));
    aux207=((0.+2.j)*v33)+((-2.*(v24*v33))+(((0.+2.j)*(v22*(1.+(2.*v33))))+(2.*(v23*v34))));
    aux208=v14*(((0.+1.j)+(v13+((2.*(v13*v22))+(((0.+-4.j)*(v23**2))+aux207))))-v24);
    aux209=(2.*v33)+(((0.+8.j)*(v23*v34))+((-4.*(v34**2))+((2.*v44)+(4.*(v33*v44)))));
    aux210=1.+((-4.*(v14*v23))+((-4.*(v24*((0.+1.j)+(v13+((0.+2.j)*v33)))))+aux209));
    aux211=(4.*(v13*(v24*v34)))+((2.*aux208)+((-4.*(v13*(v23*v44)))+(v12*aux210)));
    aux212=(-2.*(v22*v34))+((-4.*(v11*(v22*v34)))+(((0.+-8.j)*(v13*(v22*v34)))+aux211));
    aux213=((0.+8.j)*(v13*(v23*v24)))+((-2.*(v11*v34))+((4.*((v12**2)*v34))+(((0.+-4.j)*(v13*v34))+aux212)));
    aux214=r1*(((-2.*(v13*v23))+((2.*(v23*v24))+((4.*(v11*(v23*v24)))+aux213)))-v34);
    aux215=(0.+-2.j)*((r3*(v23+((2.*(v11*v23))+((-4.*((v14**2)*v23))+aux206))))+aux214);
    aux216=((0.+1.j)*(r2*(1.+(((0.+8.j)*(v12*v14))+aux185))))+((r4*(-1.+((4.*(v13**2))+aux199)))+aux215);
    aux217=(v14*(v24+((2.*(v24*v33))+(-2.*(v23*v34)))))+(v13*(v23+((-2.*(v24*v34))+(2.*(v23*v44)))));
    aux218=(-4.*((v23**2)*(1.+(2.*v44))))+(v22*(2.+((-8.*(v34**2))+((4.*v44)+(v33*(4.+(8.*v44)))))));
    aux219=(16.*(v23*(v24*v34)))+((-4.*(v34**2))+((2.*v44)+((4.*(v33*v44))+aux218)));
    aux220=-2.*(v11*(1.+((-4.*(v24**2))+((2.*v33)+((-8.*((v24**2)*v33))+aux219)))));
    aux221=(4.*((v12**2)*(1.+((-4.*(v34**2))+((2.*v44)+(v33*(2.+(4.*v44))))))))+((-16.*(v12*aux217))+aux220);
    aux222=(16.*((v13**2)*(v22*v44)))+((8.*((v23**2)*v44))+((-4.*(v33*v44))+((-8.*(v22*(v33*v44)))+aux221)));
    aux223=(8.*(v22*(v34**2)))+((-2.*v44)+((8.*((v13**2)*v44))+((-4.*(v22*v44))+aux222)));
    aux224=(-32.*(v13*(v14*(v22*v34))))+((-16.*(v23*(v24*v34)))+((4.*(v34**2))+aux223));
    aux225=(16.*((v14**2)*(v22*v33)))+((8.*((v24**2)*v33))+((-16.*(v13*(v14*v34)))+aux224));
    aux226=(-16.*((v13**2)*(v24**2)))+((-2.*v33)+((8.*((v14**2)*v33))+((-4.*(v22*v33))+aux225)));
    aux227=(-16.*((v14**2)*(v23**2)))+((32.*(v13*(v14*(v23*v24))))+((4.*(v24**2))+aux226));
    aux228=(-2.*v22)+((8.*((v13**2)*v22))+((8.*((v14**2)*v22))+((4.*(v23**2))+aux227)));
    aux229=(0.+-4.j)*(b12*(b14+(((0.+4.j)*(b13*b23))+((2.*(b14*b33))+(-2.*(b13*b34))))));
    aux230=(2.*((1.+((0.+2.j)*b24))*(1.+(2.*b33))))+((b22*(4.+(8.*b33)))+((0.+-8.j)*(b23*b34)));
    aux231=((0.+4.j)*(b24*b33))+(((0.+-4.j)*(b23*b34))+(aux229+(b11*((-8.*(b23**2))+aux230))));
    aux232=np.conjugate((((0.+8.j)*(b13*(b14*b23)))+(((0.+-8.j)*((b13**2)*b24))+aux231)));
    aux233=((0.+-2.j)*b24)+((2.*b33)+((4.*(b22*b33))+((-4.*((b12**2)*(1.+(2.*b33))))+aux232)));
    aux234=(8.*(b13**2))+(-2.*(1.+((2.*b22)+((-8.*((b13**2)*b22))+((-4.*(b23**2))+aux233)))));
    aux235=-2.*((b12**2)*(1.+((2.*b33)+((-4.*(b34**2))+((2.*b44)+(4.*(b33*b44)))))));
    aux236=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux237=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux238=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux237)));
    aux239=(8.*(b12*aux236))+(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux238)))));
    aux240=(-4.*((b23**2)*b44))+((2.*(b33*b44))+((4.*(b22*(b33*b44)))+(aux235+aux239)));
    aux241=(-4.*((b13**2)*b44))+((2.*(b22*b44))+((-8.*((b13**2)*(b22*b44)))+aux240));
    aux242=(16.*(b13*(b14*(b22*b34))))+((8.*(b23*(b24*b34)))+((-4.*(b22*(b34**2)))+aux241));
    aux243=(-8.*((b14**2)*(b22*b33)))+((-4.*((b24**2)*b33))+((8.*(b13*(b14*b34)))+aux242));
    aux244=(8.*((b13**2)*(b24**2)))+((-4.*((b14**2)*b33))+((2.*(b22*b33))+aux243));
    aux245=(-4.*((b14**2)*b22))+((8.*((b14**2)*(b23**2)))+((-16.*(b13*(b14*(b23*b24))))+aux244));
    aux246=(-2.*b33)+((4.*(b34**2))+((-2.*b44)+(-2.*((-4.*((b13**2)*b22))+aux245))));
    aux247=(4.*(b13**2))+((4.*(b14**2))+((-2.*b22)+((4.*(b23**2))+((4.*(b24**2))+aux246))));
    aux248=(b13*((-2.*(b23*b24))+(b34+(2.*(b22*b34)))))+(b12*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))));
    aux249=-2.*(b13*((b14+((2.*(b14*b22))+((2.*(b24*b34))+(-2.*(b23*b44)))))-b23));
    aux250=(4.*(b14*b23))+((4.*(b13*b24))+((-2.*b33)+((4.*(b34**2))+((-2.*b44)+(-4.*(b33*b44))))));
    aux251=(4.*(b11*(b22*b34)))+((-4.*(b14*(b23*b34)))+(aux249+(b12*(-1.+aux250))));
    aux252=(4.*(b14*(b24*b33)))+(b34+((2.*(b11*b34))+((-4.*((b12**2)*b34))+((2.*(b22*b34))+aux251))));
    aux253=(0.+2.j)*(((2.*(b14*b24))+((-2.*(b23*b24))+((-4.*(b11*(b23*b24)))+aux252)))*s1);
    aux254=(-4.*(b13*(b14*b23)))+((4.*((b13**2)*b24))+(2.*(b12*(b14+((2.*(b14*b33))+(-2.*(b13*b34)))))));
    aux255=4.*((aux254-((1.+(2.*b11))*(b24+((2.*(b24*b33))+(-2.*(b23*b34))))))*s2);
    aux256=(2.*(b11*b44))+((-4.*((b13**2)*b44))+((2.*(b33*b44))+(4.*(b11*(b33*b44)))));
    aux257=(8.*(b13*(b14*b34)))+((-2.*(b34**2))+((-4.*(b11*(b34**2)))+(b44+aux256)));
    aux258=(-4.*(b11*(b22*b33)))+((-2.*((b14**2)*(1.+(2.*b33))))+(((b12**2)*(2.+(4.*b33)))+aux257));
    aux259=(-8.*(b12*(b13*b23)))+((2.*(b23**2))+((4.*(b11*(b23**2)))+((-2.*(b22*b33))+aux258)));
    aux260=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux261=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux262=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux261)));
    aux263=2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux262)))));
    aux264=(-4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+((16.*(b12*aux260))+aux263);
    aux265=(-16.*((b13**2)*(b22*b44)))+((-8.*((b23**2)*b44))+((4.*(b33*b44))+((8.*(b22*(b33*b44)))+aux264)));
    aux266=(-8.*(b22*(b34**2)))+((2.*b44)+((-8.*((b13**2)*b44))+((4.*(b22*b44))+aux265)));
    aux267=(32.*(b13*(b14*(b22*b34))))+((16.*(b23*(b24*b34)))+((-4.*(b34**2))+aux266));
    aux268=(-16.*((b14**2)*(b22*b33)))+((-8.*((b24**2)*b33))+((16.*(b13*(b14*b34)))+aux267));
    aux269=(16.*((b13**2)*(b24**2)))+((2.*b33)+((-8.*((b14**2)*b33))+((4.*(b22*b33))+aux268)));
    aux270=(16.*((b14**2)*(b23**2)))+((-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+aux269));
    aux271=(2.*b22)+((-8.*((b13**2)*b22))+((-8.*((b14**2)*b22))+((-4.*(b23**2))+aux270)));
    aux272=(4.*((b12**2)*b34))+((1.+(2.*b11))*(((2.*(b23*b24))+(-2.*(b22*b34)))-b34));
    aux273=(-4.*(b12*(b14*b23)))+((2.*(b13*(b14+((2.*(b14*b22))+(-2.*(b12*b24))))))+aux272);
    aux274=b12*(b13+(b24+((2.*(b24*b33))+((-2.*((b14+b23)*b34))+(2.*(b13*b44))))));
    aux275=(4.*(b11*(b24*b34)))+((-2.*(b23*b44))+((-4.*(b11*(b23*b44)))+(2.*aux274)));
    aux276=(-4.*(b13*(b23*b24)))+((2.*(b13*b34))+((4.*(b13*(b22*b34)))+((2.*(b24*b34))+aux275)));
    aux277=b14*(1.+((-4.*(b23**2))+((4.*(b13*b24))+((2.*b33)+(b22*(2.+(4.*b33)))))));
    aux278=(0.+2.j)*(((((-2.*(b11*b23))+((4.*((b14**2)*b23))+aux276))-aux277)-b23)*s3);
    aux279=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux280=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux281=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux280)));
    aux282=2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux281)))));
    aux283=(-4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+((16.*(b12*aux279))+aux282);
    aux284=(-16.*((b13**2)*(b22*b44)))+((-8.*((b23**2)*b44))+((4.*(b33*b44))+((8.*(b22*(b33*b44)))+aux283)));
    aux285=(-8.*(b22*(b34**2)))+((2.*b44)+((-8.*((b13**2)*b44))+((4.*(b22*b44))+aux284)));
    aux286=(32.*(b13*(b14*(b22*b34))))+((16.*(b23*(b24*b34)))+((-4.*(b34**2))+aux285));
    aux287=(-16.*((b14**2)*(b22*b33)))+((-8.*((b24**2)*b33))+((16.*(b13*(b14*b34)))+aux286));
    aux288=(16.*((b13**2)*(b24**2)))+((2.*b33)+((-8.*((b14**2)*b33))+((4.*(b22*b33))+aux287)));
    aux289=(16.*((b14**2)*(b23**2)))+((-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+aux288));
    aux290=(2.*b22)+((-8.*((b13**2)*b22))+((-8.*((b14**2)*b22))+((-4.*(b23**2))+aux289)));
    aux291=(0.+-4.j)*(b12*(b14+(((0.+4.j)*(b13*b23))+((2.*(b14*b33))+(-2.*(b13*b34))))));
    aux292=(2.*((1.+((0.+2.j)*b24))*(1.+(2.*b33))))+((b22*(4.+(8.*b33)))+((0.+-8.j)*(b23*b34)));
    aux293=((0.+4.j)*(b24*b33))+(((0.+-4.j)*(b23*b34))+(aux291+(b11*((-8.*(b23**2))+aux292))));
    aux294=np.conjugate((((0.+8.j)*(b13*(b14*b23)))+(((0.+-8.j)*((b13**2)*b24))+aux293)));
    aux295=((0.+-2.j)*b24)+((2.*b33)+((4.*(b22*b33))+((-4.*((b12**2)*(1.+(2.*b33))))+aux294)));
    aux296=(8.*(b13**2))+(-2.*(1.+((2.*b22)+((-8.*((b13**2)*b22))+((-4.*(b23**2))+aux295)))));
    aux297=-2.*((b12**2)*(1.+((2.*b33)+((-4.*(b34**2))+((2.*b44)+(4.*(b33*b44)))))));
    aux298=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux299=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux300=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux299)));
    aux301=(8.*(b12*aux298))+(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux300)))));
    aux302=(-4.*((b23**2)*b44))+((2.*(b33*b44))+((4.*(b22*(b33*b44)))+(aux297+aux301)));
    aux303=(-4.*((b13**2)*b44))+((2.*(b22*b44))+((-8.*((b13**2)*(b22*b44)))+aux302));
    aux304=(16.*(b13*(b14*(b22*b34))))+((8.*(b23*(b24*b34)))+((-4.*(b22*(b34**2)))+aux303));
    aux305=(-8.*((b14**2)*(b22*b33)))+((-4.*((b24**2)*b33))+((8.*(b13*(b14*b34)))+aux304));
    aux306=(8.*((b13**2)*(b24**2)))+((-4.*((b14**2)*b33))+((2.*(b22*b33))+aux305));
    aux307=(-4.*((b14**2)*b22))+((8.*((b14**2)*(b23**2)))+((-16.*(b13*(b14*(b23*b24))))+aux306));
    aux308=(-2.*b33)+((4.*(b34**2))+((-2.*b44)+(-2.*((-4.*((b13**2)*b22))+aux307))));
    aux309=(4.*(b13**2))+((4.*(b14**2))+((-2.*b22)+((4.*(b23**2))+((4.*(b24**2))+aux308))));
    aux310=(1.+((-4.*(b13**2))+((-4.*(b14**2))+aux290)))*(s4*(-1.+(aux296/(-1.+aux309))));
    aux311=((0.+1.j)*((1.+((-4.*(b13**2))+((-4.*(b14**2))+aux271)))*s2))+((4.*(aux273*s3))+(aux278+aux310));
    aux312=((0.+2.j)*((((-2.*(b11*b22))+((4.*((b13**2)*b22))+aux259))-b22)*s2))+aux311;
    aux313=(-4.*(b14*((1.+((-4.*(b23**2))+((2.*b33)+(b22*(2.+(4.*b33))))))*s1)))+((8.*(aux248*s1))+(aux253+(aux255+aux312)));
    aux314=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux315=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux316=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux315)));
    aux317=2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux316)))));
    aux318=(-4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+((16.*(b12*aux314))+aux317);
    aux319=(-16.*((b13**2)*(b22*b44)))+((-8.*((b23**2)*b44))+((4.*(b33*b44))+((8.*(b22*(b33*b44)))+aux318)));
    aux320=(-8.*(b22*(b34**2)))+((2.*b44)+((-8.*((b13**2)*b44))+((4.*(b22*b44))+aux319)));
    aux321=(32.*(b13*(b14*(b22*b34))))+((16.*(b23*(b24*b34)))+((-4.*(b34**2))+aux320));
    aux322=(-16.*((b14**2)*(b22*b33)))+((-8.*((b24**2)*b33))+((16.*(b13*(b14*b34)))+aux321));
    aux323=(16.*((b13**2)*(b24**2)))+((2.*b33)+((-8.*((b14**2)*b33))+((4.*(b22*b33))+aux322)));
    aux324=(16.*((b14**2)*(b23**2)))+((-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+aux323));
    aux325=(2.*b22)+((-8.*((b13**2)*b22))+((-8.*((b14**2)*b22))+((-4.*(b23**2))+aux324)));
    aux326=(s4*(1.+(aux234/(-1.+aux247))))+(aux313/(1.+((-4.*(b13**2))+((-4.*(b14**2))+aux325))));
    aux327=(aux159/(1.+((-4.*(v13**2))+((-4.*(v14**2))+aux171))))+((aux216/(-1.+((4.*(v13**2))+((4.*(v14**2))+aux228))))+aux326);
    aux328=(aux74/(-1.+((4.*(v13**2))+((4.*(v14**2))+aux86))))+(aux108+((aux125/(1.+((-4.*(v13**2))+((-4.*(v14**2))+aux137))))+aux327));
    aux329=aux46+(((aux53*s3)/(1.+((-4.*(b13**2))+((-4.*(b14**2))+aux65))))+aux328);
    output=0.25*(aux19+aux329);
    return output


def independiente(V,B,R,S):
    v11,v12,v13,v14=separate(V,0)
    v21,v22,v23,v24=separate(V,1)
    v31,v32,v33,v34=separate(V,2)
    v41,v42,v43,v44=separate(V,3)
    b11,b12,b13,b14=separate(B,0)
    b21,b22,b23,b24=separate(B,1)
    b31,b32,b33,b34=separate(B,2)
    b41,b42,b43,b44=separate(B,3)
    r1,r2,r3,r4=R[0],R[1],R[2],R[3]
    s1,s2,s3,s4=S[0],S[1],S[2],S[3]
    aux0=-4.*(v12*(v23+(((0.+4.j)*(v14*v24))+((-2.*(v24*v34))+(2.*(v23*v44))))));
    aux1=aux0+((0.+-2.j)*(v11*(1.+((-4.*(v24**2))+((2.*v44)+(v22*(2.+(4.*v44))))))));
    aux2=((0.+-4.j)*(v22*v44))+((8.*(v13*(v22*v44)))+(((0.+4.j)*((v12**2)*(1.+(2.*v44))))+aux1));
    aux3=(-4.*(v14*v34))+((-8.*(v14*(v22*v34)))+(((0.+-2.j)*v44)+((4.*(v13*v44))+aux2)));
    aux4=((0.+8.j)*((v14**2)*v22))+((8.*(v14*(v23*v24)))+(((0.+4.j)*(v24**2))+((-8.*(v13*(v24**2)))+aux3)));
    aux5=(0.+-1.j)+((2.*v13)+(((0.+4.j)*(v14**2))+(((0.+-2.j)*v22)+((4.*(v13*v22))+aux4))));
    aux6=(0.+-4.j)*(v12*(v23+(((0.+2.j)*(v14*v24))+((-2.*(v24*v34))+(2.*(v23*v44))))));
    aux7=(-2.*((v12**2)*(1.+(2.*v44))))+(aux6+(v11*(1.+((-4.*(v24**2))+((2.*v44)+(v22*(2.+(4.*v44))))))));
    aux8=((0.+8.j)*(v13*(v22*v44)))+((4.*((v23**2)*v44))+((-2.*(v33*v44))+((-4.*(v22*(v33*v44)))+aux7)));
    aux9=(-8.*(v23*(v24*v34)))+((2.*(v34**2))+((4.*(v22*(v34**2)))+(((0.+4.j)*(v13*v44))+aux8)));
    aux10=(4.*((v24**2)*v33))+(((0.+-4.j)*(v14*v34))+(((0.+-8.j)*(v14*(v22*v34)))+aux9));
    aux11=((0.+8.j)*(v14*(v23*v24)))+(((0.+-8.j)*(v13*(v24**2)))+((-2.*(v22*v33))+aux10));
    aux12=(-2.*(v14**2))+(((0.+4.j)*(v13*v22))+((-4.*((v14**2)*v22))+((2.*(v23**2))+aux11)));
    aux13=(8.*(r2*(v12*(v33*v44))))+((2.*(r3*aux5))+(2.*(r1*((((0.+2.j)*v13)+aux12)-v33))));
    aux14=((0.+16.j)*(r2*(v11*(v23*v44))))+((8.*(r4*(v11*(v23*v44))))+((-8.*(r2*(v13*(v23*v44))))+aux13));
    aux15=(-8.*(r4*(v12*(v13*v44))))+(((0.+8.j)*(r2*(v23*v44)))+((4.*(r4*(v23*v44)))+aux14));
    aux16=(-8.*(r2*(v12*(v34**2))))+((4.*(r2*(v12*v44)))+(((0.+-16.j)*(r2*(v12*(v13*v44))))+aux15));
    aux17=((0.+-16.j)*(r2*(v11*(v24*v34))))+((-8.*(r4*(v11*(v24*v34))))+((8.*(r2*(v13*(v24*v34))))+aux16));
    aux18=(8.*(r2*(v14*(v23*v34))))+(((0.+-8.j)*(r2*(v24*v34)))+((-4.*(r4*(v24*v34)))+aux17));
    aux19=((0.+16.j)*(r4*(v11*(v22*v34))))+((-8.*(r4*(v13*(v22*v34))))+((8.*(r4*(v12*(v23*v34))))+aux18));
    aux20=(-4.*(r2*(v22*v34)))+(((0.+8.j)*(r4*(v22*v34)))+((-8.*(r2*(v11*(v22*v34))))+aux19));
    aux21=(-4.*(r4*(v13*v34)))+(((0.+16.j)*(r2*(v12*(v14*v34))))+((8.*(r4*(v12*(v14*v34))))+aux20));
    aux22=((0.+8.j)*(r4*(v11*v34)))+((8.*(r2*((v12**2)*v34)))+(((0.+-16.j)*(r4*((v12**2)*v34)))+aux21));
    aux23=(-8.*(r2*(v14*(v24*v33))))+((-2.*(r2*v34))+(((0.+4.j)*(r4*v34))+((-4.*(r2*(v11*v34)))+aux22)));
    aux24=(4.*(r4*(v14*v33)))+((8.*(r4*(v14*(v22*v33))))+((-8.*(r4*(v12*(v24*v33))))+aux23));
    aux25=((0.+-16.j)*(r4*(v11*(v23*v24))))+((8.*(r4*(v13*(v23*v24))))+((4.*(r2*(v12*v33)))+aux24));
    aux26=(4.*(r2*(v23*v24)))+(((0.+-8.j)*(r4*(v23*v24)))+((8.*(r2*(v11*(v23*v24))))+aux25));
    aux27=(-4.*(r2*(v14*v24)))+(((0.+16.j)*(r2*(v13*(v14*v24))))+((8.*(r4*(v13*(v14*v24))))+aux26));
    aux28=(-4.*(r4*(v12*v24)))+((-8.*(r2*(v12*(v13*v24))))+(((0.+16.j)*(r4*(v12*(v13*v24))))+aux27));
    aux29=((0.+-16.j)*(r2*((v14**2)*v23)))+((-8.*(r4*((v14**2)*v23)))+((-8.*(r4*(v14*(v23**2))))+aux28));
    aux30=(-4.*(r2*(v13*v23)))+((-8.*(r2*(v12*(v14*v23))))+(((0.+16.j)*(r4*(v12*(v14*v23))))+aux29));
    aux31=((0.+4.j)*(r2*v23))+((2.*(r4*v23))+(((0.+8.j)*(r2*(v11*v23)))+((4.*(r4*(v11*v23)))+aux30)));
    aux32=(4.*(r4*(v14*v22)))+((8.*(r2*(v13*(v14*v22))))+(((0.+-16.j)*(r4*(v13*(v14*v22))))+aux31));
    aux33=(-4.*(r4*(v12*v13)))+((2.*(r4*v14))+((4.*(r2*(v13*v14)))+(((0.+-8.j)*(r4*(v13*v14)))+aux32)));
    aux34=(v14*(v24+((2.*(v24*v33))+(-2.*(v23*v34)))))+(v13*(v23+((-2.*(v24*v34))+(2.*(v23*v44)))));
    aux35=(-4.*((v23**2)*(1.+(2.*v44))))+(v22*(2.+((-8.*(v34**2))+((4.*v44)+(v33*(4.+(8.*v44)))))));
    aux36=(16.*(v23*(v24*v34)))+((-4.*(v34**2))+((2.*v44)+((4.*(v33*v44))+aux35)));
    aux37=-2.*(v11*(1.+((-4.*(v24**2))+((2.*v33)+((-8.*((v24**2)*v33))+aux36)))));
    aux38=(4.*((v12**2)*(1.+((-4.*(v34**2))+((2.*v44)+(v33*(2.+(4.*v44))))))))+((-16.*(v12*aux34))+aux37);
    aux39=(16.*((v13**2)*(v22*v44)))+((8.*((v23**2)*v44))+((-4.*(v33*v44))+((-8.*(v22*(v33*v44)))+aux38)));
    aux40=(8.*(v22*(v34**2)))+((-2.*v44)+((8.*((v13**2)*v44))+((-4.*(v22*v44))+aux39)));
    aux41=(-32.*(v13*(v14*(v22*v34))))+((-16.*(v23*(v24*v34)))+((4.*(v34**2))+aux40));
    aux42=(16.*((v14**2)*(v22*v33)))+((8.*((v24**2)*v33))+((-16.*(v13*(v14*v34)))+aux41));
    aux43=(-16.*((v13**2)*(v24**2)))+((-2.*v33)+((8.*((v14**2)*v33))+((-4.*(v22*v33))+aux42)));
    aux44=(-16.*((v14**2)*(v23**2)))+((32.*(v13*(v14*(v23*v24))))+((4.*(v24**2))+aux43));
    aux45=(-2.*v22)+((8.*((v13**2)*v22))+((8.*((v14**2)*v22))+((4.*(v23**2))+aux44)));
    aux46=((0.+1.j)*(r3*((2.*(r2*v12))+(((0.+-8.j)*(r2*(v12*v13)))+aux33))))/(-1.+((4.*(v13**2))+((4.*(v14**2))+aux45)));
    aux47=(0.+-4.j)*(v12*(v23+(((0.+2.j)*(v14*v24))+((-2.*(v24*v34))+(2.*(v23*v44))))));
    aux48=(-2.*((v12**2)*(1.+(2.*v44))))+(aux47+(v11*(1.+((-4.*(v24**2))+((2.*v44)+(v22*(2.+(4.*v44))))))));
    aux49=((0.+8.j)*(v13*(v22*v44)))+((4.*((v23**2)*v44))+((-2.*(v33*v44))+((-4.*(v22*(v33*v44)))+aux48)));
    aux50=(-8.*(v23*(v24*v34)))+((2.*(v34**2))+((4.*(v22*(v34**2)))+(((0.+4.j)*(v13*v44))+aux49)));
    aux51=(4.*((v24**2)*v33))+(((0.+-4.j)*(v14*v34))+(((0.+-8.j)*(v14*(v22*v34)))+aux50));
    aux52=((0.+8.j)*(v14*(v23*v24)))+(((0.+-8.j)*(v13*(v24**2)))+((-2.*(v22*v33))+aux51));
    aux53=(-2.*(v14**2))+(((0.+4.j)*(v13*v22))+((-4.*((v14**2)*v22))+((2.*(v23**2))+aux52)));
    aux54=(2.*v33)+(((0.+4.j)*(v14*v34))+((-4.*(v34**2))+((2.*v44)+(4.*(v33*v44)))));
    aux55=((0.+2.j)*(v22*(1.+aux54)))+(v13*(2.+((-8.*(v24**2))+((4.*v44)+(v22*(4.+(8.*v44)))))));
    aux56=(-8.*(v12*(v23*v44)))+(((0.+-8.j)*((v23**2)*v44))+(((0.+4.j)*(v33*v44))+aux55));
    aux57=((0.+16.j)*(v23*(v24*v34)))+(((0.+-4.j)*(v34**2))+(((0.+2.j)*v44)+aux56));
    aux58=((0.+-8.j)*((v24**2)*v33))+((-4.*(v14*v34))+((8.*(v12*(v24*v34)))+aux57));
    aux59=((0.+-4.j)*(v23**2))+((8.*(v14*(v23*v24)))+(((0.+-4.j)*(v24**2))+(((0.+2.j)*v33)+aux58)));
    aux60=(2.*(r3*((((0.+2.j)*v13)+aux53)-v33)))+(-2.*(r1*((0.+1.j)+((-4.*(v12*v23))+aux59))));
    aux61=(-8.*(r4*(v13*(v23*v44))))+(((0.+16.j)*(r2*(v12*(v33*v44))))+((8.*(r4*(v12*(v33*v44))))+aux60));
    aux62=(-4.*(r2*(v23*v44)))+((-8.*(r2*(v11*(v23*v44))))+(((0.+-16.j)*(r2*(v13*(v23*v44))))+aux61));
    aux63=((0.+8.j)*(r2*(v12*v44)))+((4.*(r4*(v12*v44)))+((8.*(r2*(v12*(v13*v44))))+aux62));
    aux64=(8.*(r4*(v13*(v24*v34))))+(((0.+-16.j)*(r2*(v12*(v34**2))))+((-8.*(r4*(v12*(v34**2))))+aux63));
    aux65=(4.*(r2*(v24*v34)))+((8.*(r2*(v11*(v24*v34))))+(((0.+16.j)*(r2*(v13*(v24*v34))))+aux64));
    aux66=((0.+16.j)*(r4*(v12*(v23*v34))))+(((0.+16.j)*(r2*(v14*(v23*v34))))+((8.*(r4*(v14*(v23*v34))))+aux65));
    aux67=(8.*(r2*(v13*(v22*v34))))+(((0.+-16.j)*(r4*(v13*(v22*v34))))+((-8.*(r2*(v12*(v23*v34))))+aux66));
    aux68=(-8.*(r2*(v12*(v14*v34))))+((-4.*(r4*(v22*v34)))+((-8.*(r4*(v11*(v22*v34))))+aux67));
    aux69=(8.*(r4*((v12**2)*v34)))+((4.*(r2*(v13*v34)))+(((0.+-8.j)*(r4*(v13*v34)))+aux68));
    aux70=(-8.*(r4*(v14*(v24*v33))))+((-2.*(r4*v34))+((-4.*(r4*(v11*v34)))+aux69));
    aux71=((0.+-16.j)*(r4*(v12*(v24*v33))))+(((0.+-16.j)*(r2*(v14*(v24*v33))))+aux70);
    aux72=(-8.*(r2*(v14*(v22*v33))))+(((0.+16.j)*(r4*(v14*(v22*v33))))+((8.*(r2*(v12*(v24*v33))))+aux71));
    aux73=(4.*(r4*(v12*v33)))+((-4.*(r2*(v14*v33)))+(((0.+8.j)*(r4*(v14*v33)))+aux72));
    aux74=(-8.*(r2*(v13*(v23*v24))))+(((0.+16.j)*(r4*(v13*(v23*v24))))+(((0.+8.j)*(r2*(v12*v33)))+aux73));
    aux75=(-8.*(r2*(v13*(v14*v24))))+((4.*(r4*(v23*v24)))+((8.*(r4*(v11*(v23*v24))))+aux74));
    aux76=(-8.*(r4*(v12*(v13*v24))))+(((0.+-8.j)*(r2*(v14*v24)))+((-4.*(r4*(v14*v24)))+aux75));
    aux77=((0.+-16.j)*(r4*(v14*(v23**2))))+((4.*(r2*(v12*v24)))+(((0.+-8.j)*(r4*(v12*v24)))+aux76));
    aux78=(-8.*(r4*(v12*(v14*v23))))+((8.*(r2*((v14**2)*v23)))+((8.*(r2*(v14*(v23**2))))+aux77));
    aux79=(-4.*(r2*(v11*v23)))+(((0.+-8.j)*(r2*(v13*v23)))+((-4.*(r4*(v13*v23)))+aux78));
    aux80=((0.+8.j)*(r4*(v14*v22)))+((8.*(r4*(v13*(v14*v22))))+((-2.*(r2*v23))+aux79));
    aux81=(-2.*(r2*v14))+(((0.+4.j)*(r4*v14))+((4.*(r4*(v13*v14)))+((-4.*(r2*(v14*v22)))+aux80)));
    aux82=(0.+1.j)*(r1*(((0.+4.j)*(r2*v12))+((2.*(r4*v12))+((4.*(r2*(v12*v13)))+aux81))));
    aux83=(v14*(v24+((2.*(v24*v33))+(-2.*(v23*v34)))))+(v13*(v23+((-2.*(v24*v34))+(2.*(v23*v44)))));
    aux84=(-4.*((v23**2)*(1.+(2.*v44))))+(v22*(2.+((-8.*(v34**2))+((4.*v44)+(v33*(4.+(8.*v44)))))));
    aux85=(16.*(v23*(v24*v34)))+((-4.*(v34**2))+((2.*v44)+((4.*(v33*v44))+aux84)));
    aux86=-2.*(v11*(1.+((-4.*(v24**2))+((2.*v33)+((-8.*((v24**2)*v33))+aux85)))));
    aux87=(4.*((v12**2)*(1.+((-4.*(v34**2))+((2.*v44)+(v33*(2.+(4.*v44))))))))+((-16.*(v12*aux83))+aux86);
    aux88=(16.*((v13**2)*(v22*v44)))+((8.*((v23**2)*v44))+((-4.*(v33*v44))+((-8.*(v22*(v33*v44)))+aux87)));
    aux89=(8.*(v22*(v34**2)))+((-2.*v44)+((8.*((v13**2)*v44))+((-4.*(v22*v44))+aux88)));
    aux90=(-32.*(v13*(v14*(v22*v34))))+((-16.*(v23*(v24*v34)))+((4.*(v34**2))+aux89));
    aux91=(16.*((v14**2)*(v22*v33)))+((8.*((v24**2)*v33))+((-16.*(v13*(v14*v34)))+aux90));
    aux92=(-16.*((v13**2)*(v24**2)))+((-2.*v33)+((8.*((v14**2)*v33))+((-4.*(v22*v33))+aux91)));
    aux93=(-16.*((v14**2)*(v23**2)))+((32.*(v13*(v14*(v23*v24))))+((4.*(v24**2))+aux92));
    aux94=(-2.*v22)+((8.*((v13**2)*v22))+((8.*((v14**2)*v22))+((4.*(v23**2))+aux93)));
    aux95=(0.+-4.j)*(v12*(v14+(((0.+4.j)*(v13*v23))+((2.*(v14*v33))+(-2.*(v13*v34))))));
    aux96=(2.*((1.+((0.+2.j)*v24))*(1.+(2.*v33))))+((v22*(4.+(8.*v33)))+((0.+-8.j)*(v23*v34)));
    aux97=(-4.*((v12**2)*(1.+(2.*v33))))+(((0.+-4.j)*(v23*v34))+(aux95+(v11*((-8.*(v23**2))+aux96))));
    aux98=((0.+-8.j)*((v13**2)*v24))+((2.*v33)+((4.*(v22*v33))+(((0.+4.j)*(v24*v33))+aux97)));
    aux99=(-8.*((v13**2)*v22))+(((0.+8.j)*(v13*(v14*v23)))+((-4.*(v23**2))+(((0.+2.j)*v24)+aux98)));
    aux100=((0.+2.j)*v33)+((-2.*(v24*v33))+(((0.+2.j)*(v22*(1.+(2.*v33))))+(2.*(v23*v34))));
    aux101=v14*(((0.+1.j)+(v13+((2.*(v13*v22))+(((0.+-4.j)*(v23**2))+aux100))))-v24);
    aux102=(2.*v33)+(((0.+8.j)*(v23*v34))+((-4.*(v34**2))+((2.*v44)+(4.*(v33*v44)))));
    aux103=1.+((-4.*(v14*v23))+((-4.*(v24*((0.+1.j)+(v13+((0.+2.j)*v33)))))+aux102));
    aux104=(4.*(v13*(v24*v34)))+((2.*aux101)+((-4.*(v13*(v23*v44)))+(v12*aux103)));
    aux105=(-2.*(v22*v34))+((-4.*(v11*(v22*v34)))+(((0.+-8.j)*(v13*(v22*v34)))+aux104));
    aux106=((0.+8.j)*(v13*(v23*v24)))+((-2.*(v11*v34))+((4.*((v12**2)*v34))+(((0.+-4.j)*(v13*v34))+aux105)));
    aux107=r1*(((-2.*(v13*v23))+((2.*(v23*v24))+((4.*(v11*(v23*v24)))+aux106)))-v34);
    aux108=(-8.*(r3*(v11*(v23*v44))))+((4.*(r2*(v33*v44)))+((8.*(r2*(v11*(v33*v44))))+(-2.*aux107)));
    aux109=(8.*(r3*(v12*(v13*v44))))+((-8.*(r2*((v13**2)*v44)))+((-4.*(r3*(v23*v44)))+aux108));
    aux110=((0.+2.j)*(r4*(1.+((-4.*(v13**2))+((2.*v22)+aux99)))))+((2.*(r2*v44))+((4.*(r2*(v11*v44)))+aux109));
    aux111=(8.*(r3*(v11*(v24*v34))))+((-4.*(r2*(v34**2)))+((-8.*(r2*(v11*(v34**2))))+aux110));
    aux112=((0.+16.j)*(r2*(v11*(v23*v34))))+((-8.*(r3*(v12*(v23*v34))))+((4.*(r3*(v24*v34)))+aux111));
    aux113=((0.+-16.j)*(r3*(v11*(v22*v34))))+((8.*(r3*(v13*(v22*v34))))+(((0.+8.j)*(r2*(v23*v34)))+aux112));
    aux114=(-8.*(r3*(v12*(v14*v34))))+((16.*(r2*(v13*(v14*v34))))+(((0.+-8.j)*(r3*(v22*v34)))+aux113));
    aux115=((0.+16.j)*(r3*((v12**2)*v34)))+((4.*(r3*(v13*v34)))+(((0.+-16.j)*(r2*(v12*(v13*v34))))+aux114));
    aux116=(8.*(r3*(v12*(v24*v33))))+(((0.+-4.j)*(r3*v34))+(((0.+-8.j)*(r3*(v11*v34)))+aux115));
    aux117=(-8.*(r3*(v14*(v22*v33))))+(((0.+-8.j)*(r2*(v24*v33)))+(((0.+-16.j)*(r2*(v11*(v24*v33))))+aux116));
    aux118=(-8.*(r2*((v14**2)*v33)))+((-4.*(r2*(v22*v33)))+((-8.*(r2*(v11*(v22*v33))))+aux117));
    aux119=(8.*(r2*((v12**2)*v33)))+((-4.*(r3*(v14*v33)))+(((0.+16.j)*(r2*(v12*(v14*v33))))+aux118));
    aux120=((0.+8.j)*(r3*(v23*v24)))+(((0.+16.j)*(r3*(v11*(v23*v24))))+((-8.*(r3*(v13*(v23*v24))))+aux119));
    aux121=((0.+-16.j)*(r3*(v12*(v13*v24))))+(((0.+16.j)*(r2*((v13**2)*v24)))+((-8.*(r3*(v13*(v14*v24))))+aux120));
    aux122=((0.+-4.j)*(r2*v24))+(((0.+-8.j)*(r2*(v11*v24)))+((4.*(r3*(v12*v24)))+aux121));
    aux123=(4.*(r2*(v23**2)))+((8.*(r2*(v11*(v23**2))))+((8.*(r3*(v14*(v23**2))))+aux122));
    aux124=((0.+-16.j)*(r3*(v12*(v14*v23))))+(((0.+-16.j)*(r2*(v13*(v14*v23))))+((8.*(r3*((v14**2)*v23)))+aux123));
    aux125=(-2.*(r3*v23))+((-4.*(r3*(v11*v23)))+((-16.*(r2*(v12*(v13*v23))))+aux124));
    aux126=(8.*(r2*((v13**2)*v22)))+((-4.*(r3*(v14*v22)))+(((0.+16.j)*(r3*(v13*(v14*v22))))+aux125));
    aux127=((0.+8.j)*(r3*(v13*v14)))+((-4.*(r2*(v14**2)))+((-2.*(r2*v22))+((-4.*(r2*(v11*v22)))+aux126)));
    aux128=(4.*(r3*(v12*v13)))+((-2.*(r3*v14))+(((0.+8.j)*(r2*(v12*v14)))+aux127));
    aux129=(v14*(v24+((2.*(v24*v33))+(-2.*(v23*v34)))))+(v13*(v23+((-2.*(v24*v34))+(2.*(v23*v44)))));
    aux130=(-4.*((v23**2)*(1.+(2.*v44))))+(v22*(2.+((-8.*(v34**2))+((4.*v44)+(v33*(4.+(8.*v44)))))));
    aux131=(16.*(v23*(v24*v34)))+((-4.*(v34**2))+((2.*v44)+((4.*(v33*v44))+aux130)));
    aux132=2.*(v11*(1.+((-4.*(v24**2))+((2.*v33)+((-8.*((v24**2)*v33))+aux131)))));
    aux133=(-4.*((v12**2)*(1.+((-4.*(v34**2))+((2.*v44)+(v33*(2.+(4.*v44))))))))+((16.*(v12*aux129))+aux132);
    aux134=(-16.*((v13**2)*(v22*v44)))+((-8.*((v23**2)*v44))+((4.*(v33*v44))+((8.*(v22*(v33*v44)))+aux133)));
    aux135=(-8.*(v22*(v34**2)))+((2.*v44)+((-8.*((v13**2)*v44))+((4.*(v22*v44))+aux134)));
    aux136=(32.*(v13*(v14*(v22*v34))))+((16.*(v23*(v24*v34)))+((-4.*(v34**2))+aux135));
    aux137=(-16.*((v14**2)*(v22*v33)))+((-8.*((v24**2)*v33))+((16.*(v13*(v14*v34)))+aux136));
    aux138=(16.*((v13**2)*(v24**2)))+((2.*v33)+((-8.*((v14**2)*v33))+((4.*(v22*v33))+aux137)));
    aux139=(16.*((v14**2)*(v23**2)))+((-32.*(v13*(v14*(v23*v24))))+((-4.*(v24**2))+aux138));
    aux140=(2.*v22)+((-8.*((v13**2)*v22))+((-8.*((v14**2)*v22))+((-4.*(v23**2))+aux139)));
    aux141=((0.+1.j)*(r4*((4.*(r2*(v12**2)))+aux128)))/(1.+((-4.*(v13**2))+((-4.*(v14**2))+aux140)));
    aux142=((0.+2.j)*(v14*v34))+(((0.+2.j)*(v23*v34))+((-4.*(v34**2))+((2.*v44)+(4.*(v33*v44)))));
    aux143=v24+((2.*(v24*v33))+((2.*(v13*v44))+((0.+1.j)*(1.+((2.*v33)+aux142)))));
    aux144=(-4.*(v11*(v23*v44)))+(((0.+-8.j)*(v13*(v23*v44)))+(2.*(v12*(v13+aux143))));
    aux145=(4.*(v11*(v24*v34)))+(((0.+8.j)*(v13*(v24*v34)))+((-2.*(v23*v44))+aux144));
    aux146=(-4.*(v13*(v23*v24)))+((2.*(v13*v34))+((4.*(v13*(v22*v34)))+((2.*(v24*v34))+aux145)));
    aux147=(2.*v33)+(((0.+8.j)*(v24*v33))+((v22*(2.+(4.*v33)))+((0.+-8.j)*(v23*v34))));
    aux148=((-2.*(v11*v23))+(((0.+-4.j)*(v13*v23))+((4.*((v14**2)*v23))+aux146)))-(v14*(1.+((-4.*(v23**2))+(((0.+4.j)*v24)+((4.*(v13*v24))+aux147)))));
    aux149=(2.*v33)+(((0.+4.j)*(v23*v34))+((-4.*(v34**2))+((2.*v44)+(4.*(v33*v44)))));
    aux150=((0.+-4.j)*(v33*v44))+(-2.*(v11*((v24*(2.+(4.*v33)))+((0.+1.j)*(1.+aux149)))));
    aux151=((v13**2)*((0.+4.j)+((8.*v24)+((0.+8.j)*v44))))+(((0.+-2.j)*v44)+aux150);
    aux152=((0.+4.j)*(v34**2))+((-8.*(v13*((v14*v23)+((v12*v34)+((0.+2.j)*(v14*v34))))))+aux151);
    aux153=(8.*(v12*(v14*v33)))+(((0.+8.j)*((v14**2)*v33))+((-4.*(v24*v33))+((4.*(v23*v34))+aux152)));
    aux154=(4.*(v12*v14))+(((0.+4.j)*(v14**2))+((-2.*v24)+(((0.+-2.j)*v33)+aux153)));
    aux155=(-8.*(r3*(v12*(v33*v44))))+((-2.*(r1*(aux148-v23)))+(-2.*(r2*((0.+-1.j)+aux154))));
    aux156=(8.*(r3*(v13*(v23*v44))))+((4.*(r4*(v33*v44)))+((8.*(r4*(v11*(v33*v44))))+aux155));
    aux157=(-8.*(r4*((v13**2)*v44)))+(((0.+-8.j)*(r3*(v23*v44)))+(((0.+-16.j)*(r3*(v11*(v23*v44))))+aux156));
    aux158=(4.*(r4*(v11*v44)))+((-4.*(r3*(v12*v44)))+(((0.+16.j)*(r3*(v12*(v13*v44))))+aux157));
    aux159=(-8.*(r4*(v11*(v34**2))))+((8.*(r3*(v12*(v34**2))))+((2.*(r4*v44))+aux158));
    aux160=((0.+16.j)*(r3*(v11*(v24*v34))))+((-8.*(r3*(v13*(v24*v34))))+((-4.*(r4*(v34**2)))+aux159));
    aux161=((0.+16.j)*(r4*(v11*(v23*v34))))+((-8.*(r3*(v14*(v23*v34))))+(((0.+8.j)*(r3*(v24*v34)))+aux160));
    aux162=(4.*(r3*(v22*v34)))+((8.*(r3*(v11*(v22*v34))))+(((0.+8.j)*(r4*(v23*v34)))+aux161));
    aux163=((0.+-16.j)*(r4*(v12*(v13*v34))))+(((0.+-16.j)*(r3*(v12*(v14*v34))))+((16.*(r4*(v13*(v14*v34))))+aux162));
    aux164=(8.*(r3*(v14*(v24*v33))))+((2.*(r3*v34))+((4.*(r3*(v11*v34)))+((-8.*(r3*((v12**2)*v34)))+aux163)));
    aux165=(-8.*(r4*(v11*(v22*v33))))+(((0.+-8.j)*(r4*(v24*v33)))+(((0.+-16.j)*(r4*(v11*(v24*v33))))+aux164));
    aux166=((0.+16.j)*(r4*(v12*(v14*v33))))+((-8.*(r4*((v14**2)*v33)))+((-4.*(r4*(v22*v33)))+aux165));
    aux167=(-8.*(r3*(v11*(v23*v24))))+((-4.*(r3*(v12*v33)))+((8.*(r4*((v12**2)*v33)))+aux166));
    aux168=(4.*(r3*(v14*v24)))+(((0.+-16.j)*(r3*(v13*(v14*v24))))+((-4.*(r3*(v23*v24)))+aux167));
    aux169=((0.+-8.j)*(r4*(v11*v24)))+((8.*(r3*(v12*(v13*v24))))+(((0.+16.j)*(r4*((v13**2)*v24)))+aux168));
    aux170=(4.*(r4*(v23**2)))+((8.*(r4*(v11*(v23**2))))+(((0.+-4.j)*(r4*v24))+aux169));
    aux171=((0.+-16.j)*(r4*(v13*(v14*v23))))+(((0.+16.j)*(r3*((v14**2)*v23)))+aux170);
    aux172=(4.*(r3*(v13*v23)))+((-16.*(r4*(v12*(v13*v23))))+((8.*(r3*(v12*(v14*v23))))+aux171));
    aux173=(-8.*(r3*(v13*(v14*v22))))+(((0.+-4.j)*(r3*v23))+(((0.+-8.j)*(r3*(v11*v23)))+aux172));
    aux174=(-2.*(r4*v22))+((-4.*(r4*(v11*v22)))+((8.*(r4*((v13**2)*v22)))+aux173));
    aux175=((0.+8.j)*(r4*(v12*v14)))+((-4.*(r3*(v13*v14)))+((-4.*(r4*(v14**2)))+aux174));
    aux176=r2*((-2.*(r3*v12))+((4.*(r4*(v12**2)))+(((0.+8.j)*(r3*(v12*v13)))+aux175)));
    aux177=(v14*(v24+((2.*(v24*v33))+(-2.*(v23*v34)))))+(v13*(v23+((-2.*(v24*v34))+(2.*(v23*v44)))));
    aux178=(-4.*((v23**2)*(1.+(2.*v44))))+(v22*(2.+((-8.*(v34**2))+((4.*v44)+(v33*(4.+(8.*v44)))))));
    aux179=(16.*(v23*(v24*v34)))+((-4.*(v34**2))+((2.*v44)+((4.*(v33*v44))+aux178)));
    aux180=2.*(v11*(1.+((-4.*(v24**2))+((2.*v33)+((-8.*((v24**2)*v33))+aux179)))));
    aux181=(-4.*((v12**2)*(1.+((-4.*(v34**2))+((2.*v44)+(v33*(2.+(4.*v44))))))))+((16.*(v12*aux177))+aux180);
    aux182=(-16.*((v13**2)*(v22*v44)))+((-8.*((v23**2)*v44))+((4.*(v33*v44))+((8.*(v22*(v33*v44)))+aux181)));
    aux183=(-8.*(v22*(v34**2)))+((2.*v44)+((-8.*((v13**2)*v44))+((4.*(v22*v44))+aux182)));
    aux184=(32.*(v13*(v14*(v22*v34))))+((16.*(v23*(v24*v34)))+((-4.*(v34**2))+aux183));
    aux185=(-16.*((v14**2)*(v22*v33)))+((-8.*((v24**2)*v33))+((16.*(v13*(v14*v34)))+aux184));
    aux186=(16.*((v13**2)*(v24**2)))+((2.*v33)+((-8.*((v14**2)*v33))+((4.*(v22*v33))+aux185)));
    aux187=(16.*((v14**2)*(v23**2)))+((-32.*(v13*(v14*(v23*v24))))+((-4.*(v24**2))+aux186));
    aux188=(2.*v22)+((-8.*((v13**2)*v22))+((-8.*((v14**2)*v22))+((-4.*(v23**2))+aux187)));
    aux189=(b13*((-2.*(b23*b24))+(b34+(2.*(b22*b34)))))+(b12*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))));
    aux190=(b14*(1.+((-4.*(b23**2))+((2.*b33)+(b22*(2.+(4.*b33)))))))+(-2.*aux189);
    aux191=(-4.*(b14*b23))+((-4.*(b13*b24))+((2.*b33)+((-4.*(b34**2))+((2.*b44)+(4.*(b33*b44))))));
    aux192=(2.*(b13*((b14+((2.*(b14*b22))+((2.*(b24*b34))+(-2.*(b23*b44)))))-b23)))+(b12*(1.+aux191));
    aux193=(4.*((b12**2)*b34))+((-2.*(b22*b34))+((-4.*(b11*(b22*b34)))+((4.*(b14*(b23*b34)))+aux192)));
    aux194=(2.*(b23*b24))+((4.*(b11*(b23*b24)))+((-4.*(b14*(b24*b33)))+((-2.*(b11*b34))+aux193)));
    aux195=(-2.*(b12*(b14+((2.*(b14*b33))+(-2.*(b13*b34))))))+((1.+(2.*b11))*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))));
    aux196=(-2.*(b11*b44))+((4.*((b13**2)*b44))+((-2.*(b33*b44))+(-4.*(b11*(b33*b44)))));
    aux197=((b14**2)*(2.+(4.*b33)))+((-8.*(b13*(b14*b34)))+((2.*(b34**2))+((4.*(b11*(b34**2)))+aux196)));
    aux198=(2.*(b22*b33))+((4.*(b11*(b22*b33)))+((-2.*((b12**2)*(1.+(2.*b33))))+aux197));
    aux199=(-4.*((b13**2)*b22))+((8.*(b12*(b13*b23)))+((-2.*(b23**2))+((-4.*(b11*(b23**2)))+aux198)));
    aux200=(4.*((b12**2)*b34))+((1.+(2.*b11))*(((2.*(b23*b24))+(-2.*(b22*b34)))-b34));
    aux201=(-4.*(b12*(b14*b23)))+((2.*(b13*(b14+((2.*(b14*b22))+(-2.*(b12*b24))))))+aux200);
    aux202=b12*(b13+(b24+((2.*(b24*b33))+((-2.*((b14+b23)*b34))+(2.*(b13*b44))))));
    aux203=(4.*(b11*(b24*b34)))+((-2.*(b23*b44))+((-4.*(b11*(b23*b44)))+(2.*aux202)));
    aux204=(-4.*(b13*(b23*b24)))+((2.*(b13*b34))+((4.*(b13*(b22*b34)))+((2.*(b24*b34))+aux203)));
    aux205=b14*(1.+((-4.*(b23**2))+((4.*(b13*b24))+((2.*b33)+(b22*(2.+(4.*b33)))))));
    aux206=(0.+-2.j)*(((((-2.*(b11*b23))+((4.*((b14**2)*b23))+aux204))-aux205)-b23)*s3);
    aux207=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux208=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux209=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux208)));
    aux210=2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux209)))));
    aux211=(-4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+((16.*(b12*aux207))+aux210);
    aux212=(-16.*((b13**2)*(b22*b44)))+((-8.*((b23**2)*b44))+((4.*(b33*b44))+((8.*(b22*(b33*b44)))+aux211)));
    aux213=(-8.*(b22*(b34**2)))+((2.*b44)+((-8.*((b13**2)*b44))+((4.*(b22*b44))+aux212)));
    aux214=(32.*(b13*(b14*(b22*b34))))+((16.*(b23*(b24*b34)))+((-4.*(b34**2))+aux213));
    aux215=(-16.*((b14**2)*(b22*b33)))+((-8.*((b24**2)*b33))+((16.*(b13*(b14*b34)))+aux214));
    aux216=(16.*((b13**2)*(b24**2)))+((2.*b33)+((-8.*((b14**2)*b33))+((4.*(b22*b33))+aux215)));
    aux217=(16.*((b14**2)*(b23**2)))+((-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+aux216));
    aux218=(2.*b22)+((-8.*((b13**2)*b22))+((-8.*((b14**2)*b22))+((-4.*(b23**2))+aux217)));
    aux219=(0.+-4.j)*(b12*(b14+(((0.+4.j)*(b13*b23))+((2.*(b14*b33))+(-2.*(b13*b34))))));
    aux220=(2.*((1.+((0.+2.j)*b24))*(1.+(2.*b33))))+((b22*(4.+(8.*b33)))+((0.+-8.j)*(b23*b34)));
    aux221=((0.+4.j)*(b24*b33))+(((0.+-4.j)*(b23*b34))+(aux219+(b11*((-8.*(b23**2))+aux220))));
    aux222=np.conjugate((((0.+8.j)*(b13*(b14*b23)))+(((0.+-8.j)*((b13**2)*b24))+aux221)));
    aux223=(-8.*((b13**2)*b22))+((4.*(b22*b33))+((-4.*((b12**2)*(1.+(2.*b33))))+aux222));
    aux224=(-8.*(b13**2))+((4.*b22)+((-8.*(b23**2))+(((0.+-4.j)*b24)+((4.*b33)+(2.*aux223)))));
    aux225=2.*((b12**2)*(1.+((2.*b33)+((-4.*(b34**2))+((2.*b44)+(4.*(b33*b44)))))));
    aux226=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux227=(4.*((b23**2)*b44))+((-2.*(b33*b44))+((-4.*(b22*(b33*b44)))+(aux225+(-8.*(b12*aux226)))));
    aux228=(4.*((b13**2)*b44))+((-2.*(b22*b44))+((8.*((b13**2)*(b22*b44)))+aux227));
    aux229=(-16.*(b13*(b14*(b22*b34))))+((-8.*(b23*(b24*b34)))+((4.*(b22*(b34**2)))+aux228));
    aux230=(8.*((b14**2)*(b22*b33)))+((4.*((b24**2)*b33))+((-8.*(b13*(b14*b34)))+aux229));
    aux231=(-8.*((b13**2)*(b24**2)))+((4.*((b14**2)*b33))+((-2.*(b22*b33))+aux230));
    aux232=(4.*((b14**2)*b22))+((-8.*((b14**2)*(b23**2)))+((16.*(b13*(b14*(b23*b24))))+aux231));
    aux233=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux234=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux233)));
    aux235=((4.*((b13**2)*b22))+aux232)-(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux234)))));
    aux236=(4.*(b23**2))+((4.*(b24**2))+((-2.*b33)+((4.*(b34**2))+((-2.*b44)+(2.*aux235)))));
    aux237=((1.+((-4.*(b13**2))+((-4.*(b14**2))+aux218)))*(s4*(2.+aux224)))/(-1.+((4.*(b13**2))+((4.*(b14**2))+((-2.*b22)+aux236))));
    aux238=((0.+2.j)*(((b22+((2.*(b11*b22))+aux199))-b44)*s2))+((-4.*(aux201*s3))+(aux206+aux237));
    aux239=((0.+2.j)*((((-2.*(b14*b24))+aux194)-b34)*s1))+((4.*(((4.*(b13*(b14*b23)))+((-4.*((b13**2)*b24))+aux195))*s2))+aux238);
    aux240=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux241=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux242=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux241)));
    aux243=2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux242)))));
    aux244=(-4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+((16.*(b12*aux240))+aux243);
    aux245=(-16.*((b13**2)*(b22*b44)))+((-8.*((b23**2)*b44))+((4.*(b33*b44))+((8.*(b22*(b33*b44)))+aux244)));
    aux246=(-8.*(b22*(b34**2)))+((2.*b44)+((-8.*((b13**2)*b44))+((4.*(b22*b44))+aux245)));
    aux247=(32.*(b13*(b14*(b22*b34))))+((16.*(b23*(b24*b34)))+((-4.*(b34**2))+aux246));
    aux248=(-16.*((b14**2)*(b22*b33)))+((-8.*((b24**2)*b33))+((16.*(b13*(b14*b34)))+aux247));
    aux249=(16.*((b13**2)*(b24**2)))+((2.*b33)+((-8.*((b14**2)*b33))+((4.*(b22*b33))+aux248)));
    aux250=(16.*((b14**2)*(b23**2)))+((-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+aux249));
    aux251=(2.*b22)+((-8.*((b13**2)*b22))+((-8.*((b14**2)*b22))+((-4.*(b23**2))+aux250)));
    aux252=(s4*((4.*(aux190*s1))+aux239))/(1.+((-4.*(b13**2))+((-4.*(b14**2))+aux251)));
    aux253=(-2.*((b12**2)*(1.+(2.*b44))))+(b11*(1.+((-4.*(b24**2))+((2.*b44)+(b22*(2.+(4.*b44)))))));
    aux254=(4.*(b22*(b34**2)))+((4.*((b23**2)*b44))+((-2.*(b33*b44))+((-4.*(b22*(b33*b44)))+aux253)));
    aux255=(-2.*(b22*b33))+((4.*((b24**2)*b33))+((-8.*(b23*(b24*b34)))+((2.*(b34**2))+aux254)));
    aux256=(-2.*(b14**2))+((-4.*((b14**2)*b22))+((2.*(b23**2))+((8.*(b12*(b14*b24)))+aux255)));
    aux257=(b14*((-2.*(b23*b24))+(b34+(2.*(b22*b34)))))+(b12*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux258=(b13*(1.+((-4.*(b24**2))+((2.*b44)+(b22*(2.+(4.*b44)))))))+(-2.*aux257);
    aux259=(-4.*(b14*b23))+((-4.*(b13*b24))+((2.*b33)+((-4.*(b34**2))+((2.*b44)+(4.*(b33*b44))))));
    aux260=(2.*(b13*((b14+((2.*(b14*b22))+((2.*(b24*b34))+(-2.*(b23*b44)))))-b23)))+(b12*(1.+aux259));
    aux261=(4.*((b12**2)*b34))+((-2.*(b22*b34))+((-4.*(b11*(b22*b34)))+((4.*(b14*(b23*b34)))+aux260)));
    aux262=(2.*(b23*b24))+((4.*(b11*(b23*b24)))+((-4.*(b14*(b24*b33)))+((-2.*(b11*b34))+aux261)));
    aux263=(-2.*(b12*(b13+((-2.*(b14*b34))+(2.*(b13*b44))))))+(b23*(1.+((-4.*(b14**2))+((2.*b44)+(b11*(2.+(4.*b44)))))));
    aux264=4.*(((4.*(b13*(b14*b24)))+((-2.*((1.+(2.*b11))*(b24*b34)))+aux263))*s2);
    aux265=(4.*((b12**2)*b34))+((1.+(2.*b11))*(((2.*(b23*b24))+(-2.*(b22*b34)))-b34));
    aux266=(-4.*(b12*(b14*b23)))+((2.*(b13*(b14+((2.*(b14*b22))+(-2.*(b12*b24))))))+aux265);
    aux267=b12*(b13+(b24+((2.*(b24*b33))+((-2.*((b14+b23)*b34))+(2.*(b13*b44))))));
    aux268=(4.*(b11*(b24*b34)))+((-2.*(b23*b44))+((-4.*(b11*(b23*b44)))+(2.*aux267)));
    aux269=(-4.*(b13*(b23*b24)))+((2.*(b13*b34))+((4.*(b13*(b22*b34)))+((2.*(b24*b34))+aux268)));
    aux270=b14*(1.+((-4.*(b23**2))+((4.*(b13*b24))+((2.*b33)+(b22*(2.+(4.*b33)))))));
    aux271=(0.+-2.j)*(((((-2.*(b11*b23))+((4.*((b14**2)*b23))+aux269))-aux270)-b23)*s4);
    aux272=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux273=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux274=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux273)));
    aux275=2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux274)))));
    aux276=(-4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+((16.*(b12*aux272))+aux275);
    aux277=(-16.*((b13**2)*(b22*b44)))+((-8.*((b23**2)*b44))+((4.*(b33*b44))+((8.*(b22*(b33*b44)))+aux276)));
    aux278=(-8.*(b22*(b34**2)))+((2.*b44)+((-8.*((b13**2)*b44))+((4.*(b22*b44))+aux277)));
    aux279=(32.*(b13*(b14*(b22*b34))))+((16.*(b23*(b24*b34)))+((-4.*(b34**2))+aux278));
    aux280=(-16.*((b14**2)*(b22*b33)))+((-8.*((b24**2)*b33))+((16.*(b13*(b14*b34)))+aux279));
    aux281=(16.*((b13**2)*(b24**2)))+((2.*b33)+((-8.*((b14**2)*b33))+((4.*(b22*b33))+aux280)));
    aux282=(16.*((b14**2)*(b23**2)))+((-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+aux281));
    aux283=(2.*b22)+((-8.*((b13**2)*b22))+((-8.*((b14**2)*b22))+((-4.*(b23**2))+aux282)));
    aux284=(0.+1.j)*(b12*(b23+(((0.+4.j)*(b14*b24))+((-2.*(b24*b34))+(2.*(b23*b44))))));
    aux285=((0.+2.j)*(b14*(b22*b34)))+(((0.+-1.j)*(b13*(b22+((-2.*(b24**2))+(b44+(2.*(b22*b44)))))))+aux284);
    aux286=np.conjugate((((0.+-2.j)*(b14*(b23*b24)))+(((0.+1.j)*(b14*b34))+aux285)));
    aux287=-4.*(((2.*((b14**2)*b22))+(((b12**2)*(1.+(2.*b44)))+aux286))-(b22*b44));
    aux288=(2.*b44)+((b11*(2.+((-8.*(b24**2))+((4.*b44)+(b22*(4.+(8.*b44)))))))+aux287);
    aux289=1.+(((0.+-2.j)*b13)+((-4.*(b14**2))+((2.*b22)+((-4.*(b24**2))+aux288))));
    aux290=2.*((b12**2)*(1.+((2.*b33)+((-4.*(b34**2))+((2.*b44)+(4.*(b33*b44)))))));
    aux291=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux292=(4.*((b23**2)*b44))+((-2.*(b33*b44))+((-4.*(b22*(b33*b44)))+(aux290+(-8.*(b12*aux291)))));
    aux293=(4.*((b13**2)*b44))+((-2.*(b22*b44))+((8.*((b13**2)*(b22*b44)))+aux292));
    aux294=(-16.*(b13*(b14*(b22*b34))))+((-8.*(b23*(b24*b34)))+((4.*(b22*(b34**2)))+aux293));
    aux295=(8.*((b14**2)*(b22*b33)))+((4.*((b24**2)*b33))+((-8.*(b13*(b14*b34)))+aux294));
    aux296=(-8.*((b13**2)*(b24**2)))+((4.*((b14**2)*b33))+((-2.*(b22*b33))+aux295));
    aux297=(4.*((b14**2)*b22))+((-8.*((b14**2)*(b23**2)))+((16.*(b13*(b14*(b23*b24))))+aux296));
    aux298=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux299=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux298)));
    aux300=((4.*((b13**2)*b22))+aux297)-(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux299)))));
    aux301=(4.*(b23**2))+((4.*(b24**2))+((-2.*b33)+((4.*(b34**2))+((-2.*b44)+(2.*aux300)))));
    aux302=(2.*((1.+((-4.*(b13**2))+((-4.*(b14**2))+aux283)))*(s3*aux289)))/(-1.+((4.*(b13**2))+((4.*(b14**2))+((-2.*b22)+aux301))));
    aux303=((0.+2.j)*((((-2.*(b14*b24))+aux262)-b34)*s2))+(aux264+((-4.*(aux266*s4))+(aux271+aux302)));
    aux304=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux305=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux306=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux305)));
    aux307=2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux306)))));
    aux308=(-4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+((16.*(b12*aux304))+aux307);
    aux309=(-16.*((b13**2)*(b22*b44)))+((-8.*((b23**2)*b44))+((4.*(b33*b44))+((8.*(b22*(b33*b44)))+aux308)));
    aux310=(-8.*(b22*(b34**2)))+((2.*b44)+((-8.*((b13**2)*b44))+((4.*(b22*b44))+aux309)));
    aux311=(32.*(b13*(b14*(b22*b34))))+((16.*(b23*(b24*b34)))+((-4.*(b34**2))+aux310));
    aux312=(-16.*((b14**2)*(b22*b33)))+((-8.*((b24**2)*b33))+((16.*(b13*(b14*b34)))+aux311));
    aux313=(16.*((b13**2)*(b24**2)))+((2.*b33)+((-8.*((b14**2)*b33))+((4.*(b22*b33))+aux312)));
    aux314=(16.*((b14**2)*(b23**2)))+((-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+aux313));
    aux315=(2.*b22)+((-8.*((b13**2)*b22))+((-8.*((b14**2)*b22))+((-4.*(b23**2))+aux314)));
    aux316=(s3*(((0.+2.j)*((aux256-b33)*s1))+((4.*(aux258*s1))+aux303)))/(1.+((-4.*(b13**2))+((-4.*(b14**2))+aux315)));
    aux317=(2.*b33)+(((0.+-8.j)*(b24*b33))+((b22*(2.+(4.*b33)))+((0.+8.j)*(b23*b34))));
    aux318=((0.+-2.j)*(b14*b34))+(((0.+-2.j)*(b23*b34))+((-4.*(b34**2))+((2.*b44)+(4.*(b33*b44)))));
    aux319=b24+((2.*(b24*b33))+((2.*(b13*b44))+((0.+-1.j)*(1.+((2.*b33)+aux318)))));
    aux320=(4.*(b11*(b23*b44)))+(((0.+-8.j)*(b13*(b23*b44)))+(-2.*(b12*(b13+aux319))));
    aux321=(b14*(1.+((-4.*(b23**2))+(((0.+-4.j)*b24)+((4.*(b13*b24))+aux317)))))+((2.*(b23*b44))+aux320);
    aux322=(-2.*(b24*b34))+((-4.*(b11*(b24*b34)))+(((0.+8.j)*(b13*(b24*b34)))+aux321));
    aux323=(-4.*((b14**2)*b23))+((4.*(b13*(b23*b24)))+((-2.*(b13*b34))+((-4.*(b13*(b22*b34)))+aux322)));
    aux324=(0.+4.j)*(b12*(b23+(((0.+-2.j)*(b14*b24))+((-2.*(b24*b34))+(2.*(b23*b44))))));
    aux325=(-2.*((b12**2)*(1.+(2.*b44))))+(aux324+(b11*(1.+((-4.*(b24**2))+((2.*b44)+(b22*(2.+(4.*b44))))))));
    aux326=((0.+-8.j)*(b13*(b22*b44)))+((4.*((b23**2)*b44))+((-2.*(b33*b44))+((-4.*(b22*(b33*b44)))+aux325)));
    aux327=(-8.*(b23*(b24*b34)))+((2.*(b34**2))+((4.*(b22*(b34**2)))+(((0.+-4.j)*(b13*b44))+aux326)));
    aux328=(4.*((b24**2)*b33))+(((0.+4.j)*(b14*b34))+(((0.+8.j)*(b14*(b22*b34)))+aux327));
    aux329=((0.+-8.j)*(b14*(b23*b24)))+(((0.+8.j)*(b13*(b24**2)))+((-2.*(b22*b33))+aux328));
    aux330=(-2.*(b14**2))+(((0.+-4.j)*(b13*b22))+((-4.*((b14**2)*b22))+((2.*(b23**2))+aux329)));
    aux331=((0.+2.j)*b33)+((2.*(b24*b33))+(((0.+2.j)*(b22*(1.+(2.*b33))))+(-2.*(b23*b34))));
    aux332=b14*(((0.+1.j)+(((0.+-4.j)*(b23**2))+(b24+aux331)))-(b13*(1.+(2.*b22))));
    aux333=(-2.*b33)+(((0.+8.j)*(b23*b34))+((4.*(b34**2))+((-2.*b44)+(-4.*(b33*b44)))));
    aux334=-1.+((4.*(b14*b23))+((4.*(b24*((0.+-1.j)+(b13+((0.+-2.j)*b33)))))+aux333));
    aux335=(-4.*(b13*(b24*b34)))+((2.*aux332)+((4.*(b13*(b23*b44)))+(b12*aux334)));
    aux336=(2.*(b22*b34))+((4.*(b11*(b22*b34)))+(((0.+-8.j)*(b13*(b22*b34)))+aux335));
    aux337=b34+((2.*(b11*b34))+((-4.*((b12**2)*b34))+(((0.+-4.j)*(b13*b34))+aux336)));
    aux338=(-2.*(b23*b24))+((-4.*(b11*(b23*b24)))+(((0.+8.j)*(b13*(b23*b24)))+aux337));
    aux339=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux340=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux341=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux340)));
    aux342=2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux341)))));
    aux343=(-4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+((16.*(b12*aux339))+aux342);
    aux344=(-16.*((b13**2)*(b22*b44)))+((-8.*((b23**2)*b44))+((4.*(b33*b44))+((8.*(b22*(b33*b44)))+aux343)));
    aux345=(-8.*(b22*(b34**2)))+((2.*b44)+((-8.*((b13**2)*b44))+((4.*(b22*b44))+aux344)));
    aux346=(32.*(b13*(b14*(b22*b34))))+((16.*(b23*(b24*b34)))+((-4.*(b34**2))+aux345));
    aux347=(-16.*((b14**2)*(b22*b33)))+((-8.*((b24**2)*b33))+((16.*(b13*(b14*b34)))+aux346));
    aux348=(16.*((b13**2)*(b24**2)))+((2.*b33)+((-8.*((b14**2)*b33))+((4.*(b22*b33))+aux347)));
    aux349=(16.*((b14**2)*(b23**2)))+((-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+aux348));
    aux350=(2.*b22)+((-8.*((b13**2)*b22))+((-8.*((b14**2)*b22))+((-4.*(b23**2))+aux349)));
    aux351=(0.+-1.j)*(b13*(1.+((2.*b22)+((-4.*(b24**2))+((2.*b44)+(4.*(b22*b44)))))));
    aux352=(2.*b33)+(((0.+4.j)*(b14*b34))+((-4.*(b34**2))+((2.*b44)+(4.*(b33*b44)))));
    aux353=((0.+2.j)*(b12*(b23+((-2.*(b24*b34))+(2.*(b23*b44))))))+(b22*(1.+aux352));
    aux354=np.conjugate((((0.+-4.j)*(b14*(b23*b24)))+(((0.+2.j)*(b14*b34))+(aux351+aux353))));
    aux355=(-4.*((b24**2)*b33))+((8.*(b23*(b24*b34)))+((-4.*((b23**2)*b44))+((2.*(b33*b44))+aux354)));
    aux356=(-8.*(b23**2))+((-8.*(b24**2))+((4.*b33)+((-8.*(b34**2))+((4.*b44)+(4.*aux355)))));
    aux357=2.*((b12**2)*(1.+((2.*b33)+((-4.*(b34**2))+((2.*b44)+(4.*(b33*b44)))))));
    aux358=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux359=(4.*((b23**2)*b44))+((-2.*(b33*b44))+((-4.*(b22*(b33*b44)))+(aux357+(-8.*(b12*aux358)))));
    aux360=(4.*((b13**2)*b44))+((-2.*(b22*b44))+((8.*((b13**2)*(b22*b44)))+aux359));
    aux361=(-16.*(b13*(b14*(b22*b34))))+((-8.*(b23*(b24*b34)))+((4.*(b22*(b34**2)))+aux360));
    aux362=(8.*((b14**2)*(b22*b33)))+((4.*((b24**2)*b33))+((-8.*(b13*(b14*b34)))+aux361));
    aux363=(-8.*((b13**2)*(b24**2)))+((4.*((b14**2)*b33))+((-2.*(b22*b33))+aux362));
    aux364=(4.*((b14**2)*b22))+((-8.*((b14**2)*(b23**2)))+((16.*(b13*(b14*(b23*b24))))+aux363));
    aux365=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux366=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux365)));
    aux367=((4.*((b13**2)*b22))+aux364)-(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux366)))));
    aux368=(4.*(b23**2))+((4.*(b24**2))+((-2.*b33)+((4.*(b34**2))+((-2.*b44)+(2.*aux367)))));
    aux369=((1.+((-4.*(b13**2))+((-4.*(b14**2))+aux350)))*(s1*(2.+aux356)))/(-1.+((4.*(b13**2))+((4.*(b14**2))+((-2.*b22)+aux368))));
    aux370=((0.+2.j)*(((((0.+-2.j)*b13)+aux330)-b33)*s3))+(((0.+-2.j)*(((2.*(b13*b23))+aux338)*s4))+aux369);
    aux371=((0.+-2.j)*((b23+((2.*(b11*b23))+(((0.+-4.j)*(b13*b23))+aux323)))*s2))+aux370;
    aux372=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux373=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux374=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux373)));
    aux375=2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux374)))));
    aux376=(-4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+((16.*(b12*aux372))+aux375);
    aux377=(-16.*((b13**2)*(b22*b44)))+((-8.*((b23**2)*b44))+((4.*(b33*b44))+((8.*(b22*(b33*b44)))+aux376)));
    aux378=(-8.*(b22*(b34**2)))+((2.*b44)+((-8.*((b13**2)*b44))+((4.*(b22*b44))+aux377)));
    aux379=(32.*(b13*(b14*(b22*b34))))+((16.*(b23*(b24*b34)))+((-4.*(b34**2))+aux378));
    aux380=(-16.*((b14**2)*(b22*b33)))+((-8.*((b24**2)*b33))+((16.*(b13*(b14*b34)))+aux379));
    aux381=(16.*((b13**2)*(b24**2)))+((2.*b33)+((-8.*((b14**2)*b33))+((4.*(b22*b33))+aux380)));
    aux382=(16.*((b14**2)*(b23**2)))+((-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+aux381));
    aux383=(2.*b22)+((-8.*((b13**2)*b22))+((-8.*((b14**2)*b22))+((-4.*(b23**2))+aux382)));
    aux384=(2.*b33)+(((0.+-8.j)*(b24*b33))+((b22*(2.+(4.*b33)))+((0.+8.j)*(b23*b34))));
    aux385=((0.+-2.j)*(b14*b34))+(((0.+-2.j)*(b23*b34))+((-4.*(b34**2))+((2.*b44)+(4.*(b33*b44)))));
    aux386=b24+((2.*(b24*b33))+((2.*(b13*b44))+((0.+-1.j)*(1.+((2.*b33)+aux385)))));
    aux387=(4.*(b11*(b23*b44)))+(((0.+-8.j)*(b13*(b23*b44)))+(-2.*(b12*(b13+aux386))));
    aux388=(b14*(1.+((-4.*(b23**2))+(((0.+-4.j)*b24)+((4.*(b13*b24))+aux384)))))+((2.*(b23*b44))+aux387);
    aux389=(-2.*(b24*b34))+((-4.*(b11*(b24*b34)))+(((0.+8.j)*(b13*(b24*b34)))+aux388));
    aux390=(-4.*((b14**2)*b23))+((4.*(b13*(b23*b24)))+((-2.*(b13*b34))+((-4.*(b13*(b22*b34)))+aux389)));
    aux391=(2.*(b14*b22))+(((0.+-4.j)*(b14*b24))+((2.*(b24*b34))+(-2.*(b23*b44))));
    aux392=(4.*(b13*((0.+-1.j)+(b24+((0.+-2.j)*b44)))))+((-2.*b44)+(-4.*(b33*b44)));
    aux393=(4.*(b14*b23))+((-2.*b33)+(((0.+8.j)*(b14*b34))+((4.*(b34**2))+aux392)));
    aux394=((0.+8.j)*(b11*(b23*b44)))+((-2.*(b13*((b14+aux391)-b23)))+(b12*(-1.+aux393)));
    aux395=((0.+-4.j)*(b24*b34))+(((0.+-8.j)*(b11*(b24*b34)))+(((0.+4.j)*(b23*b44))+aux394));
    aux396=(-4.*((b12**2)*b34))+((2.*(b22*b34))+((4.*(b11*(b22*b34)))+((-4.*(b14*(b23*b34)))+aux395)));
    aux397=(-4.*(b11*(b23*b24)))+((4.*(b14*(b24*b33)))+(b34+((2.*(b11*b34))+aux396)));
    aux398=((0.+4.j)*(b11*b23))+(((0.+-8.j)*((b14**2)*b23))+((2.*(b14*b24))+((-2.*(b23*b24))+aux397)));
    aux399=(0.+4.j)*(b12*(b14+(((0.+-2.j)*(b13*b23))+((2.*(b14*b33))+(-2.*(b13*b34))))));
    aux400=(-2.*(b11*b44))+((4.*((b13**2)*b44))+((-2.*(b33*b44))+(-4.*(b11*(b33*b44)))));
    aux401=((0.+8.j)*(b11*(b23*b34)))+((2.*(b34**2))+((4.*(b11*(b34**2)))+(aux399+aux400)));
    aux402=((b14**2)*(2.+(4.*b33)))+((b13*(b14*(((0.+-8.j)*b23)+(-8.*b34))))+(((0.+4.j)*(b23*b34))+aux401));
    aux403=((0.+-4.j)*(b24*b33))+(((0.+-8.j)*(b11*(b24*b33)))+((-2.*((b12**2)*(1.+(2.*b33))))+aux402));
    aux404=((0.+8.j)*((b13**2)*b24))+((2.*(b22*b33))+((4.*(b11*(b22*b33)))+aux403));
    aux405=(-2.*(b23**2))+((-4.*(b11*(b23**2)))+(((0.+-2.j)*b24)+(((0.+-4.j)*(b11*b24))+aux404)));
    aux406=(0.+2.j)*(((b22+((2.*(b11*b22))+((-4.*((b13**2)*b22))+aux405)))-b44)*s4);
    aux407=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux408=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux409=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux408)));
    aux410=2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux409)))));
    aux411=(-4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+((16.*(b12*aux407))+aux410);
    aux412=(-16.*((b13**2)*(b22*b44)))+((-8.*((b23**2)*b44))+((4.*(b33*b44))+((8.*(b22*(b33*b44)))+aux411)));
    aux413=(-8.*(b22*(b34**2)))+((2.*b44)+((-8.*((b13**2)*b44))+((4.*(b22*b44))+aux412)));
    aux414=(32.*(b13*(b14*(b22*b34))))+((16.*(b23*(b24*b34)))+((-4.*(b34**2))+aux413));
    aux415=(-16.*((b14**2)*(b22*b33)))+((-8.*((b24**2)*b33))+((16.*(b13*(b14*b34)))+aux414));
    aux416=(16.*((b13**2)*(b24**2)))+((2.*b33)+((-8.*((b14**2)*b33))+((4.*(b22*b33))+aux415)));
    aux417=(16.*((b14**2)*(b23**2)))+((-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+aux416));
    aux418=(2.*b22)+((-8.*((b13**2)*b22))+((-8.*((b14**2)*b22))+((-4.*(b23**2))+aux417)));
    aux419=((0.+-4.j)*(b24*(1.+(2.*b33))))+(((0.+8.j)*(b23*b34))+((-8.*(b34**2))+((4.*b44)+(8.*(b33*b44)))));
    aux420=((b13**2)*(-4.+(((0.+8.j)*b24)+(-8.*b44))))+(b11*(2.+((4.*b33)+aux419)));
    aux421=((0.+4.j)*(b23*b34))+(((0.+-8.j)*(b13*((b14*b23)+((b12*b34)+((0.+2.j)*(b14*b34))))))+aux420);
    aux422=((0.+4.j)*(b12*b14))+(((0.+8.j)*(b12*(b14*b33)))+(((0.+-4.j)*(b24*b33))+aux421));
    aux423=(4.*b44)+(2.*((-8.*((b14**2)*b33))+((4.*(b33*b44))+(np.conjugate(aux422)))));
    aux424=2.+((-8.*(b14**2))+(((0.+4.j)*b24)+((4.*b33)+((-8.*(b34**2))+aux423))));
    aux425=2.*((b12**2)*(1.+((2.*b33)+((-4.*(b34**2))+((2.*b44)+(4.*(b33*b44)))))));
    aux426=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux427=(4.*((b23**2)*b44))+((-2.*(b33*b44))+((-4.*(b22*(b33*b44)))+(aux425+(-8.*(b12*aux426)))));
    aux428=(4.*((b13**2)*b44))+((-2.*(b22*b44))+((8.*((b13**2)*(b22*b44)))+aux427));
    aux429=(-16.*(b13*(b14*(b22*b34))))+((-8.*(b23*(b24*b34)))+((4.*(b22*(b34**2)))+aux428));
    aux430=(8.*((b14**2)*(b22*b33)))+((4.*((b24**2)*b33))+((-8.*(b13*(b14*b34)))+aux429));
    aux431=(-8.*((b13**2)*(b24**2)))+((4.*((b14**2)*b33))+((-2.*(b22*b33))+aux430));
    aux432=(4.*((b14**2)*b22))+((-8.*((b14**2)*(b23**2)))+((16.*(b13*(b14*(b23*b24))))+aux431));
    aux433=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux434=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux433)));
    aux435=((4.*((b13**2)*b22))+aux432)-(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux434)))));
    aux436=(4.*(b23**2))+((4.*(b24**2))+((-2.*b33)+((4.*(b34**2))+((-2.*b44)+(2.*aux435)))));
    aux437=((1.+((-4.*(b13**2))+((-4.*(b14**2))+aux418)))*(s2*aux424))/(-1.+((4.*(b13**2))+((4.*(b14**2))+((-2.*b22)+aux436))));
    aux438=((0.+-2.j)*((b23+((2.*(b11*b23))+(((0.+-4.j)*(b13*b23))+aux390)))*s1))+(((0.+-2.j)*((((0.+2.j)*b23)+aux398)*s3))+(aux406+aux437));
    aux439=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux440=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux441=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux440)));
    aux442=2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux441)))));
    aux443=(-4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+((16.*(b12*aux439))+aux442);
    aux444=(-16.*((b13**2)*(b22*b44)))+((-8.*((b23**2)*b44))+((4.*(b33*b44))+((8.*(b22*(b33*b44)))+aux443)));
    aux445=(-8.*(b22*(b34**2)))+((2.*b44)+((-8.*((b13**2)*b44))+((4.*(b22*b44))+aux444)));
    aux446=(32.*(b13*(b14*(b22*b34))))+((16.*(b23*(b24*b34)))+((-4.*(b34**2))+aux445));
    aux447=(-16.*((b14**2)*(b22*b33)))+((-8.*((b24**2)*b33))+((16.*(b13*(b14*b34)))+aux446));
    aux448=(16.*((b13**2)*(b24**2)))+((2.*b33)+((-8.*((b14**2)*b33))+((4.*(b22*b33))+aux447)));
    aux449=(16.*((b14**2)*(b23**2)))+((-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+aux448));
    aux450=(2.*b22)+((-8.*((b13**2)*b22))+((-8.*((b14**2)*b22))+((-4.*(b23**2))+aux449)));
    aux451=((s1*aux371)/(1.+((-4.*(b13**2))+((-4.*(b14**2))+aux383))))+((s2*aux438)/(1.+((-4.*(b13**2))+((-4.*(b14**2))+aux450))));
    aux452=(((0.+1.j)*aux176)/(1.+((-4.*(v13**2))+((-4.*(v14**2))+aux188))))+(aux252+(aux316+aux451));
    aux453=aux46+((aux82/(-1.+((4.*(v13**2))+((4.*(v14**2))+aux94))))+(aux141+aux452));
    output=0.25*aux453;
    return output



def coeffscuadraticos34(V,B):
    v11,v12,v13,v14=separate(V,0)
    v21,v22,v23,v24=separate(V,1)
    v31,v32,v33,v34=separate(V,2)
    v41,v42,v43,v44=separate(V,3)
    b11,b12,b13,b14=separate(B,0)
    b21,b22,b23,b24=separate(B,1)
    b31,b32,b33,b34=separate(B,2)
    b41,b42,b43,b44=separate(B,3)
    aux0=((0.+2.j)*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*((0.+2.j)+((-8.*b24)+((0.+4.j)*b44))));
    aux1=((0.+-4.j)*(b13*(1.+((2.*b22)+((0.+-1.j)*b24)))))+((-2.*b33)+(-2.*(b22*(1.+(2.*b33)))));
    aux2=((0.+2.j)*b22)+((2.*(b13*b22))+(b24+(2.*(b11*((0.+1.j)+(((0.+2.j)*b22)+b24))))));
    aux3=(4.*((b14**2)*b23))+((b14*(-1.+((4.*(b23**2))+aux1)))+(2.*(((0.+1.j)+(b13+aux2))*b34)));
    aux4=(4.*(((0.+1.j)+b13)*b24))+((2.*b44)+(b11*(2.+(((0.+8.j)*b24)+(4.*b44)))));
    aux5=(b12*((-4.*(b14*((2.*b23)+((0.+1.j)*b34))))+aux0))+((0.+1.j)*(aux3-(b23*(1.+aux4))));
    aux6=(b14*(b24+((2.*(b24*b33))+(-2.*(b23*b34)))))+(b13*(b23+((-2.*(b24*b34))+(2.*(b23*b44)))));
    aux7=(-4.*((b23**2)*(1.+(2.*b44))))+(b22*(2.+((-8.*(b34**2))+((4.*b44)+(b33*(4.+(8.*b44)))))));
    aux8=(16.*(b23*(b24*b34)))+((-4.*(b34**2))+((2.*b44)+((4.*(b33*b44))+aux7)));
    aux9=(16.*(b12*aux6))+(2.*(b11*(1.+((-4.*(b24**2))+((2.*b33)+((-8.*((b24**2)*b33))+aux8))))));
    aux10=(-4.*((b12**2)*(1.+((-4.*(b34**2))+((2.*b44)+(b33*(2.+(4.*b44))))))))+aux9;
    aux11=(-16.*((b13**2)*(b22*b44)))+((-8.*((b23**2)*b44))+((4.*(b33*b44))+((8.*(b22*(b33*b44)))+aux10)));
    aux12=(-8.*(b22*(b34**2)))+((2.*b44)+((-8.*((b13**2)*b44))+((4.*(b22*b44))+aux11)));
    aux13=(32.*(b13*(b14*(b22*b34))))+((16.*(b23*(b24*b34)))+((-4.*(b34**2))+aux12));
    aux14=(-16.*((b14**2)*(b22*b33)))+((-8.*((b24**2)*b33))+((16.*(b13*(b14*b34)))+aux13));
    aux15=(16.*((b13**2)*(b24**2)))+((2.*b33)+((-8.*((b14**2)*b33))+((4.*(b22*b33))+aux14)));
    aux16=(16.*((b14**2)*(b23**2)))+((-32.*(b13*(b14*(b23*b24))))+((-4.*(b24**2))+aux15));
    aux17=(2.*b22)+((-8.*((b13**2)*b22))+((-8.*((b14**2)*b22))+((-4.*(b23**2))+aux16)));
    aux18=(-4.*((8.*((b12**2)*b34))+aux5))/(1.+((-4.*(b13**2))+((-4.*(b14**2))+aux17)));
    aux19=(-8.*(v11*(v24*v34)))+((-8.*(v12*(v13*v44)))+((4.*(v23*v44))+(8.*(v11*(v23*v44)))));
    aux20=((0.+16.j)*(v11*(v22*v34)))+((-8.*(v13*(v22*v34)))+((8.*(v12*(v23*v34)))+((-4.*(v24*v34))+aux19)));
    aux21=((0.+-16.j)*((v12**2)*v34))+((-4.*(v13*v34))+((8.*(v12*(v14*v34)))+(((0.+8.j)*(v22*v34))+aux20)));
    aux22=(8.*(v14*(v22*v33)))+((-8.*(v12*(v24*v33)))+(((0.+4.j)*v34)+(((0.+8.j)*(v11*v34))+aux21)));
    aux23=((0.+-16.j)*(v11*(v23*v24)))+((8.*(v13*(v23*v24)))+((4.*(v14*v33))+aux22));
    aux24=((0.+16.j)*(v12*(v13*v24)))+((8.*(v13*(v14*v24)))+(((0.+-8.j)*(v23*v24))+aux23));
    aux25=((0.+16.j)*(v12*(v14*v23)))+((-8.*((v14**2)*v23))+((-8.*(v14*(v23**2)))+((-4.*(v12*v24))+aux24)));
    aux26=(4.*(v14*v22))+(((0.+-16.j)*(v13*(v14*v22)))+((2.*v23)+((4.*(v11*v23))+aux25)));
    aux27=(v14*(v24+((2.*(v24*v33))+(-2.*(v23*v34)))))+(v13*(v23+((-2.*(v24*v34))+(2.*(v23*v44)))));
    aux28=(-4.*((v23**2)*(1.+(2.*v44))))+(v22*(2.+((-8.*(v34**2))+((4.*v44)+(v33*(4.+(8.*v44)))))));
    aux29=(16.*(v23*(v24*v34)))+((-4.*(v34**2))+((2.*v44)+((4.*(v33*v44))+aux28)));
    aux30=-2.*(v11*(1.+((-4.*(v24**2))+((2.*v33)+((-8.*((v24**2)*v33))+aux29)))));
    aux31=(4.*((v12**2)*(1.+((-4.*(v34**2))+((2.*v44)+(v33*(2.+(4.*v44))))))))+((-16.*(v12*aux27))+aux30);
    aux32=(16.*((v13**2)*(v22*v44)))+((8.*((v23**2)*v44))+((-4.*(v33*v44))+((-8.*(v22*(v33*v44)))+aux31)));
    aux33=(8.*(v22*(v34**2)))+((-2.*v44)+((8.*((v13**2)*v44))+((-4.*(v22*v44))+aux32)));
    aux34=(-32.*(v13*(v14*(v22*v34))))+((-16.*(v23*(v24*v34)))+((4.*(v34**2))+aux33));
    aux35=(16.*((v14**2)*(v22*v33)))+((8.*((v24**2)*v33))+((-16.*(v13*(v14*v34)))+aux34));
    aux36=(-16.*((v13**2)*(v24**2)))+((-2.*v33)+((8.*((v14**2)*v33))+((-4.*(v22*v33))+aux35)));
    aux37=(-16.*((v14**2)*(v23**2)))+((32.*(v13*(v14*(v23*v24))))+((4.*(v24**2))+aux36));
    aux38=(-2.*v22)+((8.*((v13**2)*v22))+((8.*((v14**2)*v22))+((4.*(v23**2))+aux37)));
    aux39=((0.+2.j)*((-4.*(v12*v13))+((2.*v14)+(((0.+-8.j)*(v13*v14))+aux26))))/(-1.+((4.*(v13**2))+((4.*(v14**2))+aux38)));
    output=0.25*(aux18+aux39);
    return output


def a1(V,B,R,S):
    c1=lineal1(V,B,R,S)
    c2=lineal2(V,B,R,S)
    c3=lineal3(V,B,R,S)
    c4=lineal4(V,B,R,S)
    c11=coeffscuadraticos11(V,B)
    c12=coeffscuadraticos12(V,B)
    c13=coeffscuadraticos13(V,B)
    c14=coeffscuadraticos14(V,B)
    c22=coeffscuadraticos22(V,B)
    c23=coeffscuadraticos23(V,B)
    c24=coeffscuadraticos24(V,B)
    c33=coeffscuadraticos33(V,B)
    c34=coeffscuadraticos34(V,B)
    c44=coeffscuadraticos44(V,B)
    aux0=((2.*(c13*(c3*c44)))/((c34**2)+(-4.*(c33*c44))))+((-4.*(c1*(c33*\
    c44)))/((c34**2)+(-4.*(c33*c44))));
    aux1=((c1*(c34**2))/((c34**2)+(-4.*(c33*c44))))+(((2.*(c14*(c33*c4)))/\
    ((c34**2)+(-4.*(c33*c44))))+aux0);
    output=(aux1-((c13*(c34*c4))/((c34**2)+(-4.*(c33*c44)))))-((c14*(c3*\
    c34))/((c34**2)+(-4.*(c33*c44))));
    return output


def a2(V,B,R,S):
    c1=lineal1(V,B,R,S)
    c2=lineal2(V,B,R,S)
    c3=lineal3(V,B,R,S)
    c4=lineal4(V,B,R,S)
    c11=coeffscuadraticos11(V,B)
    c12=coeffscuadraticos12(V,B)
    c13=coeffscuadraticos13(V,B)
    c14=coeffscuadraticos14(V,B)
    c22=coeffscuadraticos22(V,B)
    c23=coeffscuadraticos23(V,B)
    c24=coeffscuadraticos24(V,B)
    c33=coeffscuadraticos33(V,B)
    c34=coeffscuadraticos34(V,B)
    c44=coeffscuadraticos44(V,B)
    aux0=((2.*(c23*(c3*c44)))/((c34**2)+(-4.*(c33*c44))))+((-4.*(c2*(c33*\
    c44)))/((c34**2)+(-4.*(c33*c44))));
    aux1=((c2*(c34**2))/((c34**2)+(-4.*(c33*c44))))+(((2.*(c24*(c33*c4)))/\
    ((c34**2)+(-4.*(c33*c44))))+aux0);
    output=(aux1-((c23*(c34*c4))/((c34**2)+(-4.*(c33*c44)))))-((c24*(c3*\
    c34))/((c34**2)+(-4.*(c33*c44))));
    return output

def a12(V,B,R,S):
    c1=lineal1(V,B,R,S)
    c2=lineal2(V,B,R,S)
    c3=lineal3(V,B,R,S)
    c4=lineal4(V,B,R,S)
    c11=coeffscuadraticos11(V,B)
    c12=coeffscuadraticos12(V,B)
    c13=coeffscuadraticos13(V,B)
    c14=coeffscuadraticos14(V,B)
    c22=coeffscuadraticos22(V,B)
    c23=coeffscuadraticos23(V,B)
    c24=coeffscuadraticos24(V,B)
    c33=coeffscuadraticos33(V,B)
    c34=coeffscuadraticos34(V,B)
    c44=coeffscuadraticos44(V,B)
    aux0=((2.*(c13*(c23*c44)))/((c34**2)+(-4.*(c33*c44))))+((c33*((2.*(\
    c14*c24))+(-4.*(c12*c44))))/((c34**2)+(-4.*(c33*c44))));
    aux1=(((c12*(c34**2))/((c34**2)+(-4.*(c33*c44))))+aux0)-((c13*(c24*\
    c34))/((c34**2)+(-4.*(c33*c44))));
    output=aux1-((c14*(c23*c34))/((c34**2)+(-4.*(c33*c44))));
    return output

def a11(V,B,R,S):
    c1=lineal1(V,B,R,S)
    c2=lineal2(V,B,R,S)
    c3=lineal3(V,B,R,S)
    c4=lineal4(V,B,R,S)
    c11=coeffscuadraticos11(V,B)
    c12=coeffscuadraticos12(V,B)
    c13=coeffscuadraticos13(V,B)
    c14=coeffscuadraticos14(V,B)
    c22=coeffscuadraticos22(V,B)
    c23=coeffscuadraticos23(V,B)
    c24=coeffscuadraticos24(V,B)
    c33=coeffscuadraticos33(V,B)
    c34=coeffscuadraticos34(V,B)
    c44=coeffscuadraticos44(V,B)
    aux0=(((c13**2)*c44)/((c34**2)+(-4.*(c33*c44))))+((-4.*(c11*(c33*c44))\
    )/((c34**2)+(-4.*(c33*c44))));
    aux1=(((c14**2)*c33)/((c34**2)+(-4.*(c33*c44))))+(((c11*(c34**2))/((\
    c34**2)+(-4.*(c33*c44))))+aux0);
    output=aux1-((c13*(c14*c34))/((c34**2)+(-4.*(c33*c44))));
    return output

def a22(V,B,R,S):
    c1=lineal1(V,B,R,S)
    c2=lineal2(V,B,R,S)
    c3=lineal3(V,B,R,S)
    c4=lineal4(V,B,R,S)
    c11=coeffscuadraticos11(V,B)
    c12=coeffscuadraticos12(V,B)
    c13=coeffscuadraticos13(V,B)
    c14=coeffscuadraticos14(V,B)
    c22=coeffscuadraticos22(V,B)
    c23=coeffscuadraticos23(V,B)
    c24=coeffscuadraticos24(V,B)
    c33=coeffscuadraticos33(V,B)
    c34=coeffscuadraticos34(V,B)
    c44=coeffscuadraticos44(V,B)
    aux0=(((c23**2)*c44)/((c34**2)+(-4.*(c33*c44))))+((-4.*(c22*(c33*c44))\
    )/((c34**2)+(-4.*(c33*c44))));
    aux1=(((c24**2)*c33)/((c34**2)+(-4.*(c33*c44))))+(((c22*(c34**2))/((\
    c34**2)+(-4.*(c33*c44))))+aux0);
    output=aux1-((c23*(c24*c34))/((c34**2)+(-4.*(c33*c44))));
    return output


def independiente_transformado(c3,c4,c34,c33,c44):
   return (((c33*(c4**2))+((c3**2)*c44))-(c3*(c34*c4)))/((c34**2)+(-4.*(c33*c44)));



def integral_aux(a1,a2,a12,a11,a22,c33,c34,c44,c3,c4,V,B,R,S):
    aux0=(((a11*(a2**2))+((a1**2)*a22))-(a1*(a12*a2)))/((a12**2)+(-4.*(a11*a22)));
    aux1=(((-4.*c33)+((c34**2)/c44))**-0.5)*(((-c44)**-0.5)*((np.exp(aux0))*(np.pi**2)));
    aux2=a22*(((2.*(a1*a22))-(a12*a2))*((((a12**2)+(-4.*(a11*a22)))**-2.)*aux1));
    output=8.*((np.sqrt(((-4.*a11)+((a12**2)/a22))))*(((-a22)**-0.5)*aux2));
    independientes=np.exp(independiente_transformado(c3,c4,c34,c33,c44))*np.exp(independiente(V,B,R,S))
    det1=(np.linalg.det(np.array(V)+(1/2)*np.eye(4)))**(1/4)
    det2=(np.linalg.det(np.array(B)+(1/2)*np.eye(4)))**(1/4)
    cons= 1/(2*np.pi)*1/(2*np.pi)
    return (independientes*output*cons)/(det1*det2*np.sqrt(2))

def fidelidad_aux(a1,a2,a12,a11,a22,c33,c34,c44,c3,c4,V,B,R,S):
    aux0 = (((a11 * (a2 ** 2)) + ((a1 ** 2) * a22)) - (a1 * (a12 * a2))) / ((a12 ** 2) + (-4. * (a11 * a22)));
    aux1 = (((-4. * c33) + ((c34 ** 2) / c44)) ** -0.5) * (((-c44) ** -0.5) * ((np.exp(aux0)) * (np.pi ** 2)));
    output = 4. * ((((-4. * a11) + ((a12 ** 2) / a22)) ** -0.5) * (((-a22) ** -0.5) * aux1));
    independientes = np.exp(independiente_transformado(c3, c4, c34, c33, c44)) * np.exp(independiente(V, B, R, S))
    det1 = (np.linalg.det(np.array(V) + (1 / 2) * np.eye(4))) ** (1 / 4)
    det2 = (np.linalg.det(np.array(B) + (1 / 2) * np.eye(4))) ** (1 / 4)
    cons= 1/(4*np.pi**2)
    fid=(independientes*output*cons)/(det1*det2)
    return fid*np.conjugate(fid)

def overlap_aux(a1,a2,a12,a11,a22,c33,c34,c44,c3,c4,V,B,R,S):
    aux0 = (((a11 * (a2 ** 2)) + ((a1 ** 2) * a22)) - (a1 * (a12 * a2))) / ((a12 ** 2) + (-4. * (a11 * a22)));
    aux1 = (((-4. * c33) + ((c34 ** 2) / c44)) ** -0.5) * (((-c44) ** -0.5) * ((np.exp(aux0)) * (np.pi ** 2)));
    output = 4. * ((((-4. * a11) + ((a12 ** 2) / a22)) ** -0.5) * (((-a22) ** -0.5) * aux1));
    independientes = np.exp(independiente_transformado(c3, c4, c34, c33, c44)) * np.exp(independiente(V, B, R, S))
    det1 = (np.linalg.det(np.array(V) + (1 / 2) * np.eye(4))) ** (1 / 4)
    det2 = (np.linalg.det(np.array(B) + (1 / 2) * np.eye(4))) ** (1 / 4)
    cons= 1/(4*np.pi**2)
    fid=(independientes*output*cons)/(det1*det2)
    return fid

def condiciones(V,B,R,S):
    if np.real(coeffscuadraticos44(V,B)) < 0:
        if np.real(coeffscuadraticos33(V,B)- (coeffscuadraticos34(V,B)**2)/(4*coeffscuadraticos44(V,B)))<=0:
            if (np.real(a22(V,B,R,S))<0):
                if np.real(-4*a11(V,B,R,S)+(a12(V,B,R,S)**2 /a22(V,B,R,S)))>0:
                    return 1
                else:
                    print(display(Markdown('Integral in $\\alpha_{4}$  is divergent, integrand does not fulfill $Re(C_{44})<0$')))
                    #print(R,V,S,B)
                    raise NameError("Divergencia en la integral 1")
            else:
               #print(R,V,S,B)
               raise NameError(display(Markdown('Integral in $\\alpha_{4}$  is divergent, integrand does not fulfill $Re(C_{44})<0$')))
        else:
            #print(R,V,S,B)
            raise NameError(display(Markdown('Integral in $\\alpha_{4}$  is divergent, integrand does not fulfill $Re(C_{44})<0$')))
    else:
        print(display(Markdown('Integral in $\\alpha_{4}$  is divergent, integrand does not fulfill $Re(C_{44})<0$')))
        #print(R,V,S,B)
        raise NameError("Divergencia en la integral 1")

def integral(V,B,R,S):
    condiciones(V,B,R,S)
    a=a1(V,B,R,S)
    b=a2(V,B,R,S)
    c=a12(V,B,R,S)
    d=a11(V,B,R,S)
    e=a22(V,B,R,S)
    f=coeffscuadraticos33(V,B)
    g=coeffscuadraticos34(V,B)
    h=coeffscuadraticos44(V,B)
    i=lineal3(V,B,R,S)
    j=lineal4(V,B,R,S)
    return     integral_aux(a,b,c,d,e,f,g,h,i,j,V,B,R,S)

def fidelity(V,B,R,S):
    condiciones(V,B,R,S)
    a=a1(V,B,R,S)
    b=a2(V,B,R,S)
    c=a12(V,B,R,S)
    d=a11(V,B,R,S)
    e=a22(V,B,R,S)
    f=coeffscuadraticos33(V,B)
    g=coeffscuadraticos34(V,B)
    h=coeffscuadraticos44(V,B)
    i=lineal3(V,B,R,S)
    j=lineal4(V,B,R,S)
    return     fidelidad_aux(a,b,c,d,e,f,g,h,i,j,V,B,R,S)


def overlap2(vector1,vector2):
    V=[[vector1[5,0],vector1[6,0],vector1[7,0],vector1[8,0]],[vector1[6,0],vector1[9,0],vector1[10,0],vector1[11,0]],[vector1[7,0],vector1[10,0],vector1[12,0],vector1[13,0]],[vector1[8,0],vector1[11,0],vector1[13,0],vector1[14,0]]]
    R=[vector1[i,0] for i in range(1,5)]
    B=[[vector2[5,0],vector2[6,0],vector2[7,0],vector2[8,0]],[vector2[6,0],vector2[9,0],vector2[10,0],vector2[11,0]],[vector2[7,0],vector2[10,0],vector2[12,0],vector2[13,0]],[vector2[8,0],vector2[11,0],vector2[13,0],vector2[14,0]]]
    S=[vector2[i,0] for i in range(1,5)]
    condiciones(V,B,R,S)
    a=a1(V,B,R,S)
    b=a2(V,B,R,S)
    c=a12(V,B,R,S)
    d=a11(V,B,R,S)
    e=a22(V,B,R,S)
    f=coeffscuadraticos33(V,B)
    g=coeffscuadraticos34(V,B)
    h=coeffscuadraticos44(V,B)
    i=lineal3(V,B,R,S)
    j=lineal4(V,B,R,S)
    return     np.round(overlap_aux(a,b,c,d,e,f,g,h,i,j,V,B,R,S),9)



def gaussiano_norm(z):
    #return np.sqrt(overlap2(z,z))
    return 1

