import numpy as np


__all__ =['integral','fidelity_sq','overlap2']

def separate(V,row):
    return V[row][0],V[row][1],V[row][2],V[row][3]

def c(V,W,R,S):
    v11,v12,v13,v14=separate(V,0)
    v21,v22,v23,v24=separate(V,1)
    v31,v32,v33,v34=separate(V,2)
    v41,v42,v43,v44=separate(V,3)
    w11,w12,w13,w14=separate(W,0)
    w21,w22,w23,w24=separate(W,1)
    w31,w32,w33,w34=separate(W,2)
    w41,w42,w43,w44=separate(W,3)
    u1,u2,u3,u4=R[0],R[1],R[2],R[3]
    s1,s2,s3,s4=S[0],S[1],S[2],S[3]
    aux0=(2.*(v22*w11))+((-4.*(w12*((0.+1.j)+(2.*w12))))+((4.*w22)+(w11*(9.+(8.*w22)))));
    aux1=(-4.*((1.+w11)*w22))+(-2.*(v22*(1.+((2.*w11)+((-4.*(w12**2))+((2.*w22)+(4.*(w11*w22))))))));
    aux2=(w13*((0.+3.j)+((-6.*w12)+((-4.*(v22*w12))+((0.+4.j)*w22)))))+((2.+(v22+((3.*w11)+((2.*(v22*w11))+((0.+-2.j)*w12)))))*w23);
    aux3=(v22*(w23**2))+((w11*(w23**2))+((2.*(v22*(w11*(w23**2))))+(2.*(v23*aux2))));
    aux4=((0.+2.j)*(w13*w23))+((-4.*(w12*(w13*w23)))+((-8.*(v22*(w12*(w13*w23))))+((w23**2)+aux3)));
    aux5=((v23**2)*(5.+(v22+aux0)))+((v33*(((((0.+1.j)+(-2.*w12))**2))+aux1))+aux4);
    aux6=(4.*(v22*(w13**2)))+((4.*((w13**2)*w22))+((8.*(v22*((w13**2)*w22)))+aux5));
    aux7=(4.*((1.+w11)*w22))+(v22*(2.+((4.*w11)+((-8.*(w12**2))+((4.*w22)+(8.*(w11*w22)))))));
    aux8=((0.+2.j)*v12)+((-2.*v22)+(((0.+-8.j)*w12)+((8.*(v12*w12))+(-8.*w22))));
    aux9=2.*(((0.+3.j)+((-2.*v12)+(((0.+4.j)*w11)+((-4.*(v12*w11))+(4.*w12)))))*w24);
    aux10=(v24*((0.+-3.j)+(((0.+-4.j)*w11)+((v12*(2.+(4.*w11)))+(-4.*w12)))))+((w14*(-7.+aux8))+aux9);
    aux11=(-4.*((1.+w11)*w22))+(-2.*(v22*(1.+((2.*w11)+((-4.*(w12**2))+((2.*w22)+(4.*(w11*w22))))))));
    aux12=v24*(3.+((-2.*(w12*((0.+1.j)+(4.*w12))))+((4.*w22)+(w11*(6.+(8.*w22))))));
    aux13=aux12+(2.*((2.+(v22+((3.*w11)+((2.*(v22*w11))+((0.+-2.j)*w12)))))*w24));
    aux14=v23*((w14*((0.+3.j)+((-6.*w12)+((-4.*(v22*w12))+((0.+4.j)*w22)))))+aux13);
    aux15=(2.*(v22*(w23*w24)))+((2.*(w11*(w23*w24)))+((4.*(v22*(w11*(w23*w24))))+aux14));
    aux16=(-4.*(w12*(w13*w24)))+((-8.*(v22*(w12*(w13*w24))))+((2.*(w23*w24))+aux15));
    aux17=(-2.*(w12*(w14*w23)))+((-4.*(v22*(w12*(w14*w23))))+(((0.+2.j)*(w13*w24))+aux16));
    aux18=(2.*(v24*(w11*w23)))+(((0.+-2.j)*(v24*(w12*w23)))+(((0.+1.j)*(w14*w23))+aux17));
    aux19=(8.*(v22*(w13*(w14*w22))))+((v34*(((((0.+1.j)+(-2.*w12))**2))+aux11))+((v24*w23)+aux18));
    aux20=(4.*(v22*(w13*w14)))+(((0.+4.j)*(v24*(w13*w22)))+((4.*(w13*(w14*w22)))+aux19));
    aux21=(4.*((1.+w11)*w22))+(v22*(2.+((4.*w11)+((-8.*(w12**2))+((4.*w22)+(8.*(w11*w22)))))));
    aux22=(((0.+2.j)*(v24*w13))+((-4.*(v24*(w12*w13)))+aux20))-((1.+((-4.*(w12*((0.+-1.j)+w12)))+aux21))*w34);
    aux23=v12*(3.+((-2.*(w12*((0.+1.j)+(4.*w12))))+((4.*w22)+(w11*(6.+(8.*w22))))));
    aux24=(v22*((0.+2.j)+(((0.+4.j)*w11)+(4.*w12))))+(((0.+-4.j)*w22)+(2.*aux23));
    aux25=(w14*((0.+3.j)+((6.*v12)+(((0.+2.j)*v22)+(8.*(v12*w22))))))+(w24+(-2.*((((0.+-1.j)*v12)+(v22+(4.*(v12*w12))))*w24)));
    aux26=(2.*((1.+(((0.+-1.j)*v12)+(v22+(-2.*(v12*w12)))))*(w14*w23)))+((((0.+-1.j)+((2.*v12)+(4.*(v12*w11))))*(w23*w24))+(w13*aux25));
    aux27=(4.*(v24*(w13*((-1.+(((0.+-1.j)+(2.*v12))*w12))-w22))))+((2.*(v24*(((((0.+1.j)*(1.+w11))+w12)-(v12*(1.+(2.*w11))))*w23)))+aux26);
    aux28=v12*(3.+((-2.*(w12*((0.+1.j)+(4.*w12))))+((4.*w22)+(w11*(6.+(8.*w22))))));
    aux29=(v22*((0.+2.j)+(((0.+4.j)*w11)+(4.*w12))))+(((0.+-4.j)*w22)+(2.*aux28));
    aux30=(v34*((0.+1.j)+(((0.+6.j)*w11)+((10.*w12)+aux24))))+((-2.*aux27)+(((0.+1.j)+(((0.+6.j)*w11)+((10.*w12)+aux29)))*w34));
    aux31=((0.+8.j)*(v12*(w12*(w24*w33))))+((-8.*(v22*(w12*(w24*w33))))+((2.*(v13*aux22))+(v23*aux30)));
    aux32=(-8.*(v12*(w11*(w24*w33))))+(((0.+-8.j)*(v22*(w11*(w24*w33))))+((-4.*(w12*(w24*w33)))+aux31));
    aux33=(-4.*(v12*(w24*w33)))+(((0.+-4.j)*(v22*(w24*w33)))+(((0.+-4.j)*(w11*(w24*w33)))+aux32));
    aux34=((0.+-8.j)*(v12*(w14*(w22*w33))))+((8.*(v22*(w14*(w22*w33))))+(((0.+-2.j)*(w24*w33))+aux33));
    aux35=(-8.*(v12*(v24*(w22*w33))))+((-16.*(v12*(v24*(w11*(w22*w33)))))+((4.*(w14*(w22*w33)))+aux34));
    aux36=(8.*(v12*(w12*(w14*w33))))+(((0.+8.j)*(v22*(w12*(w14*w33))))+(((0.+4.j)*(v24*(w22*w33)))+aux35));
    aux37=((0.+-4.j)*(v12*(w14*w33)))+((4.*(v22*(w14*w33)))+(((0.+4.j)*(w12*(w14*w33)))+aux36));
    aux38=(-8.*(v24*(w12*w33)))+((16.*(v12*(v24*((w12**2)*w33))))+((2.*(w14*w33))+aux37));
    aux39=(-4.*(v12*(v24*w33)))+(((0.+-4.j)*(v24*(w11*w33)))+((-8.*(v12*(v24*(w11*w33))))+aux38));
    aux40=((0.+-4.j)*(v12*(w13*(w23*w24))))+((4.*(v22*(w13*(w23*w24))))+(((v23**2)*aux10)+aux39));
    aux41=(8.*(v12*((w13**2)*w24)))+(((0.+8.j)*(v22*((w13**2)*w24)))+((2.*(w13*(w23*w24)))+aux40));
    aux42=((0.+8.j)*(v12*(v33*(w12*w24))))+((-8.*(v22*(v33*(w12*w24))))+(((0.+4.j)*((w13**2)*w24))+aux41));
    aux43=(-8.*(v12*(v33*(w11*w24))))+(((0.+-8.j)*(v22*(v33*(w11*w24))))+((-4.*(v33*(w12*w24)))+aux42));
    aux44=(-4.*(v12*(v33*w24)))+(((0.+-4.j)*(v22*(v33*w24)))+(((0.+-4.j)*(v33*(w11*w24)))+aux43));
    aux45=((0.+2.j)*(v12*(w14*(w23**2))))+((-2.*(v22*(w14*(w23**2))))+(((0.+-2.j)*(v33*w24))+aux44));
    aux46=((0.+-1.j)*(v24*(w23**2)))+((2.*(v12*(v24*(w23**2))))+((4.*(v12*(v24*(w11*(w23**2)))))+aux45));
    aux47=((0.+-2.j)*(w13*(w14*w23)))+((-4.*(v12*(w13*(w14*w23))))+(((0.+-4.j)*(v22*(w13*(w14*w23))))+aux46));
    aux48=(4.*(v22*(v34*(w12*w23))))+((4.*(v24*(w13*w23)))+((-16.*(v12*(v24*(w12*(w13*w23)))))+aux47));
    aux49=((0.+4.j)*(v22*(v34*(w11*w23))))+((2.*(v34*(w12*w23)))+(((0.+-4.j)*(v12*(v34*(w12*w23))))+aux48));
    aux50=((0.+2.j)*(v22*(v34*w23)))+(((0.+2.j)*(v34*(w11*w23)))+((4.*(v12*(v34*(w11*w23))))+aux49));
    aux51=(8.*(v22*(v33*(w14*w22))))+(((0.+1.j)*(v34*w23))+((2.*(v12*(v34*w23)))+aux50));
    aux52=(16.*(v12*(v24*((w13**2)*w22))))+((4.*(v33*(w14*w22)))+(((0.+-8.j)*(v12*(v33*(w14*w22))))+aux51));
    aux53=(-4.*(v34*(w13*w22)))+(((0.+8.j)*(v12*(v34*(w13*w22))))+((-8.*(v22*(v34*(w13*w22))))+aux52));
    aux54=((0.+4.j)*(v24*(v33*w22)))+((-8.*(v12*(v24*(v33*w22))))+((-16.*(v12*(v24*(v33*(w11*w22)))))+aux53));
    aux55=((0.+4.j)*(v33*(w12*w14)))+((8.*(v12*(v33*(w12*w14))))+(((0.+8.j)*(v22*(v33*(w12*w14))))+aux54));
    aux56=(2.*(v33*w14))+(((0.+-4.j)*(v12*(v33*w14)))+((4.*(v22*(v33*w14)))+aux55));
    aux57=((0.+-8.j)*(v22*(v34*(w12*w13))))+(((0.+4.j)*(v24*(w13**2)))+((8.*(v12*(v24*(w13**2))))+aux56));
    aux58=(-4.*(v22*(v34*w13)))+(((0.+-4.j)*(v34*(w12*w13)))+((-8.*(v12*(v34*(w12*w13))))+aux57));
    aux59=(16.*(v12*(v24*(v33*(w12**2)))))+((-2.*(v34*w13))+(((0.+4.j)*(v12*(v34*w13)))+aux58));
    aux60=((0.+-4.j)*(v24*(v33*w11)))+((-8.*(v12*(v24*(v33*w11))))+((-8.*(v24*(v33*w12)))+aux59));
    aux61=(4.*(w12*w13))+(((0.+-2.j)*(w13*(1.+(2.*w22))))+((-1.+((-2.*w11)+((0.+2.j)*w12)))*w23));
    aux62=((-4.*(v12*(v24*v33)))+aux60)-(((0.+1.j)+((2.*v12)+((0.+2.j)*v22)))*(aux61*w34));
    aux63=(-2.*((v12**2)*(1.+(2.*w11))))+(2.*(v11*(1.+(v22+(w11+(2.*(v22*w11)))))));
    aux64=(4.*((1.+((-4.*(v12**2))+((2.*v22)+(v11*(2.+(4.*v22))))))*(w12**2)))+((-2.*w22)+(-4.*((((0.+2.j)*v12)+(w11+((2.*(v22*w11))+aux63)))*w22)));
    aux65=(-2.*(v11+((4.*(v22*w11))+(v11*(v22*(2.+(4.*w11)))))))+((8.*((((0.+-1.j)*v11)+((2.*v12)+((0.+1.j)*v22)))*w12))+aux64);
    aux66=(-2.*v22)+((-2.*w11)+((4.*(v12*(v12+(2.*(((0.+1.j)+v12)*w11)))))+aux65));
    aux67=((0.+-2.j)*w22)+((4.*(v12*(1.+(((0.+1.j)*w12)+w22))))+((0.+-1.j)*(v11*(3.+(4.*w22)))));
    aux68=(-4.*((v12**2)*w12))+((2.*(v22*w12))+((v11*((6.+(4.*v22))*w12))+aux67));
    aux69=(2.*(v22*w11))+((-4.*(w12*((0.+1.j)+(2.*w12))))+((4.*w22)+(w11*(9.+(8.*w22)))));
    aux70=(4.*(v12*((0.+3.j)+(((0.+4.j)*w11)+(4.*w12)))))+((2.*(w11*(13.+((2.*v22)+(8.*w22)))))+(4.*(v11*(5.+(v22+aux69)))));
    aux71=(v23**2)*(((-4.*((v12**2)*(1.+(2.*w11))))+aux70)-((((0.+3.j)+(4.*w12))**2)));
    aux72=(4.*(v11*(2.+(v22+((3.*w11)+((2.*(v22*w11))+((0.+-2.j)*w12)))))))+(((0.+-4.j)*w12)+(8.*(v12*(((0.+1.j)*(1.+w11))+w12))));
    aux73=(3.+((6.*w11)+((4.*(v22*w11))+((-4.*((v12**2)*(1.+(2.*w11))))+aux72))))*w23;
    aux74=(-2.*(v22*(w11*(1.+w22))))+((v12**2)*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))));
    aux75=(2.*(v22*(w12*((0.+1.j)+w12))))+((v12*(((0.+2.j)*w11)+((4.*w12)+((0.+-2.j)*w22))))+aux74);
    aux76=(4.*((1.+w11)*w22))+(v22*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux77=(-2.*(((w12**2)+aux75)-(w11*w22)))+(v11*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux76)));
    aux78=(8.*(v11*(v22*(w11*(w23**2)))))+((-2.*w33)+(-4.*((v22+(w11+(w22+aux77)))*w33)));
    aux79=(4.*(v11*(w11*(w23**2))))+((-8.*((v12**2)*(w11*(w23**2))))+((4.*(v22*(w11*(w23**2))))+aux78));
    aux80=(-4.*((v12**2)*(w23**2)))+((4.*(v11*(v22*(w23**2))))+((2.*(w11*(w23**2)))+aux79));
    aux81=(-32.*(v11*(v22*(w12*(w13*w23)))))+((w23**2)+((4.*(v11*(w23**2)))+(((0.+4.j)*(v12*(w23**2)))+aux80)));
    aux82=(-16.*(v11*(w12*(w13*w23))))+((32.*((v12**2)*(w12*(w13*w23))))+((-16.*(v22*(w12*(w13*w23))))+aux81));
    aux83=(-16.*(v12*(w13*w23)))+(((0.+-8.j)*(v22*(w13*w23)))+((-8.*(w12*(w13*w23)))+aux82));
    aux84=(-8.*(v23*(w13*((0.+-1.j)+(((0.+1.j)*v22)+((3.*w12)+aux68))))))+(aux71+((2.*(v23*aux73))+(((0.+8.j)*(v11*(w13*w23)))+aux83)));
    aux85=(16.*(v22*((w13**2)*w22)))+((32.*(v11*(v22*((w13**2)*w22))))+((2.*(v33*(-1.+aux66)))+aux84));
    aux86=(8.*((w13**2)*w22))+((16.*(v11*((w13**2)*w22)))+((-32.*((v12**2)*((w13**2)*w22)))+aux85));
    aux87=(-16.*((v12**2)*(w13**2)))+((16.*(v22*(w13**2)))+((16.*(v11*(v22*(w13**2))))+aux86));
    aux88=(-4.*(w12**2))+((-8.*(v22*(w12**2)))+(4.*((1.+(v22+(w11+(2.*(v22*w11)))))*w22)));
    aux89=(w14*((0.+1.j)+((-2.*w12)+((0.+2.j)*w22))))+(w24+((2.*(w11*w24))+((0.+-2.j)*(w12*w24))));
    aux90=(-2.*(w12**2))+((-4.*(v22*(w12**2)))+(2.*((1.+(v22+(w11+(2.*(v22*w11)))))*w22)));
    aux91=(-4.*(v24*aux89))+(w44+(2.*((v22+((2.*(v22*w11))+(((0.+2.j)*w12)+aux90)))*w44)));
    aux92=(4.*(((0.+-1.j)+((2.*w12)+(4.*(v22*w12))))*(w14*w24)))+((-4.*((1.+(v22+(w11+(2.*(v22*w11)))))*(w24**2)))+aux91);
    aux93=(-2.*((v24**2)*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22))))))))+aux92;
    aux94=(-4.*((w14**2)*(v22+(w22+(2.*(v22*w22))))))+((v44*(1.+((2.*v22)+((4.*(v22*w11))+(((0.+4.j)*w12)+aux88)))))+aux93);
    aux95=(w13*(-2.+(((0.+-4.j)*w12)+(-4.*w22))))+(((0.+1.j)+(((0.+2.j)*w11)+(2.*w12)))*w23);
    aux96=v12*(3.+((-2.*(w12*((0.+1.j)+(4.*w12))))+((4.*w22)+(w11*(6.+(8.*w22))))));
    aux97=(v22*((0.+2.j)+(((0.+4.j)*w11)+(4.*w12))))+(((0.+-4.j)*w22)+(2.*aux96));
    aux98=2.*(v24*(((0.+1.j)+(((0.+4.j)*w11)+((v12*(2.+(4.*w11)))+(4.*w12))))*w24));
    aux99=v12*(3.+((-2.*(w12*((0.+1.j)+(4.*w12))))+((4.*w22)+(w11*(6.+(8.*w22))))));
    aux100=(v22*((0.+2.j)+(((0.+4.j)*w11)+(4.*w12))))+(((0.+-4.j)*w22)+(2.*aux99));
    aux101=(-4.*(((0.+-1.j)+(v12*(2.+(4.*w11))))*(w24**2)))+(((0.+1.j)+(((0.+6.j)*w11)+((10.*w12)+aux100)))*w44);
    aux102=(2.*((-5.+((-2.*v22)+(2.*(v12*((0.+1.j)+(8.*w12))))))*(w14*w24)))+aux101;
    aux103=(-2.*((w14**2)*((0.+3.j)+((6.*v12)+(((0.+2.j)*v22)+(8.*(v12*w22)))))))+((v44*((0.+1.j)+(((0.+6.j)*w11)+((10.*w12)+aux97))))+(aux98+aux102));
    aux104=((0.+-2.j)*((v24**2)*(1.+((2.*w11)+((0.+-2.j)*w12)))))+((-2.*(v24*(w14*(1.+((4.*(((0.+1.j)+v12)*w12))+(4.*w22))))))+aux103);
    aux105=(-2.*(w11*(w23*w24)))+(w34+(2.*((w11+((-2.*(w12**2))+(w22+(2.*(w11*w22)))))*w34)));
    aux106=(v34*(1.+((2.*w11)+((-4.*(w12**2))+((2.*w22)+(4.*(w11*w22)))))))+((2.*(w12*(w14*w23)))+((4.*(w12*(w13*w24)))+aux105));
    aux107=(w13*(((4.*w12)+((0.+-2.j)*(1.+(2.*w22))))*w44))+((-1.+((-2.*w11)+((0.+2.j)*w12)))*(w23*w44));
    aux108=(2.*(v24*(((-2.*(w13*w14))+((-4.*(w13*(w14*w22)))+aux106))-(w23*w24))))+aux107;
    aux109=(2.*(w24*w34))+((4.*(w11*(w24*w34)))+(((0.+-4.j)*(w12*(w24*w34)))+aux108));
    aux110=((0.+2.j)*(w14*w34))+((-4.*(w12*(w14*w34)))+(((0.+4.j)*(w14*(w22*w34)))+aux109));
    aux111=(-4.*(w13*(w14*w24)))+(((0.+-2.j)*(w14*(w23*w24)))+(((0.+4.j)*(w13*(w24**2)))+aux110));
    aux112=(2.*(v34*w24))+((4.*(v34*(w11*w24)))+(((0.+-4.j)*(v34*(w12*w24)))+aux111));
    aux113=(-2.*(v44*(w11*w23)))+(((0.+2.j)*(v44*(w12*w23)))+((2.*((w14**2)*w23))+aux112));
    aux114=(-4.*(v34*(w12*w14)))+(((0.+-4.j)*(v44*(w13*w22)))+(((0.+4.j)*(v34*(w14*w22)))+aux113));
    aux115=((0.+-2.j)*(v44*w13))+((4.*(v44*(w12*w13)))+(((0.+2.j)*(v34*w14))+aux114));
    aux116=((1.+(2.*v22))*(aux95*w44))+((v23*aux104)+(-2.*(v12*(aux115-(v44*w23)))));
    aux117=((0.+-8.j)*(v22*(w11*(w24*w34))))+((-4.*(w12*(w24*w34)))+((-8.*(v22*(w12*(w24*w34))))+aux116));
    aux118=((0.+-2.j)*(w24*w34))+(((0.+-4.j)*(v22*(w24*w34)))+(((0.+-4.j)*(w11*(w24*w34)))+aux117));
    aux119=((0.+4.j)*(v24*(w22*w34)))+((4.*(w14*(w22*w34)))+((8.*(v22*(w14*(w22*w34))))+aux118));
    aux120=(4.*(v22*(w14*w34)))+(((0.+4.j)*(w12*(w14*w34)))+(((0.+8.j)*(v22*(w12*(w14*w34))))+aux119));
    aux121=((0.+-4.j)*(v24*(w11*w34)))+((-8.*(v24*(w12*w34)))+((2.*(w14*w34))+aux120));
    aux122=(-4.*(v22*(w14*(w23*w24))))+((4.*(w13*(w24**2)))+((8.*(v22*(w13*(w24**2))))+aux121));
    aux123=((0.+8.j)*(v22*(w13*(w14*w24))))+(((0.+-2.j)*(v24*(w23*w24)))+((-2.*(w14*(w23*w24)))+aux122));
    aux124=(-8.*(v22*(v34*(w12*w24))))+((4.*(v24*(w13*w24)))+(((0.+4.j)*(w13*(w14*w24)))+aux123));
    aux125=((0.+-4.j)*(v34*(w11*w24)))+(((0.+-8.j)*(v22*(v34*(w11*w24))))+((-4.*(v34*(w12*w24)))+aux124));
    aux126=((0.+-4.j)*(v22*((w14**2)*w23)))+(((0.+-2.j)*(v34*w24))+(((0.+-4.j)*(v22*(v34*w24)))+aux125));
    aux127=(4.*(v22*(v44*(w12*w23))))+((2.*(v24*(w14*w23)))+(((0.+-2.j)*((w14**2)*w23))+aux126));
    aux128=((0.+4.j)*(v22*(v44*(w11*w23))))+((-4.*((v24**2)*(w12*w23)))+((2.*(v44*(w12*w23)))+aux127));
    aux129=((0.+2.j)*(v22*(v44*w23)))+(((0.+-4.j)*((v24**2)*(w11*w23)))+(((0.+2.j)*(v44*(w11*w23)))+aux128));
    aux130=(8.*(v22*(v34*(w14*w22))))+(((0.+-2.j)*((v24**2)*w23))+(((0.+1.j)*(v44*w23))+aux129));
    aux131=(-4.*(v44*(w13*w22)))+((-8.*(v22*(v44*(w13*w22))))+((4.*(v34*(w14*w22)))+aux130));
    aux132=((0.+4.j)*(v24*(w13*w14)))+(((0.+4.j)*(v24*(v34*w22)))+((8.*((v24**2)*(w13*w22)))+aux131));
    aux133=(4.*(v22*(v34*w14)))+(((0.+4.j)*(v34*(w12*w14)))+(((0.+8.j)*(v22*(v34*(w12*w14))))+aux132));
    aux134=((0.+-4.j)*(v44*(w12*w13)))+(((0.+-8.j)*(v22*(v44*(w12*w13))))+((2.*(v34*w14))+aux133));
    aux135=(-2.*(v44*w13))+((-4.*(v22*(v44*w13)))+(((0.+8.j)*((v24**2)*(w12*w13)))+aux134));
    aux136=((0.+-4.j)*(v24*(v34*w11)))+((-8.*(v24*(v34*w12)))+((4.*((v24**2)*w13))+aux135));
    aux137=(((4.*(w13**2))+(((0.+-16.j)*(v12*(w13**2)))+aux87))*w44)+((4.*((v13**2)*aux94))+(-4.*(v13*aux136)));
    aux138=(32.*(v11*(v22*(w11*(w22*(w34**2))))))+((4.*(v14*(aux62-(w14*(w23**2)))))+aux137);
    aux139=(-32.*((v12**2)*(w11*(w22*(w34**2)))))+((16.*(v22*(w11*(w22*(w34**2)))))+aux138);
    aux140=(16.*(v11*(v22*(w22*(w34**2)))))+((8.*(w11*(w22*(w34**2))))+((16.*(v11*(w11*(w22*(w34**2)))))+aux139));
    aux141=((0.+16.j)*(v12*(w22*(w34**2))))+((-16.*((v12**2)*(w22*(w34**2))))+aux140);
    aux142=(-32.*(v11*(v22*((w12**2)*(w34**2)))))+((4.*(w22*(w34**2)))+((16.*(v11*(w22*(w34**2))))+aux141));
    aux143=(32.*((v12**2)*((w12**2)*(w34**2))))+((-16.*(v22*((w12**2)*(w34**2))))+aux142);
    aux144=((0.+-16.j)*(v22*(w12*(w34**2))))+((-8.*((w12**2)*(w34**2)))+((-16.*(v11*((w12**2)*(w34**2))))+aux143));
    aux145=(16.*(v11*(v22*(w11*(w34**2)))))+(((0.+16.j)*(v11*(w12*(w34**2))))+((-32.*(v12*(w12*(w34**2))))+aux144));
    aux146=((0.+-16.j)*(v12*(w11*(w34**2))))+((-16.*((v12**2)*(w11*(w34**2))))+((16.*(v22*(w11*(w34**2))))+aux145));
    aux147=(4.*(v22*(w34**2)))+((8.*(v11*(v22*(w34**2))))+((4.*(w11*(w34**2)))+aux146));
    aux148=(-32.*(v11*(v22*(w11*(w23*(w24*w34))))))+((2.*(w34**2))+((4.*(v11*(w34**2)))+((-8.*((v12**2)*(w34**2)))+aux147)));
    aux149=(32.*((v12**2)*(w11*(w23*(w24*w34)))))+((-16.*(v22*(w11*(w23*(w24*w34)))))+aux148);
    aux150=(-8.*(w11*(w23*(w24*w34))))+((-16.*(v11*(w11*(w23*(w24*w34)))))+aux149);
    aux151=(16.*((v12**2)*(w23*(w24*w34))))+((-16.*(v11*(v22*(w23*(w24*w34)))))+aux150);
    aux152=(-16.*(v11*(w23*(w24*w34))))+(((0.+-16.j)*(v12*(w23*(w24*w34))))+aux151);
    aux153=(32.*(v22*(w12*(w13*(w24*w34)))))+((64.*(v11*(v22*(w12*(w13*(w24*w34))))))+((-4.*(w23*(w24*w34)))+aux152));
    aux154=(32.*(v11*(w12*(w13*(w24*w34)))))+((-64.*((v12**2)*(w12*(w13*(w24*w34)))))+aux153);
    aux155=(32.*(v12*(w13*(w24*w34))))+(((0.+16.j)*(v22*(w13*(w24*w34))))+((16.*(w12*(w13*(w24*w34))))+aux154));
    aux156=(-32.*(v12*(v23*(w12*(w24*w34)))))+(((0.+-16.j)*(v11*(w13*(w24*w34))))+aux155);
    aux157=((0.+16.j)*(v23*(w12*(w24*w34))))+(((0.+32.j)*(v11*(v23*(w12*(w24*w34)))))+aux156);
    aux158=(-16.*(v22*(v23*(w11*(w24*w34)))))+((-32.*(v11*(v22*(v23*(w11*(w24*w34))))))+aux157);
    aux159=((0.+-32.j)*(v12*(v23*(w11*(w24*w34)))))+((32.*((v12**2)*(v23*(w11*(w24*w34)))))+aux158);
    aux160=(-24.*(v23*(w11*(w24*w34))))+((-48.*(v11*(v23*(w11*(w24*w34)))))+aux159);
    aux161=(16.*((v12**2)*(v23*(w24*w34))))+((-16.*(v11*(v22*(v23*(w24*w34)))))+aux160);
    aux162=(-32.*(v11*(v23*(w24*w34))))+(((0.+-32.j)*(v12*(v23*(w24*w34))))+aux161);
    aux163=(32.*(v11*(v22*(w12*(w14*(w23*w34))))))+((-12.*(v23*(w24*w34)))+aux162);
    aux164=(-32.*((v12**2)*(w12*(w14*(w23*w34)))))+((16.*(v22*(w12*(w14*(w23*w34)))))+aux163);
    aux165=((0.+8.j)*(v22*(w14*(w23*w34))))+((8.*(w12*(w14*(w23*w34))))+((16.*(v11*(w12*(w14*(w23*w34)))))+aux164));
    aux166=(-16.*(v12*(v24*(w12*(w23*w34)))))+(((0.+-8.j)*(v11*(w14*(w23*w34))))+((16.*(v12*(w14*(w23*w34))))+aux165));
    aux167=((0.+8.j)*(v24*(w12*(w23*w34))))+(((0.+16.j)*(v11*(v24*(w12*(w23*w34)))))+aux166);
    aux168=(-16.*(v11*(v24*(w11*(w23*w34)))))+(((0.+-16.j)*(v12*(v24*(w11*(w23*w34)))))+aux167);
    aux169=(-8.*(v11*(v24*(w23*w34))))+(((0.+-8.j)*(v12*(v24*(w23*w34))))+((-8.*(v24*(w11*(w23*w34))))+aux168));
    aux170=(-64.*(v11*(v22*(w13*(w14*(w22*w34))))))+((-4.*(v24*(w23*w34)))+aux169);
    aux171=(64.*((v12**2)*(w13*(w14*(w22*w34)))))+((-32.*(v22*(w13*(w14*(w22*w34)))))+aux170);
    aux172=(-16.*(w13*(w14*(w22*w34))))+((-32.*(v11*(w13*(w14*(w22*w34)))))+aux171);
    aux173=((0.+-32.j)*(v11*(v23*(w14*(w22*w34)))))+((32.*(v12*(v23*(w14*(w22*w34)))))+aux172);
    aux174=(32.*(v12*(v24*(w13*(w22*w34)))))+(((0.+-16.j)*(v23*(w14*(w22*w34))))+aux173);
    aux175=((0.+-16.j)*(v24*(w13*(w22*w34))))+(((0.+-32.j)*(v11*(v24*(w13*(w22*w34)))))+aux174);
    aux176=(32.*(v22*(v34*(w11*(w22*w34)))))+((64.*(v11*(v22*(v34*(w11*(w22*w34))))))+aux175);
    aux177=(32.*(v11*(v34*(w11*(w22*w34)))))+((-64.*((v12**2)*(v34*(w11*(w22*w34)))))+aux176);
    aux178=(-64.*(v11*(v23*(v24*(w11*(w22*w34))))))+((16.*(v34*(w11*(w22*w34))))+aux177);
    aux179=(32.*(v11*(v22*(v34*(w22*w34)))))+((-32.*(v23*(v24*(w11*(w22*w34)))))+aux178);
    aux180=((0.+32.j)*(v12*(v34*(w22*w34))))+((-32.*((v12**2)*(v34*(w22*w34))))+aux179);
    aux181=(-32.*(v11*(v23*(v24*(w22*w34)))))+((8.*(v34*(w22*w34)))+((32.*(v11*(v34*(w22*w34))))+aux180));
    aux182=(-32.*(v22*(w13*(w14*w34))))+((-32.*(v11*(v22*(w13*(w14*w34)))))+aux181);
    aux183=((0.+32.j)*(v12*(w13*(w14*w34))))+((32.*((v12**2)*(w13*(w14*w34))))+aux182);
    aux184=(16.*(v22*(v23*(w12*(w14*w34)))))+((32.*(v11*(v22*(v23*(w12*(w14*w34))))))+((-8.*(w13*(w14*w34)))+aux183));
    aux185=((0.+32.j)*(v12*(v23*(w12*(w14*w34)))))+((-32.*((v12**2)*(v23*(w12*(w14*w34)))))+aux184);
    aux186=((0.+8.j)*(v22*(v23*(w14*w34))))+((24.*(v23*(w12*(w14*w34))))+((48.*(v11*(v23*(w12*(w14*w34)))))+aux185));
    aux187=((0.+-24.j)*(v11*(v23*(w14*w34))))+((32.*(v12*(v23*(w14*w34))))+aux186);
    aux188=((0.+32.j)*(v12*(v24*(w12*(w13*w34)))))+(((0.+-8.j)*(v23*(w14*w34)))+aux187);
    aux189=(16.*(v12*(v24*(w13*w34))))+((16.*(v24*(w12*(w13*w34))))+((32.*(v11*(v24*(w12*(w13*w34)))))+aux188));
    aux190=((0.+-8.j)*(v24*(w13*w34)))+(((0.+-16.j)*(v11*(v24*(w13*w34))))+aux189);
    aux191=(-32.*(v22*(v34*((w12**2)*w34))))+((-64.*(v11*(v22*(v34*((w12**2)*w34)))))+aux190);
    aux192=(-32.*(v11*(v34*((w12**2)*w34))))+((64.*((v12**2)*(v34*((w12**2)*w34))))+aux191);
    aux193=(64.*(v11*(v23*(v24*((w12**2)*w34)))))+((-16.*(v34*((w12**2)*w34)))+aux192);
    aux194=((0.+-32.j)*(v22*(v34*(w12*w34))))+((32.*(v23*(v24*((w12**2)*w34))))+aux193);
    aux195=((0.+32.j)*(v11*(v34*(w12*w34))))+((-64.*(v12*(v34*(w12*w34))))+aux194);
    aux196=((0.+16.j)*(v11*(v23*(v24*(w12*w34)))))+((-16.*(v12*(v23*(v24*(w12*w34)))))+aux195);
    aux197=(32.*(v11*(v22*(v34*(w11*w34)))))+(((0.+40.j)*(v23*(v24*(w12*w34))))+aux196);
    aux198=((0.+-32.j)*(v12*(v34*(w11*w34))))+((-32.*((v12**2)*(v34*(w11*w34))))+((32.*(v22*(v34*(w11*w34))))+aux197));
    aux199=(-48.*(v11*(v23*(v24*(w11*w34)))))+(((0.+-16.j)*(v12*(v23*(v24*(w11*w34)))))+((8.*(v34*(w11*w34)))+aux198));
    aux200=(8.*(v22*(v34*w34)))+((16.*(v11*(v22*(v34*w34))))+((-40.*(v23*(v24*(w11*w34))))+aux199));
    aux201=(4.*(v34*w34))+((8.*(v11*(v34*w34)))+((-16.*((v12**2)*(v34*w34)))+aux200));
    aux202=(-24.*(v11*(v23*(v24*w34))))+(((0.+-8.j)*(v12*(v23*(v24*w34))))+aux201);
    aux203=(-4.*((v14**2)*(aux6-((1.+((-4.*(w12*((0.+-1.j)+w12)))+aux7))*w33))))+((-12.*(v23*(v24*w34)))+aux202);
    aux204=(16.*(v22*(w11*((w24**2)*w33))))+((32.*(v11*(v22*(w11*((w24**2)*w33)))))+aux203);
    aux205=(16.*(v11*(w11*((w24**2)*w33))))+((-32.*((v12**2)*(w11*((w24**2)*w33))))+aux204);
    aux206=(-16.*((v12**2)*((w24**2)*w33)))+((16.*(v11*(v22*((w24**2)*w33))))+((8.*(w11*((w24**2)*w33)))+aux205));
    aux207=(4.*((w24**2)*w33))+((16.*(v11*((w24**2)*w33)))+(((0.+16.j)*(v12*((w24**2)*w33)))+aux206));
    aux208=(-32.*(v22*(w12*(w14*(w24*w33)))))+((-64.*(v11*(v22*(w12*(w14*(w24*w33))))))+aux207);
    aux209=(-32.*(v11*(w12*(w14*(w24*w33)))))+((64.*((v12**2)*(w12*(w14*(w24*w33)))))+aux208);
    aux210=((0.+-16.j)*(v22*(w14*(w24*w33))))+((-16.*(w12*(w14*(w24*w33))))+aux209);
    aux211=((0.+16.j)*(v11*(w14*(w24*w33))))+((-32.*(v12*(w14*(w24*w33))))+aux210);
    aux212=((0.+-32.j)*(v11*(v24*(w12*(w24*w33)))))+((32.*(v12*(v24*(w12*(w24*w33)))))+aux211);
    aux213=((0.+32.j)*(v12*(v24*(w11*(w24*w33)))))+(((0.+-16.j)*(v24*(w12*(w24*w33))))+aux212);
    aux214=((0.+16.j)*(v12*(v24*(w24*w33))))+((16.*(v24*(w11*(w24*w33))))+((32.*(v11*(v24*(w11*(w24*w33)))))+aux213));
    aux215=(32.*(v11*(v22*((w14**2)*(w22*w33)))))+((8.*(v24*(w24*w33)))+((16.*(v11*(v24*(w24*w33))))+aux214));
    aux216=(-32.*((v12**2)*((w14**2)*(w22*w33))))+((16.*(v22*((w14**2)*(w22*w33))))+aux215);
    aux217=(-32.*(v12*(v24*(w14*(w22*w33)))))+((8.*((w14**2)*(w22*w33)))+((16.*(v11*((w14**2)*(w22*w33))))+aux216));
    aux218=((0.+16.j)*(v24*(w14*(w22*w33))))+(((0.+32.j)*(v11*(v24*(w14*(w22*w33)))))+aux217);
    aux219=(-16.*(v22*(v44*(w11*(w22*w33)))))+((-32.*(v11*(v22*(v44*(w11*(w22*w33))))))+aux218);
    aux220=(-16.*(v11*(v44*(w11*(w22*w33)))))+((32.*((v12**2)*(v44*(w11*(w22*w33)))))+aux219);
    aux221=(32.*(v11*((v24**2)*(w11*(w22*w33)))))+((-8.*(v44*(w11*(w22*w33))))+aux220);
    aux222=(-16.*(v11*(v22*(v44*(w22*w33)))))+((16.*((v24**2)*(w11*(w22*w33))))+aux221);
    aux223=((0.+-16.j)*(v12*(v44*(w22*w33))))+((16.*((v12**2)*(v44*(w22*w33))))+aux222);
    aux224=(16.*(v11*((v24**2)*(w22*w33))))+((-4.*(v44*(w22*w33)))+((-16.*(v11*(v44*(w22*w33))))+aux223));
    aux225=(-16.*((v12**2)*((w14**2)*w33)))+((16.*(v22*((w14**2)*w33)))+((16.*(v11*(v22*((w14**2)*w33))))+aux224));
    aux226=((0.+-32.j)*(v12*(v24*(w12*(w14*w33)))))+((4.*((w14**2)*w33))+(((0.+-16.j)*(v12*((w14**2)*w33)))+aux225));
    aux227=(-16.*(v24*(w12*(w14*w33))))+((-32.*(v11*(v24*(w12*(w14*w33)))))+aux226);
    aux228=((0.+16.j)*(v11*(v24*(w14*w33))))+((-16.*(v12*(v24*(w14*w33))))+aux227);
    aux229=(32.*(v11*(v22*(v44*((w12**2)*w33)))))+(((0.+8.j)*(v24*(w14*w33)))+aux228);
    aux230=(-32.*((v12**2)*(v44*((w12**2)*w33))))+((16.*(v22*(v44*((w12**2)*w33))))+aux229);
    aux231=(-32.*(v11*((v24**2)*((w12**2)*w33))))+((8.*(v44*((w12**2)*w33)))+((16.*(v11*(v44*((w12**2)*w33))))+aux230));
    aux232=((0.+16.j)*(v22*(v44*(w12*w33))))+((-16.*((v24**2)*((w12**2)*w33)))+aux231);
    aux233=((0.+-16.j)*(v11*(v44*(w12*w33))))+((32.*(v12*(v44*(w12*w33))))+aux232);
    aux234=(-16.*(v11*(v22*(v44*(w11*w33)))))+(((0.+-16.j)*((v24**2)*(w12*w33)))+aux233);
    aux235=((0.+16.j)*(v12*(v44*(w11*w33))))+((16.*((v12**2)*(v44*(w11*w33))))+((-16.*(v22*(v44*(w11*w33))))+aux234));
    aux236=(16.*((v24**2)*(w11*w33)))+((16.*(v11*((v24**2)*(w11*w33))))+((-4.*(v44*(w11*w33)))+aux235));
    aux237=(8.*((v12**2)*(v44*w33)))+((-4.*(v22*(v44*w33)))+((-8.*(v11*(v22*(v44*w33))))+aux236));
    aux238=(8.*(v11*((v24**2)*w33)))+((-2.*(v44*w33))+((-4.*(v11*(v44*w33)))+aux237));
    aux239=(-16.*(v22*((w13**2)*(w24**2))))+((-32.*(v11*(v22*((w13**2)*(w24**2)))))+((4.*((v24**2)*w33))+aux238));
    aux240=(-16.*(v11*((w13**2)*(w24**2))))+((32.*((v12**2)*((w13**2)*(w24**2))))+aux239);
    aux241=((0.+-32.j)*(v11*(v23*(w13*(w24**2)))))+((32.*(v12*(v23*(w13*(w24**2)))))+((-8.*((w13**2)*(w24**2)))+aux240));
    aux242=(32.*(v11*(v22*(v33*(w11*(w24**2))))))+(((0.+-16.j)*(v23*(w13*(w24**2))))+aux241);
    aux243=(-32.*((v12**2)*(v33*(w11*(w24**2)))))+((16.*(v22*(v33*(w11*(w24**2)))))+aux242);
    aux244=(-32.*(v11*((v23**2)*(w11*(w24**2)))))+((8.*(v33*(w11*(w24**2))))+((16.*(v11*(v33*(w11*(w24**2)))))+aux243));
    aux245=(16.*(v11*(v22*(v33*(w24**2)))))+((-16.*((v23**2)*(w11*(w24**2))))+aux244);
    aux246=((0.+16.j)*(v12*(v33*(w24**2))))+((-16.*((v12**2)*(v33*(w24**2))))+aux245);
    aux247=(-16.*(v11*((v23**2)*(w24**2))))+((4.*(v33*(w24**2)))+((16.*(v11*(v33*(w24**2))))+aux246));
    aux248=(16.*(v22*(w13*(w14*(w23*w24)))))+((32.*(v11*(v22*(w13*(w14*(w23*w24))))))+aux247);
    aux249=(16.*(v11*(w13*(w14*(w23*w24)))))+((-32.*((v12**2)*(w13*(w14*(w23*w24)))))+aux248);
    aux250=((0.+16.j)*(v11*(v23*(w14*(w23*w24)))))+((-16.*(v12*(v23*(w14*(w23*w24)))))+((8.*(w13*(w14*(w23*w24))))+aux249));
    aux251=(-16.*(v12*(v24*(w13*(w23*w24)))))+(((0.+8.j)*(v23*(w14*(w23*w24))))+aux250);
    aux252=((0.+8.j)*(v24*(w13*(w23*w24))))+(((0.+16.j)*(v11*(v24*(w13*(w23*w24)))))+aux251);
    aux253=(-16.*(v22*(v34*(w11*(w23*w24)))))+((-32.*(v11*(v22*(v34*(w11*(w23*w24))))))+aux252);
    aux254=(-16.*(v11*(v34*(w11*(w23*w24)))))+((32.*((v12**2)*(v34*(w11*(w23*w24)))))+aux253);
    aux255=(32.*(v11*(v23*(v24*(w11*(w23*w24))))))+((-8.*(v34*(w11*(w23*w24))))+aux254);
    aux256=(-16.*(v11*(v22*(v34*(w23*w24)))))+((16.*(v23*(v24*(w11*(w23*w24)))))+aux255);
    aux257=((0.+-16.j)*(v12*(v34*(w23*w24))))+((16.*((v12**2)*(v34*(w23*w24))))+aux256);
    aux258=(16.*(v11*(v23*(v24*(w23*w24)))))+((-4.*(v34*(w23*w24)))+((-16.*(v11*(v34*(w23*w24))))+aux257));
    aux259=(16.*(v22*(v23*(w13*(w14*w24)))))+((32.*(v11*(v22*(v23*(w13*(w14*w24))))))+aux258);
    aux260=((0.+32.j)*(v12*(v23*(w13*(w14*w24)))))+((-32.*((v12**2)*(v23*(w13*(w14*w24)))))+aux259);
    aux261=(-64.*(v11*(v22*(v33*(w12*(w14*w24))))))+((24.*(v23*(w13*(w14*w24))))+((48.*(v11*(v23*(w13*(w14*w24)))))+aux260));
    aux262=(64.*((v12**2)*(v33*(w12*(w14*w24)))))+((-32.*(v22*(v33*(w12*(w14*w24)))))+aux261);
    aux263=(-16.*(v33*(w12*(w14*w24))))+((-32.*(v11*(v33*(w12*(w14*w24)))))+aux262);
    aux264=(32.*((v23**2)*(w12*(w14*w24))))+((64.*(v11*((v23**2)*(w12*(w14*w24)))))+aux263);
    aux265=(-32.*(v12*(v33*(w14*w24))))+(((0.+-16.j)*(v22*(v33*(w14*w24))))+aux264);
    aux266=(-16.*(v12*((v23**2)*(w14*w24))))+(((0.+16.j)*(v11*(v33*(w14*w24))))+aux265);
    aux267=((0.+24.j)*((v23**2)*(w14*w24)))+(((0.+16.j)*(v11*((v23**2)*(w14*w24))))+aux266);
    aux268=(-32.*(v11*(v24*((w13**2)*w24))))+(((0.+-32.j)*(v12*(v24*((w13**2)*w24))))+aux267);
    aux269=(64.*(v11*(v22*(v34*(w12*(w13*w24))))))+((-16.*(v24*((w13**2)*w24)))+aux268);
    aux270=(-64.*((v12**2)*(v34*(w12*(w13*w24)))))+((32.*(v22*(v34*(w12*(w13*w24)))))+aux269);
    aux271=(-64.*(v11*(v23*(v24*(w12*(w13*w24))))))+((16.*(v34*(w12*(w13*w24))))+((32.*(v11*(v34*(w12*(w13*w24)))))+aux270));
    aux272=((0.+16.j)*(v22*(v34*(w13*w24))))+((-32.*(v23*(v24*(w12*(w13*w24)))))+aux271);
    aux273=((0.+-16.j)*(v11*(v34*(w13*w24))))+((32.*(v12*(v34*(w13*w24))))+aux272);
    aux274=((0.+16.j)*(v11*(v23*(v24*(w13*w24)))))+((-16.*(v12*(v23*(v24*(w13*w24)))))+aux273);
    aux275=(-32.*(v12*(v23*(v34*(w12*w24)))))+(((0.+-8.j)*(v23*(v24*(w13*w24))))+aux274);
    aux276=((0.+16.j)*(v23*(v34*(w12*w24))))+(((0.+32.j)*(v11*(v23*(v34*(w12*w24)))))+aux275);
    aux277=((0.+-32.j)*(v11*(v24*(v33*(w12*w24)))))+((32.*(v12*(v24*(v33*(w12*w24)))))+aux276);
    aux278=(-32.*(v11*(v22*(v23*(v34*(w11*w24))))))+(((0.+-16.j)*(v24*(v33*(w12*w24))))+aux277);
    aux279=(32.*((v12**2)*(v23*(v34*(w11*w24)))))+((-16.*(v22*(v23*(v34*(w11*w24)))))+aux278);
    aux280=(-48.*(v11*(v23*(v34*(w11*w24)))))+(((0.+-32.j)*(v12*(v23*(v34*(w11*w24)))))+aux279);
    aux281=((0.+32.j)*(v12*(v24*(v33*(w11*w24)))))+((-24.*(v23*(v34*(w11*w24))))+aux280);
    aux282=(32.*(v11*((v23**2)*(v24*(w11*w24)))))+((16.*(v24*(v33*(w11*w24))))+((32.*(v11*(v24*(v33*(w11*w24)))))+aux281));
    aux283=(-16.*(v11*(v22*(v23*(v34*w24)))))+((16.*((v23**2)*(v24*(w11*w24))))+aux282);
    aux284=((0.+-32.j)*(v12*(v23*(v34*w24))))+((16.*((v12**2)*(v23*(v34*w24))))+aux283);
    aux285=((0.+16.j)*(v12*(v24*(v33*w24))))+((-12.*(v23*(v34*w24)))+((-32.*(v11*(v23*(v34*w24))))+aux284));
    aux286=(16.*(v11*((v23**2)*(v24*w24))))+((8.*(v24*(v33*w24)))+((16.*(v11*(v24*(v33*w24))))+aux285));
    aux287=(-4.*(v22*((w14**2)*(w23**2))))+((-8.*(v11*(v22*((w14**2)*(w23**2)))))+aux286);
    aux288=(-4.*(v11*((w14**2)*(w23**2))))+((8.*((v12**2)*((w14**2)*(w23**2))))+aux287);
    aux289=((0.+-8.j)*(v11*(v24*(w14*(w23**2)))))+((8.*(v12*(v24*(w14*(w23**2)))))+((-2.*((w14**2)*(w23**2)))+aux288));
    aux290=(8.*(v11*(v22*(v44*(w11*(w23**2))))))+(((0.+-4.j)*(v24*(w14*(w23**2))))+aux289);
    aux291=(-8.*((v12**2)*(v44*(w11*(w23**2)))))+((4.*(v22*(v44*(w11*(w23**2)))))+aux290);
    aux292=(-8.*(v11*((v24**2)*(w11*(w23**2)))))+((2.*(v44*(w11*(w23**2))))+((4.*(v11*(v44*(w11*(w23**2)))))+aux291));
    aux293=(4.*(v11*(v22*(v44*(w23**2)))))+((-4.*((v24**2)*(w11*(w23**2))))+aux292);
    aux294=((0.+4.j)*(v12*(v44*(w23**2))))+((-4.*((v12**2)*(v44*(w23**2))))+aux293);
    aux295=(-4.*(v11*((v24**2)*(w23**2))))+((v44*(w23**2))+((4.*(v11*(v44*(w23**2))))+aux294));
    aux296=(-8.*(v22*(v23*((w14**2)*w23))))+((-16.*(v11*(v22*(v23*((w14**2)*w23)))))+aux295);
    aux297=((0.+-16.j)*(v12*(v23*((w14**2)*w23))))+((16.*((v12**2)*(v23*((w14**2)*w23))))+aux296);
    aux298=((0.+16.j)*(v12*(v24*(w13*(w14*w23)))))+((-12.*(v23*((w14**2)*w23)))+((-24.*(v11*(v23*((w14**2)*w23))))+aux297));
    aux299=(32.*(v11*(v22*(v34*(w12*(w14*w23))))))+((8.*(v24*(w13*(w14*w23))))+((16.*(v11*(v24*(w13*(w14*w23)))))+aux298));
    aux300=(-32.*((v12**2)*(v34*(w12*(w14*w23)))))+((16.*(v22*(v34*(w12*(w14*w23)))))+aux299);
    aux301=(-32.*(v11*(v23*(v24*(w12*(w14*w23))))))+((8.*(v34*(w12*(w14*w23))))+((16.*(v11*(v34*(w12*(w14*w23)))))+aux300));
    aux302=((0.+8.j)*(v22*(v34*(w14*w23))))+((-16.*(v23*(v24*(w12*(w14*w23)))))+aux301);
    aux303=(16.*(v12*(v23*(v24*(w14*w23)))))+(((0.+-8.j)*(v11*(v34*(w14*w23))))+((16.*(v12*(v34*(w14*w23))))+aux302));
    aux304=((0.+-16.j)*(v23*(v24*(w14*w23))))+(((0.+-16.j)*(v11*(v23*(v24*(w14*w23)))))+aux303);
    aux305=(-16.*(v22*(v44*(w12*(w13*w23)))))+((-32.*(v11*(v22*(v44*(w12*(w13*w23))))))+aux304);
    aux306=(-16.*(v11*(v44*(w12*(w13*w23)))))+((32.*((v12**2)*(v44*(w12*(w13*w23)))))+aux305);
    aux307=(32.*(v11*((v24**2)*(w12*(w13*w23)))))+((-8.*(v44*(w12*(w13*w23))))+aux306);
    aux308=((0.+-8.j)*(v22*(v44*(w13*w23))))+((16.*((v24**2)*(w12*(w13*w23))))+aux307);
    aux309=((0.+8.j)*((v24**2)*(w13*w23)))+(((0.+8.j)*(v11*(v44*(w13*w23))))+((-16.*(v12*(v44*(w13*w23))))+aux308));
    aux310=((0.+-16.j)*(v11*(v23*(v44*(w12*w23)))))+((16.*(v12*(v23*(v44*(w12*w23)))))+aux309);
    aux311=(-16.*(v12*(v24*(v34*(w12*w23)))))+(((0.+-8.j)*(v23*(v44*(w12*w23))))+aux310);
    aux312=((0.+8.j)*(v24*(v34*(w12*w23))))+(((0.+16.j)*(v11*(v24*(v34*(w12*w23)))))+aux311);
    aux313=(8.*(v22*(v23*(v44*(w11*w23)))))+((16.*(v11*(v22*(v23*(v44*(w11*w23))))))+aux312);
    aux314=((0.+16.j)*(v12*(v23*(v44*(w11*w23)))))+((-16.*((v12**2)*(v23*(v44*(w11*w23)))))+aux313);
    aux315=((0.+-16.j)*(v12*(v24*(v34*(w11*w23)))))+((12.*(v23*(v44*(w11*w23))))+((24.*(v11*(v23*(v44*(w11*w23)))))+aux314));
    aux316=(-8.*(v24*(v34*(w11*w23))))+((-16.*(v11*(v24*(v34*(w11*w23)))))+aux315);
    aux317=(-8.*(v23*((v24**2)*(w11*w23))))+((-16.*(v11*(v23*((v24**2)*(w11*w23)))))+aux316);
    aux318=(-8.*((v12**2)*(v23*(v44*w23))))+((8.*(v11*(v22*(v23*(v44*w23)))))+aux317);
    aux319=(6.*(v23*(v44*w23)))+((16.*(v11*(v23*(v44*w23))))+(((0.+16.j)*(v12*(v23*(v44*w23))))+aux318));
    aux320=(-4.*(v24*(v34*w23)))+((-8.*(v11*(v24*(v34*w23))))+(((0.+-8.j)*(v12*(v24*(v34*w23))))+aux319));
    aux321=(32.*(v11*(v22*(v33*((w14**2)*w22)))))+((-8.*(v11*(v23*((v24**2)*w23))))+aux320);
    aux322=(-32.*((v12**2)*(v33*((w14**2)*w22))))+((16.*(v22*(v33*((w14**2)*w22))))+aux321);
    aux323=(-32.*(v11*((v23**2)*((w14**2)*w22))))+((8.*(v33*((w14**2)*w22)))+((16.*(v11*(v33*((w14**2)*w22))))+aux322));
    aux324=(-64.*(v11*(v22*(v34*(w13*(w14*w22))))))+((-16.*((v23**2)*((w14**2)*w22)))+aux323);
    aux325=(64.*((v12**2)*(v34*(w13*(w14*w22)))))+((-32.*(v22*(v34*(w13*(w14*w22)))))+aux324);
    aux326=(-16.*(v34*(w13*(w14*w22))))+((-32.*(v11*(v34*(w13*(w14*w22)))))+aux325);
    aux327=(32.*(v23*(v24*(w13*(w14*w22)))))+((64.*(v11*(v23*(v24*(w13*(w14*w22))))))+aux326);
    aux328=((0.+-32.j)*(v11*(v23*(v34*(w14*w22)))))+((32.*(v12*(v23*(v34*(w14*w22)))))+aux327);
    aux329=(-32.*(v12*(v24*(v33*(w14*w22)))))+(((0.+-16.j)*(v23*(v34*(w14*w22))))+aux328);
    aux330=((0.+16.j)*(v24*(v33*(w14*w22))))+(((0.+32.j)*(v11*(v24*(v33*(w14*w22)))))+aux329);
    aux331=(16.*(v22*(v44*((w13**2)*w22))))+((32.*(v11*(v22*(v44*((w13**2)*w22)))))+aux330);
    aux332=(16.*(v11*(v44*((w13**2)*w22))))+((-32.*((v12**2)*(v44*((w13**2)*w22))))+aux331);
    aux333=(-32.*(v11*((v24**2)*((w13**2)*w22))))+((8.*(v44*((w13**2)*w22)))+aux332);
    aux334=(-32.*(v12*(v23*(v44*(w13*w22)))))+((-16.*((v24**2)*((w13**2)*w22)))+aux333);
    aux335=((0.+16.j)*(v23*(v44*(w13*w22))))+(((0.+32.j)*(v11*(v23*(v44*(w13*w22)))))+aux334);
    aux336=((0.+-32.j)*(v11*(v24*(v34*(w13*w22)))))+((32.*(v12*(v24*(v34*(w13*w22)))))+aux335);
    aux337=(-32.*(v11*(v22*(v33*(v44*(w11*w22))))))+(((0.+-16.j)*(v24*(v34*(w13*w22))))+aux336);
    aux338=(32.*((v12**2)*(v33*(v44*(w11*w22)))))+((-16.*(v22*(v33*(v44*(w11*w22)))))+aux337);
    aux339=(-8.*(v33*(v44*(w11*w22))))+((-16.*(v11*(v33*(v44*(w11*w22)))))+aux338);
    aux340=(16.*((v23**2)*(v44*(w11*w22))))+((32.*(v11*((v23**2)*(v44*(w11*w22)))))+aux339);
    aux341=(16.*(v22*((v34**2)*(w11*w22))))+((32.*(v11*(v22*((v34**2)*(w11*w22)))))+aux340);
    aux342=(16.*(v11*((v34**2)*(w11*w22))))+((-32.*((v12**2)*((v34**2)*(w11*w22))))+aux341);
    aux343=(-64.*(v11*(v23*(v24*(v34*(w11*w22))))))+((8.*((v34**2)*(w11*w22)))+aux342);
    aux344=(32.*(v11*((v24**2)*(v33*(w11*w22)))))+((-32.*(v23*(v24*(v34*(w11*w22)))))+aux343);
    aux345=(-16.*(v11*(v22*(v33*(v44*w22)))))+((16.*((v24**2)*(v33*(w11*w22))))+aux344);
    aux346=((0.+-16.j)*(v12*(v33*(v44*w22))))+((16.*((v12**2)*(v33*(v44*w22))))+aux345);
    aux347=(16.*(v11*((v23**2)*(v44*w22))))+((-4.*(v33*(v44*w22)))+((-16.*(v11*(v33*(v44*w22))))+aux346));
    aux348=(-16.*((v12**2)*((v34**2)*w22)))+((16.*(v11*(v22*((v34**2)*w22))))+aux347);
    aux349=(4.*((v34**2)*w22))+((16.*(v11*((v34**2)*w22)))+(((0.+16.j)*(v12*((v34**2)*w22)))+aux348));
    aux350=(16.*(v11*((v24**2)*(v33*w22))))+((-32.*(v11*(v23*(v24*(v34*w22)))))+aux349);
    aux351=(-16.*((v12**2)*(v33*(w14**2))))+((16.*(v22*(v33*(w14**2))))+((16.*(v11*(v22*(v33*(w14**2)))))+aux350));
    aux352=(-8.*(v11*(v22*((v23**2)*(w14**2)))))+((4.*(v33*(w14**2)))+(((0.+-16.j)*(v12*(v33*(w14**2))))+aux351));
    aux353=(8.*((v12**2)*((v23**2)*(w14**2))))+((-4.*(v22*((v23**2)*(w14**2))))+aux352);
    aux354=(-36.*(v11*((v23**2)*(w14**2))))+(((0.+-16.j)*(v12*((v23**2)*(w14**2))))+aux353);
    aux355=(-32.*(v22*(v34*(w13*w14))))+((-32.*(v11*(v22*(v34*(w13*w14)))))+((-26.*((v23**2)*(w14**2)))+aux354));
    aux356=((0.+32.j)*(v12*(v34*(w13*w14))))+((32.*((v12**2)*(v34*(w13*w14))))+aux355);
    aux357=(48.*(v11*(v23*(v24*(w13*w14)))))+(((0.+16.j)*(v12*(v23*(v24*(w13*w14)))))+((-8.*(v34*(w13*w14)))+aux356));
    aux358=(32.*(v11*(v22*(v23*(v34*(w12*w14))))))+((40.*(v23*(v24*(w13*w14))))+aux357);
    aux359=(-32.*((v12**2)*(v23*(v34*(w12*w14)))))+((16.*(v22*(v23*(v34*(w12*w14)))))+aux358);
    aux360=(48.*(v11*(v23*(v34*(w12*w14)))))+(((0.+32.j)*(v12*(v23*(v34*(w12*w14)))))+aux359);
    aux361=((0.+-32.j)*(v12*(v24*(v33*(w12*w14)))))+((24.*(v23*(v34*(w12*w14))))+aux360);
    aux362=(-16.*(v24*(v33*(w12*w14))))+((-32.*(v11*(v24*(v33*(w12*w14)))))+aux361);
    aux363=(-16.*((v23**2)*(v24*(w12*w14))))+((-32.*(v11*((v23**2)*(v24*(w12*w14)))))+aux362);
    aux364=((0.+-24.j)*(v11*(v23*(v34*w14))))+((32.*(v12*(v23*(v34*w14))))+(((0.+8.j)*(v22*(v23*(v34*w14))))+aux363));
    aux365=((0.+16.j)*(v11*(v24*(v33*w14))))+((-16.*(v12*(v24*(v33*w14))))+(((0.+-8.j)*(v23*(v34*w14)))+aux364));
    aux366=((0.+-8.j)*(v11*((v23**2)*(v24*w14))))+((8.*(v12*((v23**2)*(v24*w14))))+(((0.+8.j)*(v24*(v33*w14)))+aux365));
    aux367=(16.*(v11*(v22*(v44*(w13**2)))))+(((0.+-12.j)*((v23**2)*(v24*w14)))+aux366);
    aux368=((0.+-16.j)*(v12*(v44*(w13**2))))+((-16.*((v12**2)*(v44*(w13**2))))+((16.*(v22*(v44*(w13**2))))+aux367));
    aux369=(-16.*((v24**2)*(w13**2)))+((-16.*(v11*((v24**2)*(w13**2))))+((4.*(v44*(w13**2)))+aux368));
    aux370=(-16.*(v22*(v23*(v44*(w12*w13)))))+((-32.*(v11*(v22*(v23*(v44*(w12*w13))))))+aux369);
    aux371=((0.+-32.j)*(v12*(v23*(v44*(w12*w13)))))+((32.*((v12**2)*(v23*(v44*(w12*w13)))))+aux370);
    aux372=(-24.*(v23*(v44*(w12*w13))))+((-48.*(v11*(v23*(v44*(w12*w13)))))+aux371);
    aux373=(32.*(v11*(v24*(v34*(w12*w13)))))+(((0.+32.j)*(v12*(v24*(v34*(w12*w13)))))+aux372);
    aux374=(32.*(v11*(v23*((v24**2)*(w12*w13)))))+((16.*(v24*(v34*(w12*w13))))+aux373);
    aux375=((0.+-8.j)*(v22*(v23*(v44*w13))))+((16.*(v23*((v24**2)*(w12*w13))))+aux374);
    aux376=((0.+24.j)*(v11*(v23*(v44*w13))))+((-32.*(v12*(v23*(v44*w13))))+aux375);
    aux377=((0.+-16.j)*(v11*(v24*(v34*w13))))+((16.*(v12*(v24*(v34*w13))))+(((0.+8.j)*(v23*(v44*w13)))+aux376));
    aux378=(32.*(v11*(v22*(v33*(v44*(w12**2))))))+(((0.+8.j)*(v23*((v24**2)*w13)))+(((0.+-8.j)*(v24*(v34*w13)))+aux377));
    aux379=(-32.*((v12**2)*(v33*(v44*(w12**2)))))+((16.*(v22*(v33*(v44*(w12**2)))))+aux378);
    aux380=(-32.*(v11*((v23**2)*(v44*(w12**2)))))+((8.*(v33*(v44*(w12**2))))+((16.*(v11*(v33*(v44*(w12**2)))))+aux379));
    aux381=(-32.*(v11*(v22*((v34**2)*(w12**2)))))+((-16.*((v23**2)*(v44*(w12**2))))+aux380);
    aux382=(32.*((v12**2)*((v34**2)*(w12**2))))+((-16.*(v22*((v34**2)*(w12**2))))+aux381);
    aux383=(64.*(v11*(v23*(v24*(v34*(w12**2))))))+((-8.*((v34**2)*(w12**2)))+((-16.*(v11*((v34**2)*(w12**2))))+aux382));
    aux384=(-32.*(v11*((v24**2)*(v33*(w12**2)))))+((32.*(v23*(v24*(v34*(w12**2)))))+aux383);
    aux385=((0.+16.j)*(v22*(v33*(v44*w12))))+((-16.*((v24**2)*(v33*(w12**2))))+aux384);
    aux386=((0.+-16.j)*(v11*(v33*(v44*w12))))+((32.*(v12*(v33*(v44*w12))))+aux385);
    aux387=((0.+-16.j)*(v11*((v23**2)*(v44*w12))))+((16.*(v12*((v23**2)*(v44*w12))))+aux386);
    aux388=((0.+-16.j)*(v22*((v34**2)*w12)))+(((0.+-24.j)*((v23**2)*(v44*w12)))+aux387);
    aux389=(-16.*(v12*(v23*(v24*(v34*w12)))))+(((0.+16.j)*(v11*((v34**2)*w12)))+((-32.*(v12*((v34**2)*w12)))+aux388));
    aux390=((0.+40.j)*(v23*(v24*(v34*w12))))+(((0.+16.j)*(v11*(v23*(v24*(v34*w12)))))+aux389);
    aux391=(-16.*(v11*(v22*(v33*(v44*w11)))))+(((0.+-16.j)*((v24**2)*(v33*w12)))+aux390);
    aux392=((0.+16.j)*(v12*(v33*(v44*w11))))+((16.*((v12**2)*(v33*(v44*w11))))+((-16.*(v22*(v33*(v44*w11))))+aux391));
    aux393=(4.*(v22*((v23**2)*(v44*w11))))+((8.*(v11*(v22*((v23**2)*(v44*w11)))))+((-4.*(v33*(v44*w11)))+aux392));
    aux394=((0.+16.j)*(v12*((v23**2)*(v44*w11))))+((-8.*((v12**2)*((v23**2)*(v44*w11))))+aux393);
    aux395=(16.*(v11*(v22*((v34**2)*w11))))+((26.*((v23**2)*(v44*w11)))+((36.*(v11*((v23**2)*(v44*w11))))+aux394));
    aux396=((0.+-16.j)*(v12*((v34**2)*w11)))+((-16.*((v12**2)*((v34**2)*w11)))+((16.*(v22*((v34**2)*w11)))+aux395));
    aux397=(-48.*(v11*(v23*(v24*(v34*w11)))))+(((0.+-16.j)*(v12*(v23*(v24*(v34*w11)))))+((4.*((v34**2)*w11))+aux396));
    aux398=(16.*((v24**2)*(v33*w11)))+((16.*(v11*((v24**2)*(v33*w11))))+((-40.*(v23*(v24*(v34*w11))))+aux397));
    aux399=(-4.*((v23**2)*((v24**2)*w11)))+((-8.*(v11*((v23**2)*((v24**2)*w11))))+aux398);
    aux400=(8.*((v12**2)*(v33*v44)))+((-4.*(v22*(v33*v44)))+((-8.*(v11*(v22*(v33*v44))))+aux399));
    aux401=(4.*(v11*(v22*((v23**2)*v44))))+((-2.*(v33*v44))+((-4.*(v11*(v33*v44)))+aux400));
    aux402=((0.+12.j)*(v12*((v23**2)*v44)))+((-4.*((v12**2)*((v23**2)*v44)))+aux401);
    aux403=(8.*(v11*(v22*(v34**2))))+((9.*((v23**2)*v44))+((20.*(v11*((v23**2)*v44)))+aux402));
    aux404=(4.*(v11*(v34**2)))+((-8.*((v12**2)*(v34**2)))+((4.*(v22*(v34**2)))+aux403));
    aux405=(-24.*(v11*(v23*(v24*v34))))+(((0.+-8.j)*(v12*(v23*(v24*v34))))+((2.*(v34**2))+aux404));
    aux406=(4.*((v24**2)*v33))+((8.*(v11*((v24**2)*v33)))+((-12.*(v23*(v24*v34)))+aux405));
    aux407=(4.*((1.+w11)*w22))+(v22*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux408=(v24*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))))+(w24+((2.*(w11*w24))+((0.+-2.j)*(w12*w24))));
    aux409=(w14*(-1.+(((0.+-2.j)*w12)+(-2.*w22))))+(((0.+1.j)+(((0.+2.j)*w11)+(2.*w12)))*w24);
    aux410=(2.*(v12*((w14*((0.+1.j)+((-2.*w12)+((0.+2.j)*w22))))+aux408)))+((1.+(2.*v22))*aux409);
    aux411=(2.*(w12*w14))+(((0.+-1.j)*(w14*(1.+(2.*w22))))+((-1.+((-2.*w11)+((0.+2.j)*w12)))*w24));
    aux412=(-2.*(v22*(w11*(1.+w22))))+((v12**2)*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))));
    aux413=(2.*(v22*(w12*((0.+1.j)+w12))))+((v12*(((0.+2.j)*w11)+((4.*w12)+((0.+-2.j)*w22))))+aux412);
    aux414=(4.*((1.+w11)*w22))+(v22*(2.+((4.*w11)+((-8.*(w12**2))+((4.*w22)+(8.*(w11*w22)))))));
    aux415=(-2.*(w12**2))+((-4.*(v22*(w12**2)))+(2.*((1.+(v22+(w11+(2.*(v22*w11)))))*w22)));
    aux416=(-4.*((1.+(v22+(w11+(2.*(v22*w11)))))*(w24**2)))+(w44+(2.*((v22+((2.*(v22*w11))+(((0.+2.j)*w12)+aux415)))*w44)));
    aux417=(v44*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux414)))+((4.*(((0.+-1.j)+((2.+(4.*v22))*w12))*(w14*w24)))+aux416);
    aux418=((v22+(w11+(w22+(-2.*(((w12**2)+aux413)-(w11*w22))))))*w44)+(v11*((-4.*((w14**2)*(v22+(w22+(2.*(v22*w22))))))+aux417));
    aux419=(-4.*(v22*(w11*(w24**2))))+((2.*((1.+((2.*v11)+((0.+2.j)*v12)))*(v24*aux411)))+aux418);
    aux420=(4.*((v12**2)*(w24**2)))+((-2.*(w11*(w24**2)))+((8.*((v12**2)*(w11*(w24**2))))+aux419));
    aux421=(-16.*((v12**2)*(w12*(w14*w24))))+((8.*(v22*(w12*(w14*w24))))+(((0.+-4.j)*(v12*(w24**2)))+aux420));
    aux422=(8.*(v12*(w14*w24)))+(((0.+4.j)*(v22*(w14*w24)))+((4.*(w12*(w14*w24)))+aux421));
    aux423=(-2.*((w14**2)*w22))+((8.*((v12**2)*((w14**2)*w22)))+((-4.*(v22*((w14**2)*w22)))+aux422));
    aux424=(2.*(v44*(w11*w22)))+((-8.*((v12**2)*(v44*(w11*w22))))+((4.*(v22*(v44*(w11*w22))))+aux423));
    aux425=(v44*w22)+(((0.+4.j)*(v12*(v44*w22)))+((-4.*((v12**2)*(v44*w22)))+aux424));
    aux426=((0.+4.j)*(v12*(w14**2)))+((4.*((v12**2)*(w14**2)))+((-4.*(v22*(w14**2)))+aux425));
    aux427=(-2.*(v44*(w12**2)))+((8.*((v12**2)*(v44*(w12**2))))+((-4.*(v22*(v44*(w12**2))))+aux426));
    aux428=(4.*(v22*(v44*w11)))+((-8.*(v12*(v44*w12)))+(((0.+-4.j)*(v22*(v44*w12)))+aux427));
    aux429=(v44*w11)+(((0.+-4.j)*(v12*(v44*w11)))+((-4.*((v12**2)*(v44*w11)))+aux428));
    aux430=(4.*(w11*(1.+w22)))+(v11*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux431=(((-2.*((v12**2)*v44))+((v22*v44)+aux429))-(w24**2))-((v24**2)*(aux430-((((0.+1.j)+(2.*w12))**2))));
    aux432=(4.*(v14*((v24*(((0.+2.j)*w11)+((4.*w12)+((0.+-2.j)*w22))))+aux410)))+(w44+(2.*(aux431-(w14**2))));
    aux433=v44+((-2.*((v14**2)*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux407))))+aux432);
    output=(0.25*((-4.*(v11*((v23**2)*(v24**2))))+aux406))/aux433;
    return output


def d(V,W,R,S):
    v11,v12,v13,v14=separate(V,0)
    v21,v22,v23,v24=separate(V,1)
    v31,v32,v33,v34=separate(V,2)
    v41,v42,v43,v44=separate(V,3)
    w11,w12,w13,w14=separate(W,0)
    w21,w22,w23,w24=separate(W,1)
    w31,w32,w33,w34=separate(W,2)
    w41,w42,w43,w44=separate(W,3)
    u1,u2,u3,u4=R[0],R[1],R[2],R[3]
    s1,s2,s3,s4=S[0],S[1],S[2],S[3]
    aux0=(-2.*(v13*((w11+(2.*(w11*w22)))-(w12*((0.+1.j)+(2.*w12))))))+(((0.+1.j)*(w11*w23))+(-2.*(v11*(w12*w23))));
    aux1=w13+((2.*(v11*w13))+(((0.+-2.j)*(w12*w13))+((4.*(v11*(w13*w22)))+aux0)));
    aux2=(4.*(w13*(v22+(w22+(2.*(v22*w22))))))+(((0.+1.j)+(-2.*((1.+(2.*v22))*w12)))*w23);
    aux3=(v14**2)*((v23*((0.+3.j)+((-6.*w12)+((-4.*(v22*w12))+((0.+4.j)*w22)))))+aux2);
    aux4=(-4.*(w14*(v22+(w22+(2.*(v22*w22))))))+(((0.+-2.j)*w24)+(4.*((1.+(2.*v22))*(w12*w24))));
    aux5=((0.+2.j)*v22)+((-6.*w12)+((-4.*(v22*w12))+(((0.+4.j)*w22)+(8.*(v12*w22)))));
    aux6=v24*(-1.+((2.*(((0.+-3.j)+((4.*v12)+(-4.*w12)))*w12))+(w11*(6.+(8.*w22)))));
    aux7=((0.+2.j)*v12)+((6.*w11)+((4.*(v22*w11))+(((0.+-4.j)*w12)+(-8.*(v12*w12)))));
    aux8=(v12*((0.+1.j)+((-2.*w12)+((0.+2.j)*w22))))+(w22+(2.*((1.+(2.*v22))*(w11*w22))));
    aux9=(2.*(v22*w11))+(((0.+1.j)*w12)+((-2.*(w12*(w12+(v22*((0.+1.j)+(2.*w12))))))+aux8));
    aux10=(v23*((w14*((0.+6.j)+((6.*v12)+aux5)))+(aux6+((5.+aux7)*w24))))+(-2.*(aux9*w34));
    aux11=(4.*(v22*(w11*(w23*w24))))+((v13*((4.*(v24*w12))+(((0.+-2.j)*(v24*(1.+(2.*w22))))+aux4)))+aux10);
    aux12=(-8.*(v22*(w12*(w13*w24))))+((w23*w24)+(((0.+2.j)*(v12*(w23*w24)))+((2.*(w11*(w23*w24)))+aux11)));
    aux13=(-8.*(v12*(w13*w24)))+(((0.+-8.j)*(v22*(w13*w24)))+((-4.*(w12*(w13*w24)))+aux12));
    aux14=(-2.*(w12*(w14*w23)))+((-4.*(v22*(w12*(w14*w23))))+(((0.+-2.j)*(w13*w24))+aux13));
    aux15=((0.+2.j)*(w14*w23))+((2.*(v12*(w14*w23)))+(((0.+2.j)*(v22*(w14*w23)))+aux14));
    aux16=(2.*(v24*(w11*w23)))+(((0.+-2.j)*(v24*(w12*w23)))+((8.*(v12*(v24*(w12*w23))))+aux15));
    aux17=(-16.*(v12*(v24*(w13*w22))))+((4.*(w13*(w14*w22)))+((8.*(v22*(w13*(w14*w22))))+aux16));
    aux18=(-4.*(v34*(w11*w22)))+((-8.*(v22*(v34*(w11*w22))))+(((0.+4.j)*(v24*(w13*w22)))+aux17));
    aux19=(4.*(v22*(w13*w14)))+((-2.*(v34*w22))+(((0.+-4.j)*(v12*(v34*w22)))+aux18));
    aux20=((0.+-2.j)*(v24*w13))+((-8.*(v12*(v24*w13)))+((-4.*(v24*(w12*w13)))+aux19));
    aux21=((0.+4.j)*(v22*(v34*w12)))+((4.*(v34*(w12**2)))+((8.*(v22*(v34*(w12**2))))+aux20));
    aux22=(-4.*(v22*(v34*w11)))+(((0.+-2.j)*(v34*w12))+((4.*(v12*(v34*w12)))+aux21));
    aux23=2.*(v13*(w14*((0.+-1.j)+((2.*v12)+((4.*w12)+(4.*(((0.+-1.j)+v12)*w22)))))));
    aux24=(v11*((0.+2.j)+((-4.*w12)+((0.+4.j)*w22))))+(w11*((0.+2.j)+((4.*v12)+(8.*(v12*w22)))));
    aux25=v23*(2.+(((0.+1.j)*v12)+((-2.*(((0.+1.j)+v12)*w12))+(v11*(3.+(4.*w22))))));
    aux26=(w13*((0.+1.j)+((2.*v12)+(4.*(v12*w22)))))+(aux25+((1.+(v11+(((0.+1.j)*v12)+(-2.*(v12*w12)))))*w23));
    aux27=(v11*((v23*((0.+-1.j)+(4.*w12)))+((4.*w13)+((0.+-1.j)*w23))))+(-2.*(v12*(w11*w23)));
    aux28=(-2.*(((0.+1.j)+v12)*(v23*w11)))+(w13+((4.*(v12*(((0.+1.j)+w12)*w13)))+aux27));
    aux29=(v11*((0.+2.j)+((-4.*w12)+((0.+4.j)*w22))))+(w11*((0.+2.j)+((4.*v12)+(8.*(v12*w22)))));
    aux30=(2.*(aux28*w24))+((aux29-(((0.+1.j)+(2.*w12))*(-1.+(4.*(v12*w12)))))*w34);
    aux31=(-2.*(w14*aux26))+((-2.*(v13*((1.+((4.*w11)+(4.*(((0.+-1.j)+v12)*w12))))*w24)))+aux30);
    aux32=v24*(aux23+((v34*(aux24-(((0.+1.j)+(2.*w12))*(-1.+(4.*(v12*w12))))))+aux31));
    aux33=(2.*(w11*w22))+(2.*(v22*((w11+(2.*(w11*w22)))-(w12*((0.+1.j)+(2.*w12))))));
    aux34=(v23*(1.+((-6.*w11)+(((0.+6.j)*w12)+((8.*(w12**2))+(-8.*(w11*w22)))))))+(w23+((-2.*(w11*w23))+((0.+2.j)*(w12*w23))));
    aux35=(v13*((0.+2.j)+((-4.*w12)+((0.+4.j)*w22))))+(((0.+-4.j)*(w13*w22))+aux34);
    aux36=(v12*(((0.+2.j)*w13)+((4.*(w12*w13))+aux35)))+(4.*((v12**2)*((w13+(2.*(w13*w22)))-(w12*(v23+w23)))));
    aux37=((0.+-1.j)*((v11+(w11+(2.*(v22*w11))))*w23))+((2.*(v11*((1.+(2.*v22))*(w12*w23))))+aux36);
    aux38=(-8.*(v11*(v22*(w13*w22))))+((2.*(v13*((((0.+1.j)+(-2.*w12))*w12)+(w22+aux33))))+aux37);
    aux39=((0.+4.j)*(v22*(w12*w13)))+(((0.+-4.j)*(v11*(v23*w22)))+((-4.*(v11*(w13*w22)))+aux38));
    aux40=(4.*(v11*(v22*(v23*w12))))+((-2.*(v22*w13))+((-4.*(v11*(v22*w13)))+(((0.+2.j)*(w12*w13))+aux39)));
    aux41=((0.+-2.j)*(v22*(v23*w11)))+((-2.*(v23*w12))+((6.*(v11*(v23*w12)))+aux40));
    aux42=((0.+-1.j)*((((3.+(6.*v11))*v23)+w23)*w44))+(2.*((((0.+-3.j)*(v23*w11))+aux41)*w44));
    aux43=(2.*(v14*((((0.+-2.j)*(v12*v34))+aux22)-(v24*w23))))+((2.*aux32)+aux42);
    aux44=(16.*((v12**2)*(w12*(w24*w34))))+((-16.*(v11*(v22*(w12*(w24*w34)))))+aux43);
    aux45=((0.+8.j)*(v22*(w11*(w24*w34))))+((-8.*(v11*(w12*(w24*w34))))+(((0.+-8.j)*(v12*(w12*(w24*w34))))+aux44));
    aux46=(-4.*(v12*(w24*w34)))+(((0.+4.j)*(w11*(w24*w34)))+((8.*(v12*(w11*(w24*w34))))+aux45));
    aux47=(16.*(v11*(v22*(w14*(w22*w34)))))+(((0.+2.j)*(w24*w34))+(((0.+4.j)*(v11*(w24*w34)))+aux46));
    aux48=((0.+8.j)*(v12*(w14*(w22*w34))))+((-16.*((v12**2)*(w14*(w22*w34))))+aux47);
    aux49=(-8.*(v12*(w12*(w14*w34))))+(((0.+-8.j)*(v22*(w12*(w14*w34))))+((8.*(v11*(w14*(w22*w34))))+aux48));
    aux50=(4.*(v22*(w14*w34)))+((8.*(v11*(v22*(w14*w34))))+(((0.+-4.j)*(w12*(w14*w34)))+aux49));
    aux51=(16.*(v11*(v22*(w13*(w24**2)))))+(((0.+-4.j)*(v12*(w14*w34)))+((-8.*((v12**2)*(w14*w34)))+aux50));
    aux52=((0.+8.j)*(v12*(w13*(w24**2))))+((-16.*((v12**2)*(w13*(w24**2))))+aux51);
    aux53=(-16.*(v13*(v22*(w11*(w24**2)))))+((16.*(v12*(v23*(w11*(w24**2)))))+((8.*(v11*(w13*(w24**2))))+aux52));
    aux54=((0.+-8.j)*(v12*(v13*(w24**2))))+(((0.+8.j)*(v11*(v23*(w24**2))))+((-8.*(v13*(w11*(w24**2))))+aux53));
    aux55=(8.*((v12**2)*(w14*(w23*w24))))+((-8.*(v11*(v22*(w14*(w23*w24)))))+((-4.*(v13*(w24**2)))+aux54));
    aux56=((0.+-8.j)*(v22*(w13*(w14*w24))))+((-4.*(v11*(w14*(w23*w24))))+(((0.+-4.j)*(v12*(w14*(w23*w24))))+aux55));
    aux57=(-32.*(v12*(v23*(w12*(w14*w24)))))+(((0.+-4.j)*(w13*(w14*w24)))+((-8.*(v12*(w13*(w14*w24))))+aux56));
    aux58=(-8.*(v11*(v22*(v23*(w14*w24)))))+((16.*(v13*(w12*(w14*w24))))+((32.*(v13*(v22*(w12*(w14*w24)))))+aux57));
    aux59=((0.+-12.j)*(v12*(v23*(w14*w24))))+((8.*((v12**2)*(v23*(w14*w24))))+aux58);
    aux60=((0.+8.j)*(v13*(v22*(w14*w24))))+((4.*(v23*(w14*w24)))+((-12.*(v11*(v23*(w14*w24))))+aux59));
    aux61=(-16.*(v11*(v22*(v34*(w12*w24)))))+(((0.+-4.j)*(v13*(w14*w24)))+((8.*(v12*(v13*(w14*w24))))+aux60));
    aux62=((0.+-8.j)*(v12*(v34*(w12*w24))))+((16.*((v12**2)*(v34*(w12*w24))))+aux61);
    aux63=(8.*(v12*(v34*(w11*w24))))+(((0.+8.j)*(v22*(v34*(w11*w24))))+((-8.*(v11*(v34*(w12*w24))))+aux62));
    aux64=((0.+4.j)*(v11*(v34*w24)))+((-4.*(v12*(v34*w24)))+(((0.+4.j)*(v34*(w11*w24)))+aux63));
    aux65=(4.*((v24**2)*(((0.+1.j)*(v23*w11))+((-2.*(v11*(v23*w12)))+aux1))))+((2.*aux3)+(((0.+2.j)*(v34*w24))+aux64));
    aux66=((0.+2.j)*((w14**2)*w23))+((4.*(v12*((w14**2)*w23)))+(((0.+4.j)*(v22*((w14**2)*w23)))+aux65));
    aux67=(-8.*((v12**2)*(v44*(w12*w23))))+((8.*(v11*(v22*(v44*(w12*w23)))))+aux66);
    aux68=((0.+-4.j)*(v22*(v44*(w11*w23))))+((4.*(v11*(v44*(w12*w23))))+(((0.+4.j)*(v12*(v44*(w12*w23))))+aux67));
    aux69=(2.*(v12*(v44*w23)))+(((0.+-2.j)*(v44*(w11*w23)))+((-4.*(v12*(v44*(w11*w23))))+aux68));
    aux70=(16.*(v12*(v23*((w14**2)*w22))))+(((0.+-1.j)*(v44*w23))+(((0.+-2.j)*(v11*(v44*w23)))+aux69));
    aux71=(16.*(v11*(v22*(v34*(w14*w22)))))+((-8.*(v13*((w14**2)*w22)))+((-16.*(v13*(v22*((w14**2)*w22))))+aux70));
    aux72=((0.+8.j)*(v12*(v34*(w14*w22))))+((-16.*((v12**2)*(v34*(w14*w22))))+aux71);
    aux73=(16.*((v12**2)*(v44*(w13*w22))))+((-16.*(v11*(v22*(v44*(w13*w22)))))+((8.*(v11*(v34*(w14*w22))))+aux72));
    aux74=(-16.*(v12*(v23*(v44*(w11*w22)))))+((-8.*(v11*(v44*(w13*w22))))+(((0.+-8.j)*(v12*(v44*(w13*w22))))+aux73));
    aux75=((0.+-8.j)*(v11*(v23*(v44*w22))))+((8.*(v13*(v44*(w11*w22))))+((16.*(v13*(v22*(v44*(w11*w22)))))+aux74));
    aux76=((0.+4.j)*(v22*(v23*(w14**2))))+((4.*(v13*(v44*w22)))+(((0.+8.j)*(v12*(v13*(v44*w22))))+aux75));
    aux77=(-8.*(v13*(v22*(w14**2))))+(((0.+6.j)*(v23*(w14**2)))+((12.*(v12*(v23*(w14**2))))+aux76));
    aux78=((0.+-4.j)*(v34*(w12*w14)))+((-8.*(v12*(v34*(w12*w14))))+(((0.+-8.j)*(v22*(v34*(w12*w14))))+aux77));
    aux79=(-8.*((v12**2)*(v34*w14)))+((4.*(v22*(v34*w14)))+((8.*(v11*(v22*(v34*w14))))+aux78));
    aux80=(8.*(v12*(v44*(w12*w13))))+(((0.+8.j)*(v22*(v44*(w12*w13))))+(((0.+-4.j)*(v12*(v34*w14)))+aux79));
    aux81=(-4.*(v22*(v44*w13)))+((-8.*(v11*(v22*(v44*w13))))+(((0.+4.j)*(v44*(w12*w13)))+aux80));
    aux82=(16.*(v12*(v23*(v44*(w12**2)))))+(((0.+4.j)*(v12*(v44*w13)))+((8.*((v12**2)*(v44*w13)))+aux81));
    aux83=(8.*(v11*(v22*(v23*(v44*w12)))))+((-8.*(v13*(v44*(w12**2))))+((-16.*(v13*(v22*(v44*(w12**2)))))+aux82));
    aux84=((0.+12.j)*(v12*(v23*(v44*w12))))+((-8.*((v12**2)*(v23*(v44*w12))))+aux83);
    aux85=((0.+-8.j)*(v13*(v22*(v44*w12))))+((-4.*(v23*(v44*w12)))+((12.*(v11*(v23*(v44*w12))))+aux84));
    aux86=((0.+-4.j)*(v22*(v23*(v44*w11))))+(((0.+4.j)*(v13*(v44*w12)))+((-8.*(v12*(v13*(v44*w12))))+aux85));
    aux87=(8.*(v13*(v22*(v44*w11))))+(((0.+-6.j)*(v23*(v44*w11)))+((-12.*(v12*(v23*(v44*w11))))+aux86));
    aux88=((0.+-3.j)*(v23*v44))+(((0.+-6.j)*(v11*(v23*v44)))+((2.*(v12*(v23*v44)))+aux87));
    aux89=(4.*((1.+w11)*w22))+(v22*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux90=(v24*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))))+(w24+((2.*(w11*w24))+((0.+-2.j)*(w12*w24))));
    aux91=(w14*(-1.+(((0.+-2.j)*w12)+(-2.*w22))))+(((0.+1.j)+(((0.+2.j)*w11)+(2.*w12)))*w24);
    aux92=(2.*(v12*((w14*((0.+1.j)+((-2.*w12)+((0.+2.j)*w22))))+aux90)))+((1.+(2.*v22))*aux91);
    aux93=(2.*(w12*w14))+(((0.+-1.j)*(w14*(1.+(2.*w22))))+((-1.+((-2.*w11)+((0.+2.j)*w12)))*w24));
    aux94=(-2.*(v22*(w11*(1.+w22))))+((v12**2)*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))));
    aux95=(2.*(v22*(w12*((0.+1.j)+w12))))+((v12*(((0.+2.j)*w11)+((4.*w12)+((0.+-2.j)*w22))))+aux94);
    aux96=(4.*((1.+w11)*w22))+(v22*(2.+((4.*w11)+((-8.*(w12**2))+((4.*w22)+(8.*(w11*w22)))))));
    aux97=(-2.*(w12**2))+((-4.*(v22*(w12**2)))+(2.*((1.+(v22+(w11+(2.*(v22*w11)))))*w22)));
    aux98=(-4.*((1.+(v22+(w11+(2.*(v22*w11)))))*(w24**2)))+(w44+(2.*((v22+((2.*(v22*w11))+(((0.+2.j)*w12)+aux97)))*w44)));
    aux99=(v44*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux96)))+((4.*(((0.+-1.j)+((2.+(4.*v22))*w12))*(w14*w24)))+aux98);
    aux100=((v22+(w11+(w22+(-2.*(((w12**2)+aux95)-(w11*w22))))))*w44)+(v11*((-4.*((w14**2)*(v22+(w22+(2.*(v22*w22))))))+aux99));
    aux101=(-4.*(v22*(w11*(w24**2))))+((2.*((1.+((2.*v11)+((0.+2.j)*v12)))*(v24*aux93)))+aux100);
    aux102=(4.*((v12**2)*(w24**2)))+((-2.*(w11*(w24**2)))+((8.*((v12**2)*(w11*(w24**2))))+aux101));
    aux103=(-16.*((v12**2)*(w12*(w14*w24))))+((8.*(v22*(w12*(w14*w24))))+(((0.+-4.j)*(v12*(w24**2)))+aux102));
    aux104=(8.*(v12*(w14*w24)))+(((0.+4.j)*(v22*(w14*w24)))+((4.*(w12*(w14*w24)))+aux103));
    aux105=(-2.*((w14**2)*w22))+((8.*((v12**2)*((w14**2)*w22)))+((-4.*(v22*((w14**2)*w22)))+aux104));
    aux106=(2.*(v44*(w11*w22)))+((-8.*((v12**2)*(v44*(w11*w22))))+((4.*(v22*(v44*(w11*w22))))+aux105));
    aux107=(v44*w22)+(((0.+4.j)*(v12*(v44*w22)))+((-4.*((v12**2)*(v44*w22)))+aux106));
    aux108=((0.+4.j)*(v12*(w14**2)))+((4.*((v12**2)*(w14**2)))+((-4.*(v22*(w14**2)))+aux107));
    aux109=(-2.*(v44*(w12**2)))+((8.*((v12**2)*(v44*(w12**2))))+((-4.*(v22*(v44*(w12**2))))+aux108));
    aux110=(4.*(v22*(v44*w11)))+((-8.*(v12*(v44*w12)))+(((0.+-4.j)*(v22*(v44*w12)))+aux109));
    aux111=(v44*w11)+(((0.+-4.j)*(v12*(v44*w11)))+((-4.*((v12**2)*(v44*w11)))+aux110));
    aux112=(4.*(w11*(1.+w22)))+(v11*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux113=(((-2.*((v12**2)*v44))+((v22*v44)+aux111))-(w24**2))-((v24**2)*(aux112-((((0.+1.j)+(2.*w12))**2))));
    aux114=(4.*(v14*((v24*(((0.+2.j)*w11)+((4.*w12)+((0.+-2.j)*w22))))+aux92)))+(w44+(2.*(aux113-(w14**2))));
    output=((0.+-1.j)*(((0.+4.j)*(v12*(v13*v44)))+aux88))/(v44+((-2.*((v14**2)*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux89))))+aux114));
    return output



def e(V,W,R,S):
    v11,v12,v13,v14=separate(V,0)
    v21,v22,v23,v24=separate(V,1)
    v31,v32,v33,v34=separate(V,2)
    v41,v42,v43,v44=separate(V,3)
    w11,w12,w13,w14=separate(W,0)
    w21,w22,w23,w24=separate(W,1)
    w31,w32,w33,w34=separate(W,2)
    w41,w42,w43,w44=separate(W,3)
    u1,u2,u3,u4=R[0],R[1],R[2],R[3]
    s1,s2,s3,s4=S[0],S[1],S[2],S[3]
    aux0=(((0.+-1.j)+(2.*w12))*(-1.+(4.*(v12*w12))))+(((0.+2.j)*w22)+(-4.*(v12*((1.+(2.*w11))*w22))));
    aux1=w14*(1.+((-4.*v22)+(((0.+8.j)*w12)+((4.*(v12*((0.+1.j)+w12)))+(8.*w22)))));
    aux2=(v24*((0.+-3.j)+(((0.+-2.j)*w11)+((v12*(4.+(8.*w11)))+(-2.*w12)))))+aux1;
    aux3=aux2-(((0.+3.j)+((2.*v12)+(((0.+8.j)*w11)+((4.*(v12*w11))+(8.*w12)))))*w24);
    aux4=(((0.+-1.j)+(2.*w12))*(-1.+(4.*(v12*w12))))+(((0.+2.j)*w22)+(-4.*(v12*((1.+(2.*w11))*w22))));
    aux5=(4.*(v12*(w11*(w23*w24))))+((v23*aux3)+(((v22*((0.+2.j)+(((0.+4.j)*w11)+(4.*w12))))+aux4)*w34));
    aux6=(-8.*(v12*(w12*(w13*w24))))+(((0.+-1.j)*(w23*w24))+((2.*(v12*(w23*w24)))+aux5));
    aux7=(4.*(w13*w24))+(((0.+-4.j)*(v12*(w13*w24)))+((4.*(v22*(w13*w24)))+aux6));
    aux8=(4.*(v13*(v22*w24)))+((8.*(v13*(v22*(w11*w24))))+(((0.+4.j)*(v13*(w12*w24)))+aux7));
    aux9=(-4.*(v22*(w14*w23)))+((-4.*(v12*(w12*(w14*w23))))+((2.*(v13*w24))+aux8));
    aux10=(8.*(v12*(v24*(w11*w23))))+((2.*(v24*(w12*w23)))+(((0.+4.j)*(v12*(w14*w23)))+aux9));
    aux11=((0.+-1.j)*(v24*w23))+((4.*(v12*(v24*w23)))+(((0.+2.j)*(v24*(w11*w23)))+aux10));
    aux12=(8.*(v12*(w13*(w14*w22))))+((v34*((v22*((0.+2.j)+(((0.+4.j)*w11)+(4.*w12))))+aux0))+aux11);
    aux13=(-8.*(v13*(v24*(w11*w22))))+((-4.*(v24*(w13*w22)))+(((0.+-4.j)*(v13*(w14*w22)))+aux12));
    aux14=(-8.*(v13*(v22*(w12*w14))))+(((0.+-4.j)*(v22*(w13*w14)))+((-4.*(v13*(v24*w22)))+aux13));
    aux15=(2.*(v24*w13))+(((0.+-4.j)*(v24*(w12*w13)))+((-16.*(v12*(v24*(w12*w13))))+aux14));
    aux16=(((0.+-4.j)*(v13*(v24*w12)))+((8.*(v13*(v24*(w12**2))))+aux15))-(w14*w23);
    aux17=-2.*((v12**2)*(v23+((2.*(v23*w11))+((-4.*(w12*w13))+(w23+(2.*(w11*w23)))))));
    aux18=(w13*(-2.+(((0.+4.j)*w12)+(4.*w22))))+(((0.+1.j)+(((0.+-2.j)*w11)+(-2.*w12)))*w23);
    aux19=(v22*(2.+(4.*w11)))+(((0.+-2.j)*w12)+((8.*(w12**2))+((-4.*w22)+(-8.*(w11*w22)))));
    aux20=w23+(((0.+2.j)*(w12*w23))+(2.*(v22*((-4.*(w12*w13))+(w23+(2.*(w11*w23)))))));
    aux21=(v12*((v23*((0.+3.j)+(((0.+2.j)*w11)+(2.*w12))))+aux18))+(v11*(((0.+-4.j)*(w13*w22))+((v23*(1.+aux19))+aux20)));
    aux22=((0.+-2.j)*(w13*w22))+((2.*(v22*(w11*w23)))+(((0.+1.j)*(w12*w23))+(aux17+aux21)));
    aux23=((0.+-2.j)*(v22*w13))+((-4.*(v22*(w12*w13)))+((-4.*(v23*(w11*w22)))+aux22));
    aux24=(2.*(v22*(v23*w11)))+(((0.+3.j)*(v23*w12))+((4.*(v23*(w12**2)))+(((0.+-1.j)*w13)+aux23)));
    aux25=((0.+-2.j)*(v22*(1.+((2.*w11)+((0.+-2.j)*w12)))))+(2.*(((0.+-1.j)+((2.*v12)+(4.*(v12*w11))))*w22));
    aux26=(w14*((-1.+(((0.+-1.j)*w12)+(2.*(v12*w12))))-w22))+(((((0.+1.j)*(1.+w11))+w12)-(v12*(1.+(2.*w11))))*w24);
    aux27=((0.+-2.j)*(v22*(1.+((2.*w11)+((0.+-2.j)*w12)))))+(2.*(((0.+-1.j)+((2.*v12)+(4.*(v12*w11))))*w22));
    aux28=(4.*(v24*aux26))+((aux27-(((0.+-1.j)+(2.*w12))*(-1.+(4.*(v12*w12)))))*w44);
    aux29=(2.*((-1.+((2.*v22)+(v12*((0.+-2.j)+(8.*w12)))))*(w14*w24)))+((-2.*(((0.+-1.j)+(v12*(2.+(4.*w11))))*(w24**2)))+aux28);
    aux30=((0.+4.j)*((w14**2)*(v22+((0.+2.j)*(v12*w22)))))+((v44*(aux25-(((0.+-1.j)+(2.*w12))*(-1.+(4.*(v12*w12))))))+aux29);
    aux31=(((-2.*(v23*w11))+aux24)*w44)+(v13*(((v24**2)*((0.+2.j)+(((0.+4.j)*w11)+(4.*w12))))+aux30));
    aux32=((0.+-4.j)*(v11*(w12*(w24*w34))))+((4.*(v12*(w12*(w24*w34))))+((v14*aux16)+aux31));
    aux33=(-4.*(v22*(w11*(w24*w34))))+((-8.*(v11*(v22*(w11*(w24*w34)))))+(((0.+-2.j)*(w12*(w24*w34)))+aux32));
    aux34=((0.+4.j)*(v12*(w11*(w24*w34))))+((8.*((v12**2)*(w11*(w24*w34))))+aux33);
    aux35=((0.+-2.j)*(v12*(w24*w34)))+((4.*((v12**2)*(w24*w34)))+((-4.*(v11*(v22*(w24*w34))))+aux34));
    aux36=((0.+4.j)*(v11*(w14*(w22*w34))))+((-4.*(v12*(w14*(w22*w34))))+((-2.*(v11*(w24*w34)))+aux35));
    aux37=(4.*(v24*(w11*(w22*w34))))+((8.*(v11*(v24*(w11*(w22*w34)))))+(((0.+2.j)*(w14*(w22*w34)))+aux36));
    aux38=(4.*(v22*(w12*(w14*w34))))+((8.*(v11*(v22*(w12*(w14*w34)))))+((4.*(v11*(v24*(w22*w34))))+aux37));
    aux39=((0.+-4.j)*(v12*(w12*(w14*w34))))+((-8.*((v12**2)*(w12*(w14*w34))))+aux38);
    aux40=((0.+1.j)*(w14*w34))+((2.*(v12*(w14*w34)))+(((0.+2.j)*(v22*(w14*w34)))+aux39));
    aux41=(-4.*(v12*(v24*(w12*w34))))+((-4.*(v24*((w12**2)*w34)))+((-8.*(v11*(v24*((w12**2)*w34))))+aux40));
    aux42=((0.+-4.j)*(v12*(v24*(w11*w34))))+(((0.+-2.j)*(v24*(w12*w34)))+(((0.+4.j)*(v11*(v24*(w12*w34))))+aux41));
    aux43=(-4.*(v12*(w13*(w24**2))))+(((0.+-2.j)*(v12*(v24*w34)))+((2.*(v24*(w11*w34)))+aux42));
    aux44=(8.*(v11*(v23*(w11*(w24**2)))))+(((0.+2.j)*(w13*(w24**2)))+(((0.+4.j)*(v11*(w13*(w24**2))))+aux43));
    aux45=(2.*(v12*(w14*(w23*w24))))+((4.*(v11*(v23*(w24**2))))+((4.*(v23*(w11*(w24**2))))+aux44));
    aux46=(-4.*(v11*(v24*(w11*(w23*w24)))))+(((0.+-1.j)*(w14*(w23*w24)))+(((0.+-2.j)*(v11*(w14*(w23*w24))))+aux45));
    aux47=(8.*(v11*(v22*(w13*(w14*w24)))))+((-2.*(v11*(v24*(w23*w24))))+((-2.*(v24*(w11*(w23*w24))))+aux46));
    aux48=((0.+-4.j)*(v12*(w13*(w14*w24))))+((-8.*((v12**2)*(w13*(w14*w24))))+((4.*(v22*(w13*(w14*w24))))+aux47));
    aux49=(-2.*(v12*(v23*(w14*w24))))+((-8.*(v23*(w12*(w14*w24))))+((-16.*(v11*(v23*(w12*(w14*w24)))))+aux48));
    aux50=(8.*(v11*(v24*(w12*(w13*w24)))))+(((0.+-3.j)*(v23*(w14*w24)))+(((0.+2.j)*(v11*(v23*(w14*w24))))+aux49));
    aux51=((0.+4.j)*(v11*(v24*(w13*w24))))+((-4.*(v12*(v24*(w13*w24))))+((4.*(v24*(w12*(w13*w24))))+aux50));
    aux52=((0.+-4.j)*(v11*(v34*(w12*w24))))+((4.*(v12*(v34*(w12*w24))))+(((0.+4.j)*(v24*(w13*w24)))+aux51));
    aux53=(-4.*(v22*(v34*(w11*w24))))+((-8.*(v11*(v22*(v34*(w11*w24)))))+(((0.+-2.j)*(v34*(w12*w24)))+aux52));
    aux54=((0.+4.j)*(v12*(v34*(w11*w24))))+((8.*((v12**2)*(v34*(w11*w24))))+aux53);
    aux55=(-4.*(v11*(v22*(v34*w24))))+((2.*(v23*(v24*(w11*w24))))+((4.*(v11*(v23*(v24*(w11*w24)))))+aux54));
    aux56=(-2.*(v11*(v34*w24)))+(((0.+-2.j)*(v12*(v34*w24)))+((4.*((v12**2)*(v34*w24)))+aux55));
    aux57=(-2.*(v22*((w14**2)*w23)))+((-4.*(v11*(v22*((w14**2)*w23))))+((2.*(v11*(v23*(v24*w24))))+aux56));
    aux58=(4.*(v11*(v24*(w12*(w14*w23)))))+(((0.+2.j)*(v12*((w14**2)*w23)))+((4.*((v12**2)*((w14**2)*w23)))+aux57));
    aux59=((0.+-4.j)*(v11*(v24*(w14*w23))))+((4.*(v12*(v24*(w14*w23))))+((2.*(v24*(w12*(w14*w23))))+aux58));
    aux60=((0.+2.j)*(v11*(v44*(w12*w23))))+((-2.*(v12*(v44*(w12*w23))))+(((0.+-1.j)*(v24*(w14*w23)))+aux59));
    aux61=(2.*(v22*(v44*(w11*w23))))+((4.*(v11*(v22*(v44*(w11*w23)))))+(((0.+1.j)*(v44*(w12*w23)))+aux60));
    aux62=((0.+-2.j)*(v12*(v44*(w11*w23))))+((-4.*((v12**2)*(v44*(w11*w23))))+aux61);
    aux63=(2.*(v11*(v22*(v44*w23))))+((-2.*((v24**2)*(w11*w23)))+((-4.*(v11*((v24**2)*(w11*w23))))+aux62));
    aux64=(v11*(v44*w23))+(((0.+1.j)*(v12*(v44*w23)))+((-2.*((v12**2)*(v44*w23)))+aux63));
    aux65=(4.*(v23*((w14**2)*w22)))+((8.*(v11*(v23*((w14**2)*w22))))+((-2.*(v11*((v24**2)*w23)))+aux64));
    aux66=(-4.*(v12*(v34*(w14*w22))))+((-4.*(v24*(w13*(w14*w22))))+((-8.*(v11*(v24*(w13*(w14*w22)))))+aux65));
    aux67=(4.*(v12*(v44*(w13*w22))))+(((0.+2.j)*(v34*(w14*w22)))+(((0.+4.j)*(v11*(v34*(w14*w22))))+aux66));
    aux68=(-8.*(v11*(v23*(v44*(w11*w22)))))+(((0.+-2.j)*(v44*(w13*w22)))+(((0.+-4.j)*(v11*(v44*(w13*w22))))+aux67));
    aux69=(4.*(v24*(v34*(w11*w22))))+((8.*(v11*(v24*(v34*(w11*w22)))))+((-4.*(v23*(v44*(w11*w22))))+aux68));
    aux70=(-4.*(v11*(v22*(v23*(w14**2)))))+((4.*(v11*(v24*(v34*w22))))+((-4.*(v11*(v23*(v44*w22))))+aux69));
    aux71=((0.+-2.j)*(v12*(v23*(w14**2))))+((4.*((v12**2)*(v23*(w14**2))))+((-2.*(v22*(v23*(w14**2))))+aux70));
    aux72=(-2.*(v24*(w13*w14)))+(((0.+4.j)*(v12*(v24*(w13*w14))))+((2.*(v23*(w14**2)))+aux71));
    aux73=(-8.*((v12**2)*(v34*(w12*w14))))+((4.*(v22*(v34*(w12*w14))))+((8.*(v11*(v22*(v34*(w12*w14)))))+aux72));
    aux74=(-4.*(v11*(v23*(v24*(w12*w14)))))+(((0.+-4.j)*(v12*(v34*(w12*w14))))+aux73);
    aux75=(2.*(v12*(v34*w14)))+(((0.+2.j)*(v22*(v34*w14)))+((-2.*(v23*(v24*(w12*w14))))+aux74));
    aux76=((0.+-4.j)*(v11*(v23*(v24*w14))))+((4.*(v12*(v23*(v24*w14))))+(((0.+1.j)*(v34*w14))+aux75));
    aux77=(-4.*(v22*(v44*(w12*w13))))+((-8.*(v11*(v22*(v44*(w12*w13)))))+(((0.+-3.j)*(v23*(v24*w14)))+aux76));
    aux78=((0.+4.j)*(v12*(v44*(w12*w13))))+((8.*((v12**2)*(v44*(w12*w13))))+aux77);
    aux79=((0.+-2.j)*(v22*(v44*w13)))+((4.*((v24**2)*(w12*w13)))+((8.*(v11*((v24**2)*(w12*w13))))+aux78));
    aux80=((0.+2.j)*((v24**2)*w13))+(((0.+-1.j)*(v44*w13))+((-2.*(v12*(v44*w13)))+aux79));
    aux81=(-8.*(v11*(v24*(v34*(w12**2)))))+((4.*(v23*(v44*(w12**2))))+((8.*(v11*(v23*(v44*(w12**2)))))+aux80));
    aux82=((0.+-2.j)*(v11*(v23*(v44*w12))))+((2.*(v12*(v23*(v44*w12))))+((-4.*(v24*(v34*(w12**2))))+aux81));
    aux83=((0.+4.j)*(v11*(v24*(v34*w12))))+((-4.*(v12*(v24*(v34*w12))))+(((0.+3.j)*(v23*(v44*w12)))+aux82));
    aux84=(2.*(v22*(v23*(v44*w11))))+((4.*(v11*(v22*(v23*(v44*w11)))))+(((0.+-2.j)*(v24*(v34*w12)))+aux83));
    aux85=((0.+2.j)*(v12*(v23*(v44*w11))))+((-4.*((v12**2)*(v23*(v44*w11))))+aux84);
    aux86=(2.*(v24*(v34*w11)))+(((0.+-4.j)*(v12*(v24*(v34*w11))))+((-2.*(v23*(v44*w11)))+aux85));
    aux87=(2.*(v11*(v22*(v23*v44))))+((-2.*(v23*((v24**2)*w11)))+((-4.*(v11*(v23*((v24**2)*w11))))+aux86));
    aux88=(v11*(v23*v44))+(((0.+3.j)*(v12*(v23*v44)))+((-2.*((v12**2)*(v23*v44)))+aux87));
    aux89=(v22*(2.+(4.*w11)))+(((0.+-2.j)*w12)+((8.*(w12**2))+((-4.*w22)+(-8.*(w11*w22)))));
    aux90=w23+(((0.+2.j)*(w12*w23))+(2.*(v22*((-4.*(w12*w13))+(w23+(2.*(w11*w23)))))));
    aux91=((-2.*(v11*(v23*(v24**2))))+(((0.+-2.j)*(v12*(v24*v34)))+aux88))-((v14**2)*(((0.+-4.j)*(w13*w22))+((v23*(1.+aux89))+aux90)));
    aux92=(4.*((1.+w11)*w22))+(v22*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux93=(v24*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))))+(w24+((2.*(w11*w24))+((0.+-2.j)*(w12*w24))));
    aux94=(w14*(-1.+(((0.+-2.j)*w12)+(-2.*w22))))+(((0.+1.j)+(((0.+2.j)*w11)+(2.*w12)))*w24);
    aux95=(2.*(v12*((w14*((0.+1.j)+((-2.*w12)+((0.+2.j)*w22))))+aux93)))+((1.+(2.*v22))*aux94);
    aux96=(2.*(w12*w14))+(((0.+-1.j)*(w14*(1.+(2.*w22))))+((-1.+((-2.*w11)+((0.+2.j)*w12)))*w24));
    aux97=(-2.*(v22*(w11*(1.+w22))))+((v12**2)*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))));
    aux98=(2.*(v22*(w12*((0.+1.j)+w12))))+((v12*(((0.+2.j)*w11)+((4.*w12)+((0.+-2.j)*w22))))+aux97);
    aux99=(4.*((1.+w11)*w22))+(v22*(2.+((4.*w11)+((-8.*(w12**2))+((4.*w22)+(8.*(w11*w22)))))));
    aux100=(-2.*(w12**2))+((-4.*(v22*(w12**2)))+(2.*((1.+(v22+(w11+(2.*(v22*w11)))))*w22)));
    aux101=(-4.*((1.+(v22+(w11+(2.*(v22*w11)))))*(w24**2)))+(w44+(2.*((v22+((2.*(v22*w11))+(((0.+2.j)*w12)+aux100)))*w44)));
    aux102=(v44*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux99)))+((4.*(((0.+-1.j)+((2.+(4.*v22))*w12))*(w14*w24)))+aux101);
    aux103=((v22+(w11+(w22+(-2.*(((w12**2)+aux98)-(w11*w22))))))*w44)+(v11*((-4.*((w14**2)*(v22+(w22+(2.*(v22*w22))))))+aux102));
    aux104=(-4.*(v22*(w11*(w24**2))))+((2.*((1.+((2.*v11)+((0.+2.j)*v12)))*(v24*aux96)))+aux103);
    aux105=(4.*((v12**2)*(w24**2)))+((-2.*(w11*(w24**2)))+((8.*((v12**2)*(w11*(w24**2))))+aux104));
    aux106=(-16.*((v12**2)*(w12*(w14*w24))))+((8.*(v22*(w12*(w14*w24))))+(((0.+-4.j)*(v12*(w24**2)))+aux105));
    aux107=(8.*(v12*(w14*w24)))+(((0.+4.j)*(v22*(w14*w24)))+((4.*(w12*(w14*w24)))+aux106));
    aux108=(-2.*((w14**2)*w22))+((8.*((v12**2)*((w14**2)*w22)))+((-4.*(v22*((w14**2)*w22)))+aux107));
    aux109=(2.*(v44*(w11*w22)))+((-8.*((v12**2)*(v44*(w11*w22))))+((4.*(v22*(v44*(w11*w22))))+aux108));
    aux110=(v44*w22)+(((0.+4.j)*(v12*(v44*w22)))+((-4.*((v12**2)*(v44*w22)))+aux109));
    aux111=((0.+4.j)*(v12*(w14**2)))+((4.*((v12**2)*(w14**2)))+((-4.*(v22*(w14**2)))+aux110));
    aux112=(-2.*(v44*(w12**2)))+((8.*((v12**2)*(v44*(w12**2))))+((-4.*(v22*(v44*(w12**2))))+aux111));
    aux113=(4.*(v22*(v44*w11)))+((-8.*(v12*(v44*w12)))+(((0.+-4.j)*(v22*(v44*w12)))+aux112));
    aux114=(v44*w11)+(((0.+-4.j)*(v12*(v44*w11)))+((-4.*((v12**2)*(v44*w11)))+aux113));
    aux115=(4.*(w11*(1.+w22)))+(v11*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux116=(((-2.*((v12**2)*v44))+((v22*v44)+aux114))-(w24**2))-((v24**2)*(aux115-((((0.+1.j)+(2.*w12))**2))));
    aux117=(4.*(v14*((v24*(((0.+2.j)*w11)+((4.*w12)+((0.+-2.j)*w22))))+aux95)))+(w44+(2.*(aux116-(w14**2))));
    output=((0.+2.j)*aux91)/(v44+((-2.*((v14**2)*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux92))))+aux117));
    return output

def f(V,W,R,S):
    v11,v12,v13,v14=separate(V,0)
    v21,v22,v23,v24=separate(V,1)
    v31,v32,v33,v34=separate(V,2)
    v41,v42,v43,v44=separate(V,3)
    w11,w12,w13,w14=separate(W,0)
    w21,w22,w23,w24=separate(W,1)
    w31,w32,w33,w34=separate(W,2)
    w41,w42,w43,w44=separate(W,3)
    u1,u2,u3,u4=R[0],R[1],R[2],R[3]
    s1,s2,s3,s4=S[0],S[1],S[2],S[3]
    aux0=(4.*(w12*w13))+(((0.+-2.j)*(w13*(1.+(2.*w22))))+((-1.+((-2.*w11)+((0.+2.j)*w12)))*w23));
    aux1=v12*(3.+((-2.*(w12*((0.+1.j)+(4.*w12))))+((4.*w22)+(w11*(6.+(8.*w22))))));
    aux2=(10.*w12)+((v22*((0.+2.j)+(((0.+4.j)*w11)+(4.*w12))))+(((0.+-4.j)*w22)+(2.*aux1)));
    aux3=(((0.+1.j)+((2.*v12)+((0.+2.j)*v22)))*aux0)-(v23*((0.+1.j)+(((0.+6.j)*w11)+aux2)));
    aux4=(4.*((1.+w11)*w22))+(v22*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux5=(v24*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))))+(w24+((2.*(w11*w24))+((0.+-2.j)*(w12*w24))));
    aux6=((0.+-1.j)*((1.+(2.*v22))*((1.+((2.*w11)+((0.+-2.j)*w12)))*w24)))+(-2.*(v12*((w14*((0.+1.j)+((-2.*w12)+((0.+2.j)*w22))))+aux5)));
    aux7=(4.*(v22*(w14*w22)))+((v14*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux4)))+aux6);
    aux8=((0.+4.j)*(v22*(w12*w14)))+(((0.+2.j)*(v24*w22))+((2.*(w14*w22))+aux7));
    aux9=((0.+-2.j)*(v24*w11))+((-4.*(v24*w12))+(w14+((2.*(v22*w14))+(((0.+2.j)*(w12*w14))+aux8))));
    aux10=(-2.*(v22*(w11*(1.+w22))))+((v12**2)*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))));
    aux11=(2.*(v22*(w12*((0.+1.j)+w12))))+((v12*(((0.+2.j)*w11)+((4.*w12)+((0.+-2.j)*w22))))+aux10);
    aux12=(4.*((1.+w11)*w22))+(v22*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux13=(-2.*(((w12**2)+aux11)-(w11*w22)))+(v11*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux12)));
    aux14=(8.*(v11*(v22*(w11*(w23*w24)))))+((2.*(v13*aux9))+(-2.*((v22+(w11+(w22+aux13)))*w34)));
    aux15=(4.*(v11*(w11*(w23*w24))))+((-8.*((v12**2)*(w11*(w23*w24))))+((4.*(v22*(w11*(w23*w24))))+aux14));
    aux16=(-4.*((v12**2)*(w23*w24)))+((4.*(v11*(v22*(w23*w24))))+((2.*(w11*(w23*w24)))+aux15));
    aux17=(-16.*(v11*(v22*(w12*(w13*w24)))))+((w23*w24)+((4.*(v11*(w23*w24)))+(((0.+4.j)*(v12*(w23*w24)))+aux16)));
    aux18=(-8.*(v11*(w12*(w13*w24))))+((16.*((v12**2)*(w12*(w13*w24))))+((-8.*(v22*(w12*(w13*w24))))+aux17));
    aux19=(-8.*(v12*(w13*w24)))+(((0.+-4.j)*(v22*(w13*w24)))+((-4.*(w12*(w13*w24)))+aux18));
    aux20=((0.+-8.j)*(v11*(v23*(w12*w24))))+((8.*(v12*(v23*(w12*w24))))+(((0.+4.j)*(v11*(w13*w24)))+aux19));
    aux21=(4.*(v22*(v23*(w11*w24))))+((8.*(v11*(v22*(v23*(w11*w24)))))+(((0.+-4.j)*(v23*(w12*w24)))+aux20));
    aux22=((0.+8.j)*(v12*(v23*(w11*w24))))+((-8.*((v12**2)*(v23*(w11*w24))))+aux21);
    aux23=(4.*(v11*(v22*(v23*w24))))+((6.*(v23*(w11*w24)))+((12.*(v11*(v23*(w11*w24))))+aux22));
    aux24=(8.*(v11*(v23*w24)))+(((0.+8.j)*(v12*(v23*w24)))+((-4.*((v12**2)*(v23*w24)))+aux23));
    aux25=(-4.*(v22*(w12*(w14*w23))))+((-8.*(v11*(v22*(w12*(w14*w23)))))+((v14*aux3)+((3.*(v23*w24))+aux24)));
    aux26=(-2.*(w12*(w14*w23)))+((-4.*(v11*(w12*(w14*w23))))+((8.*((v12**2)*(w12*(w14*w23))))+aux25));
    aux27=((0.+2.j)*(v11*(w14*w23)))+((-4.*(v12*(w14*w23)))+(((0.+-2.j)*(v22*(w14*w23)))+aux26));
    aux28=((0.+-2.j)*(v24*(w12*w23)))+(((0.+-4.j)*(v11*(v24*(w12*w23))))+((4.*(v12*(v24*(w12*w23))))+aux27));
    aux29=(2.*(v24*(w11*w23)))+((4.*(v11*(v24*(w11*w23))))+(((0.+4.j)*(v12*(v24*(w11*w23))))+aux28));
    aux30=(16.*(v11*(v22*(w13*(w14*w22)))))+((v24*w23)+((2.*(v11*(v24*w23)))+(((0.+2.j)*(v12*(v24*w23)))+aux29)));
    aux31=(8.*(v11*(w13*(w14*w22))))+((-16.*((v12**2)*(w13*(w14*w22))))+((8.*(v22*(w13*(w14*w22))))+aux30));
    aux32=((0.+8.j)*(v11*(v23*(w14*w22))))+((-8.*(v12*(v23*(w14*w22))))+((4.*(w13*(w14*w22)))+aux31));
    aux33=((0.+8.j)*(v11*(v24*(w13*w22))))+((-8.*(v12*(v24*(w13*w22))))+(((0.+4.j)*(v23*(w14*w22)))+aux32));
    aux34=(-8.*(v22*(v34*(w11*w22))))+((-16.*(v11*(v22*(v34*(w11*w22)))))+(((0.+4.j)*(v24*(w13*w22)))+aux33));
    aux35=(-4.*(v34*(w11*w22)))+((-8.*(v11*(v34*(w11*w22))))+((16.*((v12**2)*(v34*(w11*w22))))+aux34));
    aux36=(-8.*(v11*(v22*(v34*w22))))+((8.*(v23*(v24*(w11*w22))))+((16.*(v11*(v23*(v24*(w11*w22)))))+aux35));
    aux37=(-8.*(v11*(v34*w22)))+(((0.+-8.j)*(v12*(v34*w22)))+((8.*((v12**2)*(v34*w22)))+aux36));
    aux38=(8.*(v11*(v22*(w13*w14))))+((8.*(v11*(v23*(v24*w22))))+((-2.*(v34*w22))+aux37));
    aux39=((0.+-8.j)*(v12*(w13*w14)))+((-8.*((v12**2)*(w13*w14)))+((8.*(v22*(w13*w14)))+aux38));
    aux40=(-4.*(v22*(v23*(w12*w14))))+((-8.*(v11*(v22*(v23*(w12*w14)))))+((2.*(w13*w14))+aux39));
    aux41=((0.+-8.j)*(v12*(v23*(w12*w14))))+((8.*((v12**2)*(v23*(w12*w14))))+aux40);
    aux42=((0.+-2.j)*(v22*(v23*w14)))+((-6.*(v23*(w12*w14)))+((-12.*(v11*(v23*(w12*w14))))+aux41));
    aux43=((0.+2.j)*(v23*w14))+(((0.+6.j)*(v11*(v23*w14)))+((-8.*(v12*(v23*w14)))+aux42));
    aux44=(-4.*(v24*(w12*w13)))+((-8.*(v11*(v24*(w12*w13))))+(((0.+-8.j)*(v12*(v24*(w12*w13))))+aux43));
    aux45=((0.+2.j)*(v24*w13))+(((0.+4.j)*(v11*(v24*w13)))+((-4.*(v12*(v24*w13)))+aux44));
    aux46=(-16.*((v12**2)*(v34*(w12**2))))+((8.*(v22*(v34*(w12**2))))+((16.*(v11*(v22*(v34*(w12**2)))))+aux45));
    aux47=(-16.*(v11*(v23*(v24*(w12**2)))))+((4.*(v34*(w12**2)))+((8.*(v11*(v34*(w12**2))))+aux46));
    aux48=(16.*(v12*(v34*w12)))+(((0.+8.j)*(v22*(v34*w12)))+((-8.*(v23*(v24*(w12**2))))+aux47));
    aux49=((0.+-4.j)*(v11*(v23*(v24*w12))))+((4.*(v12*(v23*(v24*w12))))+(((0.+-8.j)*(v11*(v34*w12)))+aux48));
    aux50=(-8.*(v22*(v34*w11)))+((-8.*(v11*(v22*(v34*w11))))+(((0.+-10.j)*(v23*(v24*w12)))+aux49));
    aux51=(-2.*(v34*w11))+(((0.+8.j)*(v12*(v34*w11)))+((8.*((v12**2)*(v34*w11)))+aux50));
    aux52=(10.*(v23*(v24*w11)))+((12.*(v11*(v23*(v24*w11))))+(((0.+4.j)*(v12*(v23*(v24*w11))))+aux51));
    aux53=(-2.*(v11*v34))+((4.*((v12**2)*v34))+((-2.*(v22*v34))+((-4.*(v11*(v22*v34)))+aux52)));
    aux54=(3.*(v23*v24))+((6.*(v11*(v23*v24)))+(((0.+2.j)*(v12*(v23*v24)))+aux53));
    aux55=v12*(3.+((-2.*(w12*((0.+1.j)+(4.*w12))))+((4.*w22)+(w11*(6.+(8.*w22))))));
    aux56=(v22*((0.+2.j)+(((0.+4.j)*w11)+(4.*w12))))+(((0.+-4.j)*w22)+(2.*aux55));
    aux57=(4.*(w12*w13))+(((0.+-2.j)*(w13*(1.+(2.*w22))))+((-1.+((-2.*w11)+((0.+2.j)*w12)))*w23));
    aux58=(v23*((0.+1.j)+(((0.+6.j)*w11)+((10.*w12)+aux56))))-(((0.+1.j)+((2.*v12)+((0.+2.j)*v22)))*aux57);
    aux59=(4.*((1.+w11)*w22))+(v22*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux60=(v24*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))))+(w24+((2.*(w11*w24))+((0.+-2.j)*(w12*w24))));
    aux61=((0.+-1.j)*((1.+(2.*v22))*((1.+((2.*w11)+((0.+-2.j)*w12)))*w24)))+(-2.*(v12*((w14*((0.+1.j)+((-2.*w12)+((0.+2.j)*w22))))+aux60)));
    aux62=(4.*(v22*(w14*w22)))+((v14*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux59)))+aux61);
    aux63=((0.+4.j)*(v22*(w12*w14)))+(((0.+2.j)*(v24*w22))+((2.*(w14*w22))+aux62));
    aux64=((0.+-2.j)*(v24*w11))+((-4.*(v24*w12))+(w14+((2.*(v22*w14))+(((0.+2.j)*(w12*w14))+aux63))));
    aux65=(-2.*(v22*(w11*(1.+w22))))+((v12**2)*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))));
    aux66=(2.*(v22*(w12*((0.+1.j)+w12))))+((v12*(((0.+2.j)*w11)+((4.*w12)+((0.+-2.j)*w22))))+aux65);
    aux67=(4.*((1.+w11)*w22))+(v22*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux68=(-2.*(((w12**2)+aux66)-(w11*w22)))+(v11*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux67)));
    aux69=(-8.*(v11*(v22*(w11*(w23*w24)))))+((-2.*(v13*aux64))+(w34+(2.*((v22+(w11+(w22+aux68)))*w34))));
    aux70=(-4.*(v11*(w11*(w23*w24))))+((8.*((v12**2)*(w11*(w23*w24))))+((-4.*(v22*(w11*(w23*w24))))+aux69));
    aux71=(4.*((v12**2)*(w23*w24)))+((-4.*(v11*(v22*(w23*w24))))+((-2.*(w11*(w23*w24)))+aux70));
    aux72=(16.*(v11*(v22*(w12*(w13*w24)))))+((-4.*(v11*(w23*w24)))+(((0.+-4.j)*(v12*(w23*w24)))+aux71));
    aux73=(8.*(v11*(w12*(w13*w24))))+((-16.*((v12**2)*(w12*(w13*w24))))+((8.*(v22*(w12*(w13*w24))))+aux72));
    aux74=(8.*(v12*(w13*w24)))+(((0.+4.j)*(v22*(w13*w24)))+((4.*(w12*(w13*w24)))+aux73));
    aux75=((0.+8.j)*(v11*(v23*(w12*w24))))+((-8.*(v12*(v23*(w12*w24))))+(((0.+-4.j)*(v11*(w13*w24)))+aux74));
    aux76=(-4.*(v22*(v23*(w11*w24))))+((-8.*(v11*(v22*(v23*(w11*w24)))))+(((0.+4.j)*(v23*(w12*w24)))+aux75));
    aux77=((0.+-8.j)*(v12*(v23*(w11*w24))))+((8.*((v12**2)*(v23*(w11*w24))))+aux76);
    aux78=(-4.*(v11*(v22*(v23*w24))))+((-6.*(v23*(w11*w24)))+((-12.*(v11*(v23*(w11*w24))))+aux77));
    aux79=(-8.*(v11*(v23*w24)))+(((0.+-8.j)*(v12*(v23*w24)))+((4.*((v12**2)*(v23*w24)))+aux78));
    aux80=(4.*(v22*(w12*(w14*w23))))+((8.*(v11*(v22*(w12*(w14*w23)))))+((v14*aux58)+((-3.*(v23*w24))+aux79)));
    aux81=(2.*(w12*(w14*w23)))+((4.*(v11*(w12*(w14*w23))))+((-8.*((v12**2)*(w12*(w14*w23))))+aux80));
    aux82=((0.+-2.j)*(v11*(w14*w23)))+((4.*(v12*(w14*w23)))+(((0.+2.j)*(v22*(w14*w23)))+aux81));
    aux83=((0.+2.j)*(v24*(w12*w23)))+(((0.+4.j)*(v11*(v24*(w12*w23))))+((-4.*(v12*(v24*(w12*w23))))+aux82));
    aux84=(-2.*(v24*(w11*w23)))+((-4.*(v11*(v24*(w11*w23))))+(((0.+-4.j)*(v12*(v24*(w11*w23))))+aux83));
    aux85=(-16.*(v11*(v22*(w13*(w14*w22)))))+((-2.*(v11*(v24*w23)))+(((0.+-2.j)*(v12*(v24*w23)))+aux84));
    aux86=(-8.*(v11*(w13*(w14*w22))))+((16.*((v12**2)*(w13*(w14*w22))))+((-8.*(v22*(w13*(w14*w22))))+aux85));
    aux87=((0.+-8.j)*(v11*(v23*(w14*w22))))+((8.*(v12*(v23*(w14*w22))))+((-4.*(w13*(w14*w22)))+aux86));
    aux88=((0.+-8.j)*(v11*(v24*(w13*w22))))+((8.*(v12*(v24*(w13*w22))))+(((0.+-4.j)*(v23*(w14*w22)))+aux87));
    aux89=(8.*(v22*(v34*(w11*w22))))+((16.*(v11*(v22*(v34*(w11*w22)))))+(((0.+-4.j)*(v24*(w13*w22)))+aux88));
    aux90=(4.*(v34*(w11*w22)))+((8.*(v11*(v34*(w11*w22))))+((-16.*((v12**2)*(v34*(w11*w22))))+aux89));
    aux91=(8.*(v11*(v22*(v34*w22))))+((-8.*(v23*(v24*(w11*w22))))+((-16.*(v11*(v23*(v24*(w11*w22)))))+aux90));
    aux92=(8.*(v11*(v34*w22)))+(((0.+8.j)*(v12*(v34*w22)))+((-8.*((v12**2)*(v34*w22)))+aux91));
    aux93=(-8.*(v11*(v22*(w13*w14))))+((-8.*(v11*(v23*(v24*w22))))+((2.*(v34*w22))+aux92));
    aux94=((0.+8.j)*(v12*(w13*w14)))+((8.*((v12**2)*(w13*w14)))+((-8.*(v22*(w13*w14)))+aux93));
    aux95=(4.*(v22*(v23*(w12*w14))))+((8.*(v11*(v22*(v23*(w12*w14)))))+((-2.*(w13*w14))+aux94));
    aux96=((0.+8.j)*(v12*(v23*(w12*w14))))+((-8.*((v12**2)*(v23*(w12*w14))))+aux95);
    aux97=((0.+2.j)*(v22*(v23*w14)))+((6.*(v23*(w12*w14)))+((12.*(v11*(v23*(w12*w14))))+aux96));
    aux98=((0.+-2.j)*(v23*w14))+(((0.+-6.j)*(v11*(v23*w14)))+((8.*(v12*(v23*w14)))+aux97));
    aux99=(4.*(v24*(w12*w13)))+((8.*(v11*(v24*(w12*w13))))+(((0.+8.j)*(v12*(v24*(w12*w13))))+aux98));
    aux100=((0.+-2.j)*(v24*w13))+(((0.+-4.j)*(v11*(v24*w13)))+((4.*(v12*(v24*w13)))+aux99));
    aux101=(16.*((v12**2)*(v34*(w12**2))))+((-8.*(v22*(v34*(w12**2))))+((-16.*(v11*(v22*(v34*(w12**2)))))+aux100));
    aux102=(16.*(v11*(v23*(v24*(w12**2)))))+((-4.*(v34*(w12**2)))+((-8.*(v11*(v34*(w12**2))))+aux101));
    aux103=(-16.*(v12*(v34*w12)))+(((0.+-8.j)*(v22*(v34*w12)))+((8.*(v23*(v24*(w12**2))))+aux102));
    aux104=((0.+4.j)*(v11*(v23*(v24*w12))))+((-4.*(v12*(v23*(v24*w12))))+(((0.+8.j)*(v11*(v34*w12)))+aux103));
    aux105=(8.*(v22*(v34*w11)))+((8.*(v11*(v22*(v34*w11))))+(((0.+10.j)*(v23*(v24*w12)))+aux104));
    aux106=(2.*(v34*w11))+(((0.+-8.j)*(v12*(v34*w11)))+((-8.*((v12**2)*(v34*w11)))+aux105));
    aux107=(-12.*(v11*(v23*(v24*w11))))+(((0.+-4.j)*(v12*(v23*(v24*w11))))+aux106);
    aux108=(-4.*((v12**2)*v34))+((2.*(v22*v34))+((4.*(v11*(v22*v34)))+((-10.*(v23*(v24*w11)))+aux107)));
    aux109=(-6.*(v11*(v23*v24)))+(((0.+-2.j)*(v12*(v23*v24)))+(v34+((2.*(v11*v34))+aux108)));
    aux110=(4.*(v22*w11))+((v11*(v22*(2.+(4.*w11))))+(-2.*(v12*(v12+(2.*(((0.+1.j)+v12)*w11))))));
    aux111=4.*(u3*((1.+((-4.*(v12**2))+((2.*v22)+(v11*(2.+(4.*v22))))))*(w12**2)));
    aux112=(-4.*((v12**2)*(1.+(2.*w11))))+(4.*(v11*(1.+(v22+(w11+(2.*(v22*w11)))))));
    aux113=-2.*(u3*((1.+(((0.+4.j)*v12)+((2.*w11)+((4.*(v22*w11))+aux112))))*w22));
    aux114=(-2.*(v22*(w11*(1.+w22))))+((v12**2)*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))));
    aux115=(2.*(v22*(w12*((0.+1.j)+w12))))+((v12*(((0.+2.j)*w11)+((4.*w12)+((0.+-2.j)*w22))))+aux114);
    aux116=(4.*((1.+w11)*w22))+(v22*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux117=(-4.*(((w12**2)+aux115)-(w11*w22)))+(2.*(v11*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux116))));
    aux118=(-16.*(s1*(v11*(v22*(w13*w22)))))+(s3*(1.+((2.*v22)+((2.*w11)+((2.*w22)+aux117)))));
    aux119=(16.*(s1*((v12**2)*(w13*w22))))+((-8.*(s1*(v22*(w13*w22))))+((8.*(u1*(v22*(w13*w22))))+aux118));
    aux120=((0.+8.j)*(u2*(v11*(w13*w22))))+(((0.+-8.j)*(u1*(v12*(w13*w22))))+((-8.*(u2*(v12*(w13*w22))))+aux119));
    aux121=(4.*(u1*(w13*w22)))+(((0.+4.j)*(u2*(w13*w22)))+((-8.*(s1*(v11*(w13*w22))))+aux120));
    aux122=(-16.*(u1*(v12*(v23*(w11*w22)))))+(aux113+((-4.*(s1*(w13*w22)))+aux121));
    aux123=(16.*(u1*(v13*(v22*(w11*w22)))))+((8.*(u2*(v23*(w11*w22))))+((16.*(u2*(v11*(v23*(w11*w22)))))+aux122));
    aux124=(-8.*(u1*(v12*(v23*w22))))+((8.*(u1*(v13*(w11*w22))))+((-16.*(u2*(v12*(v13*(w11*w22)))))+aux123));
    aux125=((0.+-8.j)*(s1*(v11*(v23*w22))))+((8.*(u2*(v11*(v23*w22))))+((8.*(s1*(v12*(v23*w22))))+aux124));
    aux126=(8.*(u1*(v13*(v22*w22))))+(((0.+-4.j)*(s1*(v23*w22)))+(((0.+4.j)*(u1*(v23*w22)))+aux125));
    aux127=((0.+8.j)*(s1*(v12*(v13*w22))))+((-8.*(u2*(v12*(v13*w22))))+((-8.*(s1*(v13*(v22*w22))))+aux126));
    aux128=(-4.*(s1*(v13*w22)))+((8.*(u1*(v13*w22)))+(((0.+4.j)*(u2*(v13*w22)))+aux127));
    aux129=((0.+8.j)*(u1*(v22*(w12*w13))))+((16.*(s2*(v11*(v22*(w12*w13)))))+aux128);
    aux130=((0.+-8.j)*(u2*(v12*(w12*w13))))+((-16.*(s2*((v12**2)*(w12*w13))))+((8.*(s2*(v22*(w12*w13))))+aux129));
    aux131=(8.*(s2*(v11*(w12*w13))))+((-8.*(u2*(v11*(w12*w13))))+((8.*(u1*(v12*(w12*w13))))+aux130));
    aux132=(4.*(s2*(w12*w13)))+(((0.+4.j)*(u1*(w12*w13)))+((-4.*(u2*(w12*w13)))+aux131));
    aux133=((0.+4.j)*(s2*(v22*w13)))+((4.*(u1*(v22*w13)))+((-8.*(s1*(v11*(v22*w13))))+aux132));
    aux134=(-4.*(u2*(v12*w13)))+((8.*(s1*((v12**2)*w13)))+((-8.*(s1*(v22*w13)))+aux133));
    aux135=((0.+8.j)*(s1*(v12*w13)))+((8.*(s2*(v12*w13)))+(((0.+-4.j)*(u1*(v12*w13)))+aux134));
    aux136=((0.+2.j)*(u2*w13))+(((0.+-4.j)*(s2*(v11*w13)))+(((0.+4.j)*(u2*(v11*w13)))+aux135));
    aux137=(16.*(u1*(v12*(v23*(w12**2)))))+((-2.*(s1*w13))+((2.*(u1*w13))+aux136));
    aux138=aux111+((-8.*(u2*(v23*(w12**2))))+((-16.*(u2*(v11*(v23*(w12**2)))))+aux137));
    aux139=(16.*(u2*(v12*(v13*(w12**2)))))+((-16.*(u1*(v13*(v22*(w12**2)))))+aux138);
    aux140=(-4.*(u1*(v22*(v23*w12))))+((8.*(s1*(v11*(v22*(v23*w12)))))+((-8.*(u1*(v13*(w12**2))))+aux139));
    aux141=(4.*(u2*(v12*(v23*w12))))+((-8.*(s1*((v12**2)*(v23*w12))))+((4.*(s1*(v22*(v23*w12))))+aux140));
    aux142=((0.+8.j)*(s1*(v12*(v23*w12))))+((-8.*(s2*(v12*(v23*w12))))+(((0.+4.j)*(u1*(v12*(v23*w12))))+aux141));
    aux143=((0.+8.j)*(s2*(v11*(v23*w12))))+(((0.+-4.j)*(u2*(v11*(v23*w12))))+aux142);
    aux144=(-10.*(u1*(v23*w12)))+(((0.+-10.j)*(u2*(v23*w12)))+((12.*(s1*(v11*(v23*w12))))+aux143));
    aux145=(8.*(s2*(v13*(v22*w12))))+((6.*(s1*(v23*w12)))+(((0.+4.j)*(s2*(v23*w12)))+aux144));
    aux146=(8.*(u3*((((0.+-1.j)*v11)+((2.*v12)+((0.+1.j)*v22)))*w12)))+(((0.+-8.j)*(s1*(v13*(v22*w12))))+aux145);
    aux147=(-8.*(u2*(v13*w12)))+((-8.*(s1*(v12*(v13*w12))))+(((0.+-8.j)*(s2*(v12*(v13*w12))))+aux146));
    aux148=((0.+-4.j)*(s1*(v13*w12)))+((4.*(s2*(v13*w12)))+(((0.+8.j)*(u1*(v13*w12)))+aux147));
    aux149=(-8.*(s2*(v11*(v22*(v23*w11)))))+((-2.*(u3*(v11+(v22+(w11+aux110)))))+aux148);
    aux150=(8.*(s2*((v12**2)*(v23*w11))))+((-4.*(s2*(v22*(v23*w11))))+(((0.+-4.j)*(u1*(v22*(v23*w11))))+aux149));
    aux151=((0.+-8.j)*(s2*(v12*(v23*w11))))+((-12.*(u1*(v12*(v23*w11))))+(((0.+4.j)*(u2*(v12*(v23*w11))))+aux150));
    aux152=(10.*(u2*(v23*w11)))+((-12.*(s2*(v11*(v23*w11))))+((12.*(u2*(v11*(v23*w11))))+aux151));
    aux153=(8.*(u1*(v13*(v22*w11))))+((-6.*(s2*(v23*w11)))+(((0.+-6.j)*(u1*(v23*w11)))+aux152));
    aux154=(8.*(s2*(v12*(v13*w11))))+((-8.*(u2*(v12*(v13*w11))))+(((0.+8.j)*(s2*(v13*(v22*w11))))+aux153));
    aux155=(-4.*(s2*(v11*(v22*v23))))+(((0.+4.j)*(s2*(v13*w11)))+(((0.+-4.j)*(u2*(v13*w11)))+aux154));
    aux156=(4.*(s2*((v12**2)*v23)))+(((0.+2.j)*(s1*(v22*v23)))+(((0.+-2.j)*(u1*(v22*v23)))+aux155));
    aux157=((0.+-8.j)*(s2*(v12*v23)))+((-6.*(u1*(v12*v23)))+(((0.+2.j)*(u2*(v12*v23)))+aux156));
    aux158=(-8.*(s2*(v11*v23)))+((6.*(u2*(v11*v23)))+((8.*(s1*(v12*v23)))+aux157));
    aux159=((0.+-1.j)*(u1*v23))+((3.*(u2*v23))+(((0.+-6.j)*(s1*(v11*v23)))+aux158));
    aux160=((0.+4.j)*(s2*(v13*v22)))+((4.*(u1*(v13*v22)))+(((0.+-2.j)*(s1*v23))+((-3.*(s2*v23))+aux159)));
    aux161=(4.*(s2*(v12*v13)))+((-4.*(u2*(v12*v13)))+((-4.*(s1*(v13*v22)))+aux160));
    aux162=(-4.*((v12**2)*(1.+(2.*w11))))+(4.*(v11*(1.+(v22+(w11+(2.*(v22*w11)))))));
    aux163=u1*(((0.+1.j)+((2.*v12)+((0.+2.j)*v22)))*(1.+((2.*w11)+((0.+-2.j)*w12))));
    aux164=(-4.*(s1*((v11+((-2.*(v12**2))+(v22+(2.*(v11*v22)))))*w12)))+(-2.*(s1*((2.*v12)+(((0.+1.j)*v22)+w12))));
    aux165=(s2*(1.+(((0.+4.j)*v12)+((2.*w11)+((4.*(v22*w11))+aux162)))))+(aux163+(((0.+2.j)*(u2*((1.+((2.*v11)+((0.+2.j)*v12)))*w12)))+aux164));
    aux166=(((0.+2.j)*(s1*v11))+aux165)-(u2*((1.+((2.*v11)+((0.+2.j)*v12)))*(1.+(2.*w11))));
    aux167=((2.*(((((0.+1.j)*s2)+u1)-s1)*v13))+(((0.+4.j)*(s1*(v12*v13)))+aux161))-(aux166*w23);
    aux168=(u4*((((-3.*(v23*v24))+aux109)-(w23*w24))-(v24*w23)))+((aux167-u3)*w44);
    aux169=(-16.*(s1*(v11*(v22*(w12*(w24*w34))))))+((s4*((aux54-w34)-v34))+aux168);
    aux170=(-8.*(s1*(v22*(w12*(w24*w34)))))+((8.*(u1*(v22*(w12*(w24*w34)))))+aux169);
    aux171=(-8.*(u2*(v12*(w12*(w24*w34)))))+((16.*(s1*((v12**2)*(w12*(w24*w34)))))+aux170);
    aux172=((0.+8.j)*(u2*(v11*(w12*(w24*w34)))))+(((0.+-8.j)*(u1*(v12*(w12*(w24*w34)))))+aux171);
    aux173=((0.+4.j)*(u2*(w12*(w24*w34))))+((-8.*(s1*(v11*(w12*(w24*w34)))))+aux172);
    aux174=(16.*(s2*(v11*(v22*(w11*(w24*w34))))))+((-4.*(s1*(w12*(w24*w34))))+((4.*(u1*(w12*(w24*w34))))+aux173));
    aux175=(8.*(s2*(v22*(w11*(w24*w34)))))+(((0.+8.j)*(u1*(v22*(w11*(w24*w34)))))+aux174);
    aux176=((0.+-8.j)*(u2*(v12*(w11*(w24*w34)))))+((-16.*(s2*((v12**2)*(w11*(w24*w34)))))+aux175);
    aux177=(-8.*(u2*(v11*(w11*(w24*w34)))))+((8.*(u1*(v12*(w11*(w24*w34)))))+aux176);
    aux178=((0.+4.j)*(u1*(w11*(w24*w34))))+((-4.*(u2*(w11*(w24*w34))))+((8.*(s2*(v11*(w11*(w24*w34)))))+aux177));
    aux179=((0.+4.j)*(u1*(v22*(w24*w34))))+((8.*(s2*(v11*(v22*(w24*w34)))))+((4.*(s2*(w11*(w24*w34))))+aux178));
    aux180=(-8.*(s2*((v12**2)*(w24*w34))))+(((0.+-4.j)*(s1*(v22*(w24*w34))))+aux179);
    aux181=((0.+8.j)*(s2*(v12*(w24*w34))))+((4.*(u1*(v12*(w24*w34))))+(((0.+-4.j)*(u2*(v12*(w24*w34))))+aux180));
    aux182=(8.*(s2*(v11*(w24*w34))))+((-4.*(u2*(v11*(w24*w34))))+((-8.*(s1*(v12*(w24*w34))))+aux181));
    aux183=((0.+2.j)*(u1*(w24*w34)))+((-2.*(u2*(w24*w34)))+(((0.+4.j)*(s1*(v11*(w24*w34))))+aux182));
    aux184=(-8.*(u1*(v22*(w14*(w22*w34)))))+((16.*(s1*(v11*(v22*(w14*(w22*w34))))))+((2.*(s2*(w24*w34)))+aux183));
    aux185=(-16.*(s1*((v12**2)*(w14*(w22*w34)))))+((8.*(s1*(v22*(w14*(w22*w34)))))+aux184);
    aux186=((0.+8.j)*(u1*(v12*(w14*(w22*w34)))))+((8.*(u2*(v12*(w14*(w22*w34)))))+aux185);
    aux187=(8.*(s1*(v11*(w14*(w22*w34)))))+(((0.+-8.j)*(u2*(v11*(w14*(w22*w34)))))+aux186);
    aux188=(4.*(s1*(w14*(w22*w34))))+((-4.*(u1*(w14*(w22*w34))))+(((0.+-4.j)*(u2*(w14*(w22*w34))))+aux187));
    aux189=(-16.*(u2*(v11*(v24*(w11*(w22*w34))))))+((16.*(u1*(v12*(v24*(w11*(w22*w34))))))+aux188);
    aux190=(-16.*(u1*(v14*(v22*(w11*(w22*w34))))))+((-8.*(u2*(v24*(w11*(w22*w34)))))+aux189);
    aux191=(-8.*(u1*(v14*(w11*(w22*w34)))))+((16.*(u2*(v12*(v14*(w11*(w22*w34))))))+aux190);
    aux192=(-8.*(s1*(v12*(v24*(w22*w34)))))+((8.*(u1*(v12*(v24*(w22*w34)))))+aux191);
    aux193=((0.+8.j)*(s1*(v11*(v24*(w22*w34)))))+((-8.*(u2*(v11*(v24*(w22*w34)))))+aux192);
    aux194=((0.+4.j)*(s1*(v24*(w22*w34))))+(((0.+-4.j)*(u1*(v24*(w22*w34))))+aux193);
    aux195=(8.*(s1*(v14*(v22*(w22*w34)))))+((-8.*(u1*(v14*(v22*(w22*w34)))))+aux194);
    aux196=((0.+-8.j)*(s1*(v12*(v14*(w22*w34)))))+((8.*(u2*(v12*(v14*(w22*w34)))))+aux195);
    aux197=(4.*(s1*(v14*(w22*w34))))+((-8.*(u1*(v14*(w22*w34))))+(((0.+-4.j)*(u2*(v14*(w22*w34))))+aux196));
    aux198=((0.+-8.j)*(u1*(v22*(w12*(w14*w34)))))+((-16.*(s2*(v11*(v22*(w12*(w14*w34))))))+aux197);
    aux199=(16.*(s2*((v12**2)*(w12*(w14*w34)))))+((-8.*(s2*(v22*(w12*(w14*w34)))))+aux198);
    aux200=(-8.*(u1*(v12*(w12*(w14*w34)))))+(((0.+8.j)*(u2*(v12*(w12*(w14*w34)))))+aux199);
    aux201=(-8.*(s2*(v11*(w12*(w14*w34)))))+((8.*(u2*(v11*(w12*(w14*w34)))))+aux200);
    aux202=(-4.*(s2*(w12*(w14*w34))))+(((0.+-4.j)*(u1*(w12*(w14*w34))))+((4.*(u2*(w12*(w14*w34))))+aux201));
    aux203=((0.+-4.j)*(s2*(v22*(w14*w34))))+((-4.*(u1*(v22*(w14*w34))))+((8.*(s1*(v11*(v22*(w14*w34)))))+aux202));
    aux204=(4.*(u2*(v12*(w14*w34))))+((-8.*(s1*((v12**2)*(w14*w34))))+((8.*(s1*(v22*(w14*w34))))+aux203));
    aux205=((0.+-8.j)*(s1*(v12*(w14*w34))))+((-8.*(s2*(v12*(w14*w34))))+(((0.+4.j)*(u1*(v12*(w14*w34))))+aux204));
    aux206=((0.+4.j)*(s2*(v11*(w14*w34))))+(((0.+-4.j)*(u2*(v11*(w14*w34))))+aux205);
    aux207=(2.*(s1*(w14*w34)))+((-2.*(u1*(w14*w34)))+(((0.+-2.j)*(u2*(w14*w34)))+aux206));
    aux208=(16.*(u2*(v11*(v24*((w12**2)*w34)))))+((-16.*(u1*(v12*(v24*((w12**2)*w34)))))+aux207);
    aux209=(16.*(u1*(v14*(v22*((w12**2)*w34)))))+((8.*(u2*(v24*((w12**2)*w34))))+aux208);
    aux210=(8.*(u1*(v14*((w12**2)*w34))))+((-16.*(u2*(v12*(v14*((w12**2)*w34)))))+aux209);
    aux211=((0.+-8.j)*(s1*(v12*(v24*(w12*w34)))))+((8.*(s2*(v12*(v24*(w12*w34)))))+aux210);
    aux212=(-8.*(s1*(v11*(v24*(w12*w34)))))+(((0.+-8.j)*(s2*(v11*(v24*(w12*w34)))))+aux211);
    aux213=((0.+-4.j)*(s2*(v24*(w12*w34))))+((8.*(u1*(v24*(w12*w34))))+(((0.+8.j)*(u2*(v24*(w12*w34))))+aux212));
    aux214=((0.+8.j)*(s1*(v14*(v22*(w12*w34)))))+((-8.*(s2*(v14*(v22*(w12*w34)))))+((-4.*(s1*(v24*(w12*w34))))+aux213));
    aux215=(8.*(s1*(v12*(v14*(w12*w34)))))+(((0.+8.j)*(s2*(v12*(v14*(w12*w34)))))+aux214);
    aux216=(-4.*(s2*(v14*(w12*w34))))+(((0.+-8.j)*(u1*(v14*(w12*w34))))+((8.*(u2*(v14*(w12*w34))))+aux215));
    aux217=(8.*(u1*(v12*(v24*(w11*w34)))))+(((0.+4.j)*(s1*(v14*(w12*w34))))+aux216);
    aux218=(-8.*(u2*(v11*(v24*(w11*w34)))))+(((0.+8.j)*(s2*(v12*(v24*(w11*w34)))))+aux217);
    aux219=((0.+4.j)*(u1*(v24*(w11*w34))))+((-8.*(u2*(v24*(w11*w34))))+((8.*(s2*(v11*(v24*(w11*w34)))))+aux218));
    aux220=((0.+-8.j)*(s2*(v14*(v22*(w11*w34)))))+((-8.*(u1*(v14*(v22*(w11*w34)))))+((4.*(s2*(v24*(w11*w34))))+aux219));
    aux221=(-8.*(s2*(v12*(v14*(w11*w34)))))+((8.*(u2*(v12*(v14*(w11*w34)))))+aux220);
    aux222=((0.+-4.j)*(s2*(v14*(w11*w34))))+(((0.+4.j)*(u2*(v14*(w11*w34))))+aux221);
    aux223=(-4.*(s1*(v12*(v24*w34))))+(((0.+4.j)*(s2*(v12*(v24*w34))))+((4.*(u1*(v12*(v24*w34))))+aux222));
    aux224=((0.+4.j)*(s1*(v11*(v24*w34))))+((4.*(s2*(v11*(v24*w34))))+((-4.*(u2*(v11*(v24*w34))))+aux223));
    aux225=((0.+2.j)*(s1*(v24*w34)))+((2.*(s2*(v24*w34)))+((-2.*(u2*(v24*w34)))+aux224));
    aux226=(4.*(s1*(v14*(v22*w34))))+(((0.+-4.j)*(s2*(v14*(v22*w34))))+((-4.*(u1*(v14*(v22*w34))))+aux225));
    aux227=((0.+-4.j)*(s1*(v12*(v14*w34))))+((-4.*(s2*(v12*(v14*w34))))+((4.*(u2*(v12*(v14*w34))))+aux226));
    aux228=(2.*(s1*(v14*w34)))+(((0.+-2.j)*(s2*(v14*w34)))+((-2.*(u1*(v14*w34)))+aux227));
    aux229=(-8.*(u1*(v22*(w13*(w24**2)))))+((16.*(s1*(v11*(v22*(w13*(w24**2))))))+aux228);
    aux230=(-16.*(s1*((v12**2)*(w13*(w24**2)))))+((8.*(s1*(v22*(w13*(w24**2)))))+aux229);
    aux231=((0.+8.j)*(u1*(v12*(w13*(w24**2)))))+((8.*(u2*(v12*(w13*(w24**2)))))+aux230);
    aux232=(8.*(s1*(v11*(w13*(w24**2)))))+(((0.+-8.j)*(u2*(v11*(w13*(w24**2)))))+aux231);
    aux233=(4.*(s1*(w13*(w24**2))))+((-4.*(u1*(w13*(w24**2))))+(((0.+-4.j)*(u2*(w13*(w24**2))))+aux232));
    aux234=(-16.*(u2*(v11*(v23*(w11*(w24**2))))))+((16.*(u1*(v12*(v23*(w11*(w24**2))))))+aux233);
    aux235=(-16.*(u1*(v13*(v22*(w11*(w24**2))))))+((-8.*(u2*(v23*(w11*(w24**2)))))+aux234);
    aux236=(-16.*(s3*(v11*(v22*(w11*(w24**2))))))+((16.*(u3*(v11*(v22*(w11*(w24**2))))))+aux235);
    aux237=(-8.*(s3*(v22*(w11*(w24**2)))))+((8.*(u3*(v22*(w11*(w24**2)))))+aux236);
    aux238=(-8.*(u1*(v13*(w11*(w24**2)))))+((16.*(u2*(v12*(v13*(w11*(w24**2))))))+aux237);
    aux239=(16.*(s3*((v12**2)*(w11*(w24**2)))))+((-16.*(u3*((v12**2)*(w11*(w24**2)))))+aux238);
    aux240=(-8.*(s3*(v11*(w11*(w24**2)))))+((8.*(u3*(v11*(w11*(w24**2)))))+aux239);
    aux241=(8.*(u1*(v12*(v23*(w24**2)))))+((-4.*(s3*(w11*(w24**2))))+((4.*(u3*(w11*(w24**2))))+aux240));
    aux242=(-8.*(u2*(v11*(v23*(w24**2)))))+((-8.*(s1*(v12*(v23*(w24**2)))))+aux241);
    aux243=((0.+-4.j)*(u1*(v23*(w24**2))))+(((0.+8.j)*(s1*(v11*(v23*(w24**2)))))+aux242);
    aux244=(-8.*(u1*(v13*(v22*(w24**2)))))+(((0.+4.j)*(s1*(v23*(w24**2))))+aux243);
    aux245=(-8.*(s3*(v11*(v22*(w24**2)))))+((8.*(u3*(v11*(v22*(w24**2)))))+((8.*(s1*(v13*(v22*(w24**2)))))+aux244));
    aux246=((0.+-8.j)*(s1*(v12*(v13*(w24**2)))))+((8.*(u2*(v12*(v13*(w24**2)))))+aux245);
    aux247=(4.*(s1*(v13*(w24**2))))+((-8.*(u1*(v13*(w24**2))))+(((0.+-4.j)*(u2*(v13*(w24**2))))+aux246));
    aux248=((0.+8.j)*(u3*(v12*(w24**2))))+((8.*(s3*((v12**2)*(w24**2))))+((-8.*(u3*((v12**2)*(w24**2))))+aux247));
    aux249=(-8.*(s3*(v11*(w24**2))))+((8.*(u3*(v11*(w24**2))))+(((0.+-8.j)*(s3*(v12*(w24**2))))+aux248));
    aux250=(-8.*(s1*(v11*(v22*(w14*(w23*w24))))))+((-2.*(s3*(w24**2)))+((2.*(u3*(w24**2)))+aux249));
    aux251=(-4.*(s1*(v22*(w14*(w23*w24)))))+((4.*(u1*(v22*(w14*(w23*w24)))))+aux250);
    aux252=(-4.*(u2*(v12*(w14*(w23*w24)))))+((8.*(s1*((v12**2)*(w14*(w23*w24)))))+aux251);
    aux253=((0.+4.j)*(u2*(v11*(w14*(w23*w24)))))+(((0.+-4.j)*(u1*(v12*(w14*(w23*w24)))))+aux252);
    aux254=((0.+2.j)*(u2*(w14*(w23*w24))))+((-4.*(s1*(v11*(w14*(w23*w24)))))+aux253);
    aux255=(-8.*(u1*(v12*(v24*(w11*(w23*w24))))))+((-2.*(s1*(w14*(w23*w24))))+((2.*(u1*(w14*(w23*w24))))+aux254));
    aux256=(4.*(u2*(v24*(w11*(w23*w24)))))+((8.*(u2*(v11*(v24*(w11*(w23*w24))))))+aux255);
    aux257=(-8.*(u2*(v12*(v14*(w11*(w23*w24))))))+((8.*(u1*(v14*(v22*(w11*(w23*w24))))))+aux256);
    aux258=(-4.*(u1*(v12*(v24*(w23*w24)))))+((4.*(u1*(v14*(w11*(w23*w24)))))+aux257);
    aux259=(4.*(u2*(v11*(v24*(w23*w24)))))+((4.*(s1*(v12*(v24*(w23*w24)))))+aux258);
    aux260=((0.+2.j)*(u1*(v24*(w23*w24))))+(((0.+-4.j)*(s1*(v11*(v24*(w23*w24)))))+aux259);
    aux261=(4.*(u1*(v14*(v22*(w23*w24)))))+(((0.+-2.j)*(s1*(v24*(w23*w24))))+aux260);
    aux262=(-4.*(u2*(v12*(v14*(w23*w24)))))+((-4.*(s1*(v14*(v22*(w23*w24)))))+aux261);
    aux263=((0.+2.j)*(u2*(v14*(w23*w24))))+(((0.+4.j)*(s1*(v12*(v14*(w23*w24)))))+aux262);
    aux264=(-16.*(s2*(v11*(v22*(w13*(w14*w24))))))+((-2.*(s1*(v14*(w23*w24))))+((4.*(u1*(v14*(w23*w24))))+aux263));
    aux265=(-8.*(s2*(v22*(w13*(w14*w24)))))+(((0.+-8.j)*(u1*(v22*(w13*(w14*w24)))))+aux264);
    aux266=((0.+8.j)*(u2*(v12*(w13*(w14*w24)))))+((16.*(s2*((v12**2)*(w13*(w14*w24)))))+aux265);
    aux267=(8.*(u2*(v11*(w13*(w14*w24)))))+((-8.*(u1*(v12*(w13*(w14*w24)))))+aux266);
    aux268=((0.+-4.j)*(u1*(w13*(w14*w24))))+((4.*(u2*(w13*(w14*w24))))+((-8.*(s2*(v11*(w13*(w14*w24)))))+aux267));
    aux269=(-32.*(u1*(v12*(v23*(w12*(w14*w24))))))+((-4.*(s2*(w13*(w14*w24))))+aux268);
    aux270=(16.*(u2*(v23*(w12*(w14*w24)))))+((32.*(u2*(v11*(v23*(w12*(w14*w24))))))+aux269);
    aux271=(-32.*(u3*(v11*(v22*(w12*(w14*w24))))))+((32.*(u1*(v13*(v22*(w12*(w14*w24))))))+aux270);
    aux272=(-16.*(u3*(v22*(w12*(w14*w24)))))+((32.*(s3*(v11*(v22*(w12*(w14*w24))))))+aux271);
    aux273=(-32.*(u2*(v12*(v13*(w12*(w14*w24))))))+((16.*(s3*(v22*(w12*(w14*w24)))))+aux272);
    aux274=(32.*(u3*((v12**2)*(w12*(w14*w24)))))+((16.*(u1*(v13*(w12*(w14*w24)))))+aux273);
    aux275=(-16.*(u3*(v11*(w12*(w14*w24)))))+((-32.*(s3*((v12**2)*(w12*(w14*w24)))))+aux274);
    aux276=(8.*(s3*(w12*(w14*w24))))+((-8.*(u3*(w12*(w14*w24))))+((16.*(s3*(v11*(w12*(w14*w24)))))+aux275));
    aux277=(4.*(u1*(v22*(v23*(w14*w24)))))+((-8.*(s1*(v11*(v22*(v23*(w14*w24))))))+aux276);
    aux278=(8.*(s1*((v12**2)*(v23*(w14*w24)))))+((-4.*(s1*(v22*(v23*(w14*w24)))))+aux277);
    aux279=((0.+-4.j)*(u1*(v12*(v23*(w14*w24)))))+((-4.*(u2*(v12*(v23*(w14*w24)))))+aux278);
    aux280=((0.+-8.j)*(s1*(v12*(v23*(w14*w24)))))+((8.*(s2*(v12*(v23*(w14*w24)))))+aux279);
    aux281=((0.+-8.j)*(s2*(v11*(v23*(w14*w24)))))+(((0.+4.j)*(u2*(v11*(v23*(w14*w24)))))+aux280);
    aux282=((0.+10.j)*(u2*(v23*(w14*w24))))+((-12.*(s1*(v11*(v23*(w14*w24)))))+aux281);
    aux283=(-6.*(s1*(v23*(w14*w24))))+(((0.+-4.j)*(s2*(v23*(w14*w24))))+((10.*(u1*(v23*(w14*w24))))+aux282));
    aux284=((0.+8.j)*(s1*(v13*(v22*(w14*w24)))))+((-8.*(s2*(v13*(v22*(w14*w24)))))+aux283);
    aux285=((0.+8.j)*(s3*(v22*(w14*w24))))+(((0.+-8.j)*(u3*(v22*(w14*w24))))+aux284);
    aux286=(8.*(s1*(v12*(v13*(w14*w24)))))+(((0.+8.j)*(s2*(v12*(v13*(w14*w24)))))+aux285);
    aux287=(-4.*(s2*(v13*(w14*w24))))+(((0.+-8.j)*(u1*(v13*(w14*w24))))+((8.*(u2*(v13*(w14*w24))))+aux286));
    aux288=(16.*(s3*(v12*(w14*w24))))+((-16.*(u3*(v12*(w14*w24))))+(((0.+4.j)*(s1*(v13*(w14*w24))))+aux287));
    aux289=((0.+-8.j)*(s3*(v11*(w14*w24))))+(((0.+8.j)*(u3*(v11*(w14*w24))))+aux288);
    aux290=(-16.*(u2*(v11*(v24*(w12*(w13*w24))))))+((16.*(u1*(v12*(v24*(w12*(w13*w24))))))+aux289);
    aux291=(-16.*(u1*(v14*(v22*(w12*(w13*w24))))))+((-8.*(u2*(v24*(w12*(w13*w24)))))+aux290);
    aux292=(-8.*(u1*(v14*(w12*(w13*w24)))))+((16.*(u2*(v12*(v14*(w12*(w13*w24))))))+aux291);
    aux293=((0.+16.j)*(s1*(v12*(v24*(w13*w24)))))+((8.*(s2*(v12*(v24*(w13*w24)))))+aux292);
    aux294=(16.*(s1*(v11*(v24*(w13*w24)))))+(((0.+-8.j)*(s2*(v11*(v24*(w13*w24)))))+aux293);
    aux295=((0.+-4.j)*(s2*(v24*(w13*w24))))+((-4.*(u1*(v24*(w13*w24))))+(((0.+-4.j)*(u2*(v24*(w13*w24))))+aux294));
    aux296=((0.+-16.j)*(s1*(v14*(v22*(w13*w24)))))+((-8.*(s2*(v14*(v22*(w13*w24)))))+((8.*(s1*(v24*(w13*w24))))+aux295));
    aux297=(-16.*(s1*(v12*(v14*(w13*w24)))))+(((0.+8.j)*(s2*(v12*(v14*(w13*w24)))))+aux296);
    aux298=(-4.*(s2*(v14*(w13*w24))))+(((0.+4.j)*(u1*(v14*(w13*w24))))+((-4.*(u2*(v14*(w13*w24))))+aux297));
    aux299=(-16.*(s1*(v11*(v22*(v34*(w12*w24))))))+(((0.+-8.j)*(s1*(v14*(w13*w24))))+aux298);
    aux300=(-8.*(s1*(v22*(v34*(w12*w24)))))+((8.*(u1*(v22*(v34*(w12*w24)))))+aux299);
    aux301=(-8.*(u2*(v12*(v34*(w12*w24)))))+((16.*(s1*((v12**2)*(v34*(w12*w24)))))+aux300);
    aux302=((0.+8.j)*(u2*(v11*(v34*(w12*w24)))))+(((0.+-8.j)*(u1*(v12*(v34*(w12*w24)))))+aux301);
    aux303=((0.+4.j)*(u2*(v34*(w12*w24))))+((-8.*(s1*(v11*(v34*(w12*w24)))))+aux302);
    aux304=(16.*(s1*(v11*(v23*(v24*(w12*w24))))))+((-4.*(s1*(v34*(w12*w24))))+((4.*(u1*(v34*(w12*w24))))+aux303));
    aux305=(8.*(s1*(v23*(v24*(w12*w24)))))+((-8.*(u1*(v23*(v24*(w12*w24)))))+aux304);
    aux306=(-8.*(u2*(v13*(v24*(w12*w24)))))+((-16.*(s1*(v12*(v13*(v24*(w12*w24))))))+aux305);
    aux307=(16.*(u3*(v12*(v24*(w12*w24)))))+(((0.+16.j)*(u1*(v13*(v24*(w12*w24)))))+aux306);
    aux308=((0.+-16.j)*(u3*(v11*(v24*(w12*w24)))))+((-16.*(s3*(v12*(v24*(w12*w24)))))+aux307);
    aux309=((0.+-8.j)*(u3*(v24*(w12*w24))))+(((0.+16.j)*(s3*(v11*(v24*(w12*w24)))))+aux308);
    aux310=(-16.*(s1*(v12*(v14*(v23*(w12*w24))))))+(((0.+8.j)*(s3*(v24*(w12*w24))))+aux309);
    aux311=((0.+-8.j)*(u1*(v14*(v23*(w12*w24)))))+((16.*(u2*(v14*(v23*(w12*w24)))))+aux310);
    aux312=(-16.*(u3*(v14*(v22*(w12*w24)))))+((16.*(s1*(v13*(v14*(v22*(w12*w24))))))+aux311);
    aux313=((0.+-8.j)*(u2*(v13*(v14*(w12*w24)))))+((16.*(s3*(v14*(v22*(w12*w24)))))+aux312);
    aux314=((0.+16.j)*(u3*(v12*(v14*(w12*w24)))))+((8.*(s1*(v13*(v14*(w12*w24)))))+aux313);
    aux315=(-8.*(u3*(v14*(w12*w24))))+(((0.+-16.j)*(s3*(v12*(v14*(w12*w24)))))+aux314);
    aux316=(16.*(s2*(v11*(v22*(v34*(w11*w24))))))+((8.*(s3*(v14*(w12*w24))))+aux315);
    aux317=(8.*(s2*(v22*(v34*(w11*w24)))))+(((0.+8.j)*(u1*(v22*(v34*(w11*w24)))))+aux316);
    aux318=((0.+-8.j)*(u2*(v12*(v34*(w11*w24)))))+((-16.*(s2*((v12**2)*(v34*(w11*w24)))))+aux317);
    aux319=(-8.*(u2*(v11*(v34*(w11*w24)))))+((8.*(u1*(v12*(v34*(w11*w24)))))+aux318);
    aux320=((0.+4.j)*(u1*(v34*(w11*w24))))+((-4.*(u2*(v34*(w11*w24))))+((8.*(s2*(v11*(v34*(w11*w24)))))+aux319));
    aux321=(-8.*(u1*(v12*(v23*(v24*(w11*w24))))))+((4.*(s2*(v34*(w11*w24))))+aux320);
    aux322=(-16.*(s2*(v11*(v23*(v24*(w11*w24))))))+((8.*(u2*(v11*(v23*(v24*(w11*w24))))))+aux321);
    aux323=((0.+-8.j)*(u1*(v23*(v24*(w11*w24)))))+((4.*(u2*(v23*(v24*(w11*w24)))))+aux322);
    aux324=(16.*(s2*(v12*(v13*(v24*(w11*w24))))))+((-8.*(s2*(v23*(v24*(w11*w24)))))+aux323);
    aux325=(-16.*(u1*(v13*(v24*(w11*w24)))))+(((0.+-8.j)*(u2*(v13*(v24*(w11*w24)))))+aux324);
    aux326=((0.+-16.j)*(s3*(v12*(v24*(w11*w24)))))+(((0.+16.j)*(u3*(v12*(v24*(w11*w24)))))+aux325);
    aux327=(-16.*(s3*(v11*(v24*(w11*w24)))))+((16.*(u3*(v11*(v24*(w11*w24)))))+aux326);
    aux328=(8.*(u1*(v14*(v22*(v23*(w11*w24))))))+((-8.*(s3*(v24*(w11*w24))))+((8.*(u3*(v24*(w11*w24))))+aux327));
    aux329=(16.*(s2*(v12*(v14*(v23*(w11*w24))))))+((-8.*(u2*(v12*(v14*(v23*(w11*w24))))))+aux328);
    aux330=(12.*(u1*(v14*(v23*(w11*w24)))))+(((0.+16.j)*(u2*(v14*(v23*(w11*w24)))))+aux329);
    aux331=((0.+-16.j)*(u3*(v14*(v22*(w11*w24)))))+((-16.*(s2*(v13*(v14*(v22*(w11*w24))))))+aux330);
    aux332=(8.*(u2*(v13*(v14*(w11*w24)))))+(((0.+16.j)*(s3*(v14*(v22*(w11*w24)))))+aux331);
    aux333=(-16.*(u3*(v12*(v14*(w11*w24)))))+((-8.*(s2*(v13*(v14*(w11*w24)))))+aux332);
    aux334=((0.+-8.j)*(u3*(v14*(w11*w24))))+((16.*(s3*(v12*(v14*(w11*w24)))))+aux333);
    aux335=(8.*(s2*(v11*(v22*(v34*w24)))))+(((0.+8.j)*(s3*(v14*(w11*w24))))+aux334);
    aux336=((0.+-4.j)*(s1*(v22*(v34*w24))))+(((0.+4.j)*(u1*(v22*(v34*w24))))+aux335);
    aux337=((0.+-4.j)*(u2*(v12*(v34*w24))))+((-8.*(s2*((v12**2)*(v34*w24))))+aux336);
    aux338=(-8.*(s1*(v12*(v34*w24))))+(((0.+8.j)*(s2*(v12*(v34*w24))))+((4.*(u1*(v12*(v34*w24))))+aux337));
    aux339=((0.+4.j)*(s1*(v11*(v34*w24))))+((8.*(s2*(v11*(v34*w24))))+((-4.*(u2*(v11*(v34*w24))))+aux338));
    aux340=(2.*(s2*(v34*w24)))+(((0.+2.j)*(u1*(v34*w24)))+((-2.*(u2*(v34*w24)))+aux339));
    aux341=(4.*(s1*(v12*(v23*(v24*w24)))))+((-4.*(u1*(v12*(v23*(v24*w24)))))+aux340);
    aux342=(-8.*(s2*(v11*(v23*(v24*w24)))))+((4.*(u2*(v11*(v23*(v24*w24)))))+aux341);
    aux343=((0.+-2.j)*(u1*(v23*(v24*w24))))+(((0.+-4.j)*(s1*(v11*(v23*(v24*w24)))))+aux342);
    aux344=(8.*(s2*(v12*(v13*(v24*w24)))))+(((0.+2.j)*(s1*(v23*(v24*w24))))+aux343);
    aux345=((0.+-4.j)*(s2*(v13*(v24*w24))))+((-8.*(u1*(v13*(v24*w24))))+(((0.+-4.j)*(u2*(v13*(v24*w24))))+aux344));
    aux346=((0.+-8.j)*(s3*(v12*(v24*w24))))+(((0.+8.j)*(u3*(v12*(v24*w24))))+((4.*(s1*(v13*(v24*w24))))+aux345));
    aux347=(4.*(u3*(v24*w24)))+((-8.*(s3*(v11*(v24*w24))))+((8.*(u3*(v11*(v24*w24))))+aux346));
    aux348=(-4.*(s1*(v14*(v22*(v23*w24)))))+((4.*(u1*(v14*(v22*(v23*w24)))))+((-4.*(s3*(v24*w24)))+aux347));
    aux349=(8.*(s2*(v12*(v14*(v23*w24)))))+((-4.*(u2*(v12*(v14*(v23*w24)))))+aux348);
    aux350=((0.+10.j)*(u2*(v14*(v23*w24))))+(((0.+4.j)*(s1*(v12*(v14*(v23*w24)))))+aux349);
    aux351=(2.*(s1*(v14*(v23*w24))))+(((0.+-4.j)*(s2*(v14*(v23*w24))))+((8.*(u1*(v14*(v23*w24))))+aux350));
    aux352=((0.+-8.j)*(u3*(v14*(v22*w24))))+((-8.*(s2*(v13*(v14*(v22*w24)))))+aux351);
    aux353=(-8.*(s2*(v13*(v14*w24))))+((4.*(u2*(v13*(v14*w24))))+(((0.+8.j)*(s3*(v14*(v22*w24))))+aux352));
    aux354=(8.*(s3*(v12*(v14*w24))))+((-8.*(u3*(v12*(v14*w24))))+(((0.+-4.j)*(s1*(v13*(v14*w24))))+aux353));
    aux355=(8.*(s2*(v11*(v22*((w14**2)*w23)))))+(((0.+4.j)*(s3*(v14*w24)))+(((0.+-4.j)*(u3*(v14*w24)))+aux354));
    aux356=(4.*(s2*(v22*((w14**2)*w23))))+(((0.+4.j)*(u1*(v22*((w14**2)*w23))))+aux355);
    aux357=((0.+-4.j)*(u2*(v12*((w14**2)*w23))))+((-8.*(s2*((v12**2)*((w14**2)*w23))))+aux356);
    aux358=(-4.*(u2*(v11*((w14**2)*w23))))+((4.*(u1*(v12*((w14**2)*w23))))+aux357);
    aux359=((0.+2.j)*(u1*((w14**2)*w23)))+((-2.*(u2*((w14**2)*w23)))+((4.*(s2*(v11*((w14**2)*w23))))+aux358));
    aux360=(8.*(u1*(v12*(v24*(w12*(w14*w23))))))+((2.*(s2*((w14**2)*w23)))+aux359);
    aux361=(-4.*(u2*(v24*(w12*(w14*w23)))))+((-8.*(u2*(v11*(v24*(w12*(w14*w23))))))+aux360);
    aux362=(8.*(u2*(v12*(v14*(w12*(w14*w23))))))+((-8.*(u1*(v14*(v22*(w12*(w14*w23))))))+aux361);
    aux363=(-8.*(s2*(v12*(v24*(w14*w23)))))+((-4.*(u1*(v14*(w12*(w14*w23)))))+aux362);
    aux364=((0.+8.j)*(s2*(v11*(v24*(w14*w23)))))+(((0.+-4.j)*(s1*(v12*(v24*(w14*w23)))))+aux363);
    aux365=((0.+-2.j)*(u2*(v24*(w14*w23))))+((-4.*(s1*(v11*(v24*(w14*w23)))))+aux364);
    aux366=(-2.*(s1*(v24*(w14*w23))))+(((0.+4.j)*(s2*(v24*(w14*w23))))+((-2.*(u1*(v24*(w14*w23))))+aux365));
    aux367=((0.+4.j)*(s1*(v14*(v22*(w14*w23)))))+((8.*(s2*(v14*(v22*(w14*w23)))))+aux366);
    aux368=(4.*(s1*(v12*(v14*(w14*w23)))))+(((0.+-8.j)*(s2*(v12*(v14*(w14*w23)))))+aux367);
    aux369=(4.*(s2*(v14*(w14*w23))))+(((0.+2.j)*(u1*(v14*(w14*w23))))+((-2.*(u2*(v14*(w14*w23))))+aux368));
    aux370=(8.*(s1*(v11*(v22*(v44*(w12*w23))))))+(((0.+2.j)*(s1*(v14*(w14*w23))))+aux369);
    aux371=(4.*(s1*(v22*(v44*(w12*w23)))))+((-4.*(u1*(v22*(v44*(w12*w23)))))+aux370);
    aux372=(4.*(u2*(v12*(v44*(w12*w23)))))+((-8.*(s1*((v12**2)*(v44*(w12*w23)))))+aux371);
    aux373=((0.+-4.j)*(u2*(v11*(v44*(w12*w23)))))+(((0.+4.j)*(u1*(v12*(v44*(w12*w23)))))+aux372);
    aux374=((0.+-2.j)*(u2*(v44*(w12*w23))))+((4.*(s1*(v11*(v44*(w12*w23)))))+aux373);
    aux375=(-8.*(s1*(v11*((v24**2)*(w12*w23)))))+((2.*(s1*(v44*(w12*w23))))+((-2.*(u1*(v44*(w12*w23))))+aux374));
    aux376=(-4.*(s1*((v24**2)*(w12*w23))))+((4.*(u1*((v24**2)*(w12*w23))))+aux375);
    aux377=(-4.*(u2*(v14*(v24*(w12*w23)))))+((16.*(s1*(v12*(v14*(v24*(w12*w23))))))+aux376);
    aux378=(-8.*(s1*((v14**2)*(v22*(w12*w23)))))+(((0.+-4.j)*(u1*(v14*(v24*(w12*w23)))))+aux377);
    aux379=(-4.*(s1*((v14**2)*(w12*w23))))+(((0.+4.j)*(u2*((v14**2)*(w12*w23))))+aux378);
    aux380=((0.+-4.j)*(u1*(v22*(v44*(w11*w23)))))+((-8.*(s2*(v11*(v22*(v44*(w11*w23))))))+aux379);
    aux381=(8.*(s2*((v12**2)*(v44*(w11*w23)))))+((-4.*(s2*(v22*(v44*(w11*w23)))))+aux380);
    aux382=(-4.*(u1*(v12*(v44*(w11*w23)))))+(((0.+4.j)*(u2*(v12*(v44*(w11*w23)))))+aux381);
    aux383=(-4.*(s2*(v11*(v44*(w11*w23)))))+((4.*(u2*(v11*(v44*(w11*w23)))))+aux382);
    aux384=(-2.*(s2*(v44*(w11*w23))))+(((0.+-2.j)*(u1*(v44*(w11*w23))))+((2.*(u2*(v44*(w11*w23))))+aux383));
    aux385=((0.+4.j)*(u1*((v24**2)*(w11*w23))))+((8.*(s2*(v11*((v24**2)*(w11*w23)))))+aux384);
    aux386=(-16.*(s2*(v12*(v14*(v24*(w11*w23))))))+((4.*(s2*((v24**2)*(w11*w23))))+aux385);
    aux387=(4.*(u1*(v14*(v24*(w11*w23)))))+(((0.+-4.j)*(u2*(v14*(v24*(w11*w23)))))+aux386);
    aux388=(-4.*(u2*((v14**2)*(w11*w23))))+((8.*(s2*((v14**2)*(v22*(w11*w23)))))+aux387);
    aux389=(-4.*(s2*(v11*(v22*(v44*w23)))))+((4.*(s2*((v14**2)*(w11*w23))))+aux388);
    aux390=((0.+2.j)*(s1*(v22*(v44*w23))))+(((0.+-2.j)*(u1*(v22*(v44*w23))))+aux389);
    aux391=((0.+2.j)*(u2*(v12*(v44*w23))))+((4.*(s2*((v12**2)*(v44*w23))))+aux390);
    aux392=(4.*(s1*(v12*(v44*w23))))+(((0.+-4.j)*(s2*(v12*(v44*w23))))+((-2.*(u1*(v12*(v44*w23))))+aux391));
    aux393=((0.+-2.j)*(s1*(v11*(v44*w23))))+((-4.*(s2*(v11*(v44*w23))))+((2.*(u2*(v11*(v44*w23))))+aux392));
    aux394=(4.*(s2*(v11*((v24**2)*w23))))+(((0.+-1.j)*(u1*(v44*w23)))+((u2*(v44*w23))+aux393));
    aux395=((0.+-2.j)*(s1*((v24**2)*w23)))+(((0.+2.j)*(u1*((v24**2)*w23)))+aux394);
    aux396=((0.+-2.j)*(u2*(v14*(v24*w23))))+((-8.*(s2*(v12*(v14*(v24*w23)))))+aux395);
    aux397=(-4.*(s1*(v14*(v24*w23))))+(((0.+4.j)*(s2*(v14*(v24*w23))))+((2.*(u1*(v14*(v24*w23))))+aux396));
    aux398=(4.*(s2*((v14**2)*w23)))+((-2.*(u2*((v14**2)*w23)))+((4.*(s2*((v14**2)*(v22*w23))))+aux397));
    aux399=(16.*(u1*(v12*(v23*((w14**2)*w22)))))+(((0.+2.j)*(s1*((v14**2)*w23)))+aux398);
    aux400=(-8.*(u2*(v23*((w14**2)*w22))))+((-16.*(u2*(v11*(v23*((w14**2)*w22)))))+aux399);
    aux401=(16.*(u3*(v11*(v22*((w14**2)*w22)))))+((-16.*(u1*(v13*(v22*((w14**2)*w22)))))+aux400);
    aux402=(8.*(u3*(v22*((w14**2)*w22))))+((-16.*(s3*(v11*(v22*((w14**2)*w22)))))+aux401);
    aux403=(16.*(u2*(v12*(v13*((w14**2)*w22)))))+((-8.*(s3*(v22*((w14**2)*w22))))+aux402);
    aux404=(-16.*(u3*((v12**2)*((w14**2)*w22))))+((-8.*(u1*(v13*((w14**2)*w22))))+aux403);
    aux405=(8.*(u3*(v11*((w14**2)*w22))))+((16.*(s3*((v12**2)*((w14**2)*w22))))+aux404);
    aux406=(-4.*(s3*((w14**2)*w22)))+((4.*(u3*((w14**2)*w22)))+((-8.*(s3*(v11*((w14**2)*w22))))+aux405));
    aux407=(16.*(u2*(v11*(v24*(w13*(w14*w22))))))+((-16.*(u1*(v12*(v24*(w13*(w14*w22))))))+aux406);
    aux408=(16.*(u1*(v14*(v22*(w13*(w14*w22))))))+((8.*(u2*(v24*(w13*(w14*w22)))))+aux407);
    aux409=(8.*(u1*(v14*(w13*(w14*w22)))))+((-16.*(u2*(v12*(v14*(w13*(w14*w22))))))+aux408);
    aux410=(-8.*(u1*(v22*(v34*(w14*w22)))))+((16.*(s1*(v11*(v22*(v34*(w14*w22))))))+aux409);
    aux411=(-16.*(s1*((v12**2)*(v34*(w14*w22)))))+((8.*(s1*(v22*(v34*(w14*w22)))))+aux410);
    aux412=((0.+8.j)*(u1*(v12*(v34*(w14*w22)))))+((8.*(u2*(v12*(v34*(w14*w22)))))+aux411);
    aux413=(8.*(s1*(v11*(v34*(w14*w22)))))+(((0.+-8.j)*(u2*(v11*(v34*(w14*w22)))))+aux412);
    aux414=(4.*(s1*(v34*(w14*w22))))+((-4.*(u1*(v34*(w14*w22))))+(((0.+-4.j)*(u2*(v34*(w14*w22))))+aux413));
    aux415=(8.*(u1*(v23*(v24*(w14*w22)))))+((-16.*(s1*(v11*(v23*(v24*(w14*w22))))))+aux414);
    aux416=(16.*(s1*(v12*(v13*(v24*(w14*w22))))))+((-8.*(s1*(v23*(v24*(w14*w22)))))+aux415);
    aux417=((0.+-16.j)*(u1*(v13*(v24*(w14*w22)))))+((8.*(u2*(v13*(v24*(w14*w22)))))+aux416);
    aux418=(16.*(s3*(v12*(v24*(w14*w22)))))+((-16.*(u3*(v12*(v24*(w14*w22)))))+aux417);
    aux419=((0.+-16.j)*(s3*(v11*(v24*(w14*w22)))))+(((0.+16.j)*(u3*(v11*(v24*(w14*w22)))))+aux418);
    aux420=((0.+-8.j)*(s3*(v24*(w14*w22))))+(((0.+8.j)*(u3*(v24*(w14*w22))))+aux419);
    aux421=(-16.*(u2*(v14*(v23*(w14*w22)))))+((16.*(s1*(v12*(v14*(v23*(w14*w22))))))+aux420);
    aux422=(-16.*(s1*(v13*(v14*(v22*(w14*w22))))))+(((0.+8.j)*(u1*(v14*(v23*(w14*w22)))))+aux421);
    aux423=(-16.*(s3*(v14*(v22*(w14*w22)))))+((16.*(u3*(v14*(v22*(w14*w22)))))+aux422);
    aux424=(-8.*(s1*(v13*(v14*(w14*w22)))))+(((0.+8.j)*(u2*(v13*(v14*(w14*w22)))))+aux423);
    aux425=((0.+16.j)*(s3*(v12*(v14*(w14*w22)))))+(((0.+-16.j)*(u3*(v12*(v14*(w14*w22)))))+aux424);
    aux426=(-16.*(s1*(v11*(v22*(v44*(w13*w22))))))+((-8.*(s3*(v14*(w14*w22))))+((8.*(u3*(v14*(w14*w22))))+aux425));
    aux427=(-8.*(s1*(v22*(v44*(w13*w22)))))+((8.*(u1*(v22*(v44*(w13*w22)))))+aux426);
    aux428=(-8.*(u2*(v12*(v44*(w13*w22)))))+((16.*(s1*((v12**2)*(v44*(w13*w22)))))+aux427);
    aux429=((0.+8.j)*(u2*(v11*(v44*(w13*w22)))))+(((0.+-8.j)*(u1*(v12*(v44*(w13*w22)))))+aux428);
    aux430=((0.+4.j)*(u2*(v44*(w13*w22))))+((-8.*(s1*(v11*(v44*(w13*w22)))))+aux429);
    aux431=(16.*(s1*(v11*((v24**2)*(w13*w22)))))+((-4.*(s1*(v44*(w13*w22))))+((4.*(u1*(v44*(w13*w22))))+aux430));
    aux432=(8.*(s1*((v24**2)*(w13*w22))))+((-8.*(u1*((v24**2)*(w13*w22))))+aux431);
    aux433=(8.*(u2*(v14*(v24*(w13*w22)))))+((-32.*(s1*(v12*(v14*(v24*(w13*w22))))))+aux432);
    aux434=(16.*(s1*((v14**2)*(v22*(w13*w22)))))+(((0.+8.j)*(u1*(v14*(v24*(w13*w22)))))+aux433);
    aux435=(8.*(s1*((v14**2)*(w13*w22))))+(((0.+-8.j)*(u2*((v14**2)*(w13*w22))))+aux434);
    aux436=(16.*(u2*(v11*(v23*(v44*(w11*w22))))))+((-16.*(u1*(v12*(v23*(v44*(w11*w22))))))+aux435);
    aux437=(16.*(u1*(v13*(v22*(v44*(w11*w22))))))+((8.*(u2*(v23*(v44*(w11*w22)))))+aux436);
    aux438=(16.*(s3*(v11*(v22*(v44*(w11*w22))))))+((-16.*(u3*(v11*(v22*(v44*(w11*w22))))))+aux437);
    aux439=(8.*(s3*(v22*(v44*(w11*w22)))))+((-8.*(u3*(v22*(v44*(w11*w22)))))+aux438);
    aux440=(8.*(u1*(v13*(v44*(w11*w22)))))+((-16.*(u2*(v12*(v13*(v44*(w11*w22))))))+aux439);
    aux441=(-16.*(s3*((v12**2)*(v44*(w11*w22)))))+((16.*(u3*((v12**2)*(v44*(w11*w22)))))+aux440);
    aux442=(8.*(s3*(v11*(v44*(w11*w22)))))+((-8.*(u3*(v11*(v44*(w11*w22)))))+aux441);
    aux443=(16.*(u1*(v12*(v24*(v34*(w11*w22))))))+((4.*(s3*(v44*(w11*w22))))+((-4.*(u3*(v44*(w11*w22))))+aux442));
    aux444=(-8.*(u2*(v24*(v34*(w11*w22)))))+((-16.*(u2*(v11*(v24*(v34*(w11*w22))))))+aux443);
    aux445=(16.*(u2*(v12*(v14*(v34*(w11*w22))))))+((-16.*(u1*(v14*(v22*(v34*(w11*w22))))))+aux444);
    aux446=(-16.*(u1*(v13*((v24**2)*(w11*w22)))))+((-8.*(u1*(v14*(v34*(w11*w22)))))+aux445);
    aux447=(-16.*(s3*(v11*((v24**2)*(w11*w22)))))+((16.*(u3*(v11*((v24**2)*(w11*w22)))))+aux446);
    aux448=(-8.*(s3*((v24**2)*(w11*w22))))+((8.*(u3*((v24**2)*(w11*w22))))+aux447);
    aux449=(16.*(u2*(v13*(v14*(v24*(w11*w22))))))+((16.*(u1*(v14*(v23*(v24*(w11*w22))))))+aux448);
    aux450=(32.*(s3*(v12*(v14*(v24*(w11*w22))))))+((-32.*(u3*(v12*(v14*(v24*(w11*w22))))))+aux449);
    aux451=(16.*(u3*((v14**2)*(v22*(w11*w22)))))+((-16.*(u2*((v14**2)*(v23*(w11*w22)))))+aux450);
    aux452=(8.*(u3*((v14**2)*(w11*w22))))+((-16.*(s3*((v14**2)*(v22*(w11*w22)))))+aux451);
    aux453=(-8.*(u1*(v12*(v23*(v44*w22)))))+((-8.*(s3*((v14**2)*(w11*w22))))+aux452);
    aux454=(8.*(u2*(v11*(v23*(v44*w22)))))+((8.*(s1*(v12*(v23*(v44*w22)))))+aux453);
    aux455=((0.+4.j)*(u1*(v23*(v44*w22))))+(((0.+-8.j)*(s1*(v11*(v23*(v44*w22)))))+aux454);
    aux456=(8.*(u1*(v13*(v22*(v44*w22)))))+(((0.+-4.j)*(s1*(v23*(v44*w22))))+aux455);
    aux457=(-8.*(u3*(v11*(v22*(v44*w22)))))+((-8.*(s1*(v13*(v22*(v44*w22)))))+aux456);
    aux458=(-8.*(u2*(v12*(v13*(v44*w22)))))+((8.*(s3*(v11*(v22*(v44*w22)))))+aux457);
    aux459=((0.+4.j)*(u2*(v13*(v44*w22))))+(((0.+8.j)*(s1*(v12*(v13*(v44*w22)))))+aux458);
    aux460=(8.*(u3*((v12**2)*(v44*w22))))+((-4.*(s1*(v13*(v44*w22))))+((8.*(u1*(v13*(v44*w22))))+aux459));
    aux461=((0.+-8.j)*(u3*(v12*(v44*w22))))+((-8.*(s3*((v12**2)*(v44*w22))))+aux460);
    aux462=(8.*(s3*(v11*(v44*w22))))+((-8.*(u3*(v11*(v44*w22))))+(((0.+8.j)*(s3*(v12*(v44*w22))))+aux461));
    aux463=(8.*(u1*(v12*(v24*(v34*w22)))))+((2.*(s3*(v44*w22)))+((-2.*(u3*(v44*w22)))+aux462));
    aux464=(-8.*(u2*(v11*(v24*(v34*w22)))))+((-8.*(s1*(v12*(v24*(v34*w22)))))+aux463);
    aux465=((0.+-4.j)*(u1*(v24*(v34*w22))))+(((0.+8.j)*(s1*(v11*(v24*(v34*w22)))))+aux464);
    aux466=(-8.*(u1*(v14*(v22*(v34*w22)))))+(((0.+4.j)*(s1*(v24*(v34*w22))))+aux465);
    aux467=(8.*(u2*(v12*(v14*(v34*w22)))))+((8.*(s1*(v14*(v22*(v34*w22)))))+aux466);
    aux468=((0.+-4.j)*(u2*(v14*(v34*w22))))+(((0.+-8.j)*(s1*(v12*(v14*(v34*w22)))))+aux467);
    aux469=(-8.*(u1*(v13*((v24**2)*w22))))+((4.*(s1*(v14*(v34*w22))))+((-8.*(u1*(v14*(v34*w22))))+aux468));
    aux470=(-8.*(s3*(v11*((v24**2)*w22))))+((8.*(u3*(v11*((v24**2)*w22))))+((8.*(s1*(v13*((v24**2)*w22))))+aux469));
    aux471=(-8.*(s1*(v14*(v23*(v24*w22)))))+((8.*(u1*(v14*(v23*(v24*w22)))))+aux470);
    aux472=((0.+-8.j)*(s1*(v13*(v14*(v24*w22)))))+((8.*(u2*(v13*(v14*(v24*w22)))))+aux471);
    aux473=(16.*(s3*(v12*(v14*(v24*w22)))))+((-16.*(u3*(v12*(v14*(v24*w22)))))+aux472);
    aux474=((0.+-8.j)*(s3*(v14*(v24*w22))))+(((0.+8.j)*(u3*(v14*(v24*w22))))+aux473);
    aux475=((0.+8.j)*(s1*((v14**2)*(v23*w22))))+((-8.*(u2*((v14**2)*(v23*w22))))+aux474);
    aux476=(-8.*(s3*((v14**2)*(v22*w22))))+((8.*(u3*((v14**2)*(v22*w22))))+aux475);
    aux477=(8.*(s2*(v11*(v22*(v23*(w14**2))))))+((-8.*(s3*((v14**2)*w22)))+((8.*(u3*((v14**2)*w22)))+aux476));
    aux478=(4.*(s2*(v22*(v23*(w14**2)))))+(((0.+4.j)*(u1*(v22*(v23*(w14**2)))))+aux477);
    aux479=((0.+-4.j)*(u2*(v12*(v23*(w14**2)))))+((-8.*(s2*((v12**2)*(v23*(w14**2)))))+aux478);
    aux480=((0.+8.j)*(s2*(v12*(v23*(w14**2)))))+((12.*(u1*(v12*(v23*(w14**2)))))+aux479);
    aux481=(12.*(s2*(v11*(v23*(w14**2)))))+((-12.*(u2*(v11*(v23*(w14**2)))))+aux480);
    aux482=(6.*(s2*(v23*(w14**2))))+(((0.+6.j)*(u1*(v23*(w14**2))))+((-10.*(u2*(v23*(w14**2))))+aux481));
    aux483=((0.+-8.j)*(s2*(v13*(v22*(w14**2)))))+((-8.*(u1*(v13*(v22*(w14**2)))))+aux482);
    aux484=(-8.*(s3*(v11*(v22*(w14**2)))))+((8.*(u3*(v11*(v22*(w14**2)))))+aux483);
    aux485=(8.*(u2*(v12*(v13*(w14**2)))))+((-8.*(s3*(v22*(w14**2))))+((8.*(u3*(v22*(w14**2))))+aux484));
    aux486=((0.+4.j)*(u2*(v13*(w14**2))))+((-8.*(s2*(v12*(v13*(w14**2)))))+aux485);
    aux487=(-8.*(u3*((v12**2)*(w14**2))))+(((0.+-4.j)*(s2*(v13*(w14**2))))+aux486);
    aux488=((0.+8.j)*(s3*(v12*(w14**2))))+(((0.+-8.j)*(u3*(v12*(w14**2))))+((8.*(s3*((v12**2)*(w14**2))))+aux487));
    aux489=(-8.*(u1*(v12*(v24*(w13*w14)))))+((-2.*(s3*(w14**2)))+((2.*(u3*(w14**2)))+aux488));
    aux490=(8.*(u2*(v11*(v24*(w13*w14)))))+(((0.+-8.j)*(s2*(v12*(v24*(w13*w14)))))+aux489);
    aux491=((0.+-4.j)*(u1*(v24*(w13*w14))))+((8.*(u2*(v24*(w13*w14))))+((-8.*(s2*(v11*(v24*(w13*w14)))))+aux490));
    aux492=((0.+8.j)*(s2*(v14*(v22*(w13*w14)))))+((8.*(u1*(v14*(v22*(w13*w14)))))+((-4.*(s2*(v24*(w13*w14))))+aux491));
    aux493=(8.*(s2*(v12*(v14*(w13*w14)))))+((-8.*(u2*(v12*(v14*(w13*w14)))))+aux492);
    aux494=((0.+4.j)*(s2*(v14*(w13*w14))))+(((0.+-4.j)*(u2*(v14*(w13*w14))))+aux493);
    aux495=((0.+-8.j)*(u1*(v22*(v34*(w12*w14)))))+((-16.*(s2*(v11*(v22*(v34*(w12*w14))))))+aux494);
    aux496=(16.*(s2*((v12**2)*(v34*(w12*w14)))))+((-8.*(s2*(v22*(v34*(w12*w14)))))+aux495);
    aux497=(-8.*(u1*(v12*(v34*(w12*w14)))))+(((0.+8.j)*(u2*(v12*(v34*(w12*w14)))))+aux496);
    aux498=(-8.*(s2*(v11*(v34*(w12*w14)))))+((8.*(u2*(v11*(v34*(w12*w14)))))+aux497);
    aux499=(-4.*(s2*(v34*(w12*w14))))+(((0.+-4.j)*(u1*(v34*(w12*w14))))+((4.*(u2*(v34*(w12*w14))))+aux498));
    aux500=(-8.*(u2*(v11*(v23*(v24*(w12*w14))))))+((8.*(u1*(v12*(v23*(v24*(w12*w14))))))+aux499);
    aux501=(-4.*(u2*(v23*(v24*(w12*w14)))))+((16.*(s2*(v11*(v23*(v24*(w12*w14))))))+aux500);
    aux502=(8.*(s2*(v23*(v24*(w12*w14)))))+(((0.+8.j)*(u1*(v23*(v24*(w12*w14)))))+aux501);
    aux503=((0.+8.j)*(u2*(v13*(v24*(w12*w14)))))+((-16.*(s2*(v12*(v13*(v24*(w12*w14))))))+aux502);
    aux504=((0.+-16.j)*(u3*(v12*(v24*(w12*w14)))))+((16.*(u1*(v13*(v24*(w12*w14)))))+aux503);
    aux505=(-16.*(u3*(v11*(v24*(w12*w14)))))+(((0.+16.j)*(s3*(v12*(v24*(w12*w14)))))+aux504);
    aux506=(8.*(s3*(v24*(w12*w14))))+((-8.*(u3*(v24*(w12*w14))))+((16.*(s3*(v11*(v24*(w12*w14)))))+aux505));
    aux507=(8.*(u2*(v12*(v14*(v23*(w12*w14))))))+((-8.*(u1*(v14*(v22*(v23*(w12*w14))))))+aux506);
    aux508=((0.+-16.j)*(u2*(v14*(v23*(w12*w14)))))+((-16.*(s2*(v12*(v14*(v23*(w12*w14))))))+aux507);
    aux509=(16.*(s2*(v13*(v14*(v22*(w12*w14))))))+((-12.*(u1*(v14*(v23*(w12*w14)))))+aux508);
    aux510=((0.+-16.j)*(s3*(v14*(v22*(w12*w14)))))+(((0.+16.j)*(u3*(v14*(v22*(w12*w14)))))+aux509);
    aux511=(8.*(s2*(v13*(v14*(w12*w14)))))+((-8.*(u2*(v13*(v14*(w12*w14)))))+aux510);
    aux512=(-16.*(s3*(v12*(v14*(w12*w14)))))+((16.*(u3*(v12*(v14*(w12*w14)))))+aux511);
    aux513=((0.+-8.j)*(s3*(v14*(w12*w14))))+(((0.+8.j)*(u3*(v14*(w12*w14))))+aux512);
    aux514=((0.+-4.j)*(s2*(v22*(v34*w14))))+((-4.*(u1*(v22*(v34*w14))))+((8.*(s1*(v11*(v22*(v34*w14)))))+aux513));
    aux515=(4.*(u2*(v12*(v34*w14))))+((-8.*(s1*((v12**2)*(v34*w14))))+((8.*(s1*(v22*(v34*w14))))+aux514));
    aux516=((0.+-8.j)*(s1*(v12*(v34*w14))))+((-8.*(s2*(v12*(v34*w14))))+(((0.+4.j)*(u1*(v12*(v34*w14))))+aux515));
    aux517=((0.+4.j)*(s2*(v11*(v34*w14))))+(((0.+-4.j)*(u2*(v11*(v34*w14))))+aux516);
    aux518=(2.*(s1*(v34*w14)))+((-2.*(u1*(v34*w14)))+(((0.+-2.j)*(u2*(v34*w14)))+aux517));
    aux519=((0.+-4.j)*(s1*(v12*(v23*(v24*w14)))))+((-8.*(s2*(v12*(v23*(v24*w14)))))+aux518);
    aux520=(-12.*(s1*(v11*(v23*(v24*w14)))))+(((0.+8.j)*(s2*(v11*(v23*(v24*w14)))))+aux519);
    aux521=((0.+8.j)*(s2*(v23*(v24*w14))))+((2.*(u1*(v23*(v24*w14))))+(((0.+-2.j)*(u2*(v23*(v24*w14))))+aux520));
    aux522=(4.*(u2*(v13*(v24*w14))))+((8.*(s1*(v12*(v13*(v24*w14)))))+((-10.*(s1*(v23*(v24*w14))))+aux521));
    aux523=((0.+4.j)*(s1*(v13*(v24*w14))))+((4.*(s2*(v13*(v24*w14))))+(((0.+-8.j)*(u1*(v13*(v24*w14))))+aux522));
    aux524=((0.+8.j)*(u3*(v11*(v24*w14))))+((8.*(s3*(v12*(v24*w14))))+((-8.*(u3*(v12*(v24*w14))))+aux523));
    aux525=((0.+-4.j)*(s3*(v24*w14)))+(((0.+4.j)*(u3*(v24*w14)))+(((0.+-8.j)*(s3*(v11*(v24*w14))))+aux524));
    aux526=((0.+4.j)*(s1*(v14*(v22*(v23*w14)))))+((8.*(s2*(v14*(v22*(v23*w14)))))+aux525);
    aux527=(12.*(s1*(v12*(v14*(v23*w14)))))+(((0.+-8.j)*(s2*(v12*(v14*(v23*w14)))))+aux526);
    aux528=(8.*(s2*(v14*(v23*w14))))+(((0.+6.j)*(u1*(v14*(v23*w14))))+((-10.*(u2*(v14*(v23*w14))))+aux527));
    aux529=(-8.*(s1*(v13*(v14*(v22*w14)))))+(((0.+6.j)*(s1*(v14*(v23*w14))))+aux528);
    aux530=((0.+4.j)*(u2*(v13*(v14*w14))))+((-8.*(s3*(v14*(v22*w14))))+((8.*(u3*(v14*(v22*w14))))+aux529));
    aux531=((0.+-8.j)*(u3*(v12*(v14*w14))))+(((0.+-4.j)*(s2*(v13*(v14*w14))))+aux530);
    aux532=(-4.*(s3*(v14*w14)))+((4.*(u3*(v14*w14)))+(((0.+8.j)*(s3*(v12*(v14*w14))))+aux531));
    aux533=((0.+8.j)*(u1*(v22*(v44*(w12*w13)))))+((16.*(s2*(v11*(v22*(v44*(w12*w13))))))+aux532);
    aux534=(-16.*(s2*((v12**2)*(v44*(w12*w13)))))+((8.*(s2*(v22*(v44*(w12*w13)))))+aux533);
    aux535=(8.*(u1*(v12*(v44*(w12*w13)))))+(((0.+-8.j)*(u2*(v12*(v44*(w12*w13)))))+aux534);
    aux536=(8.*(s2*(v11*(v44*(w12*w13)))))+((-8.*(u2*(v11*(v44*(w12*w13)))))+aux535);
    aux537=(4.*(s2*(v44*(w12*w13))))+(((0.+4.j)*(u1*(v44*(w12*w13))))+((-4.*(u2*(v44*(w12*w13))))+aux536));
    aux538=((0.+-8.j)*(u1*((v24**2)*(w12*w13))))+((-16.*(s2*(v11*((v24**2)*(w12*w13)))))+aux537);
    aux539=(32.*(s2*(v12*(v14*(v24*(w12*w13))))))+((-8.*(s2*((v24**2)*(w12*w13))))+aux538);
    aux540=(-8.*(u1*(v14*(v24*(w12*w13)))))+(((0.+8.j)*(u2*(v14*(v24*(w12*w13)))))+aux539);
    aux541=(8.*(u2*((v14**2)*(w12*w13))))+((-16.*(s2*((v14**2)*(v22*(w12*w13)))))+aux540);
    aux542=(-8.*(s1*(v11*(v22*(v44*w13)))))+((-8.*(s2*((v14**2)*(w12*w13))))+aux541);
    aux543=(-8.*(s1*(v22*(v44*w13))))+(((0.+4.j)*(s2*(v22*(v44*w13))))+((4.*(u1*(v22*(v44*w13))))+aux542));
    aux544=((0.+-4.j)*(u1*(v12*(v44*w13))))+((-4.*(u2*(v12*(v44*w13))))+((8.*(s1*((v12**2)*(v44*w13))))+aux543));
    aux545=((0.+4.j)*(u2*(v11*(v44*w13))))+(((0.+8.j)*(s1*(v12*(v44*w13))))+((8.*(s2*(v12*(v44*w13))))+aux544));
    aux546=(2.*(u1*(v44*w13)))+(((0.+2.j)*(u2*(v44*w13)))+(((0.+-4.j)*(s2*(v11*(v44*w13))))+aux545));
    aux547=(-4.*(u1*((v24**2)*w13)))+((8.*(s1*(v11*((v24**2)*w13))))+((-2.*(s1*(v44*w13)))+aux546));
    aux548=(-16.*(s1*(v12*(v14*(v24*w13)))))+((8.*(s1*((v24**2)*w13)))+(((0.+-4.j)*(s2*((v24**2)*w13)))+aux547));
    aux549=(-8.*(s2*(v14*(v24*w13))))+(((0.+4.j)*(u1*(v14*(v24*w13))))+((4.*(u2*(v14*(v24*w13))))+aux548));
    aux550=(8.*(s1*((v14**2)*(v22*w13))))+(((0.+-8.j)*(s1*(v14*(v24*w13))))+aux549);
    aux551=((0.+4.j)*(s2*((v14**2)*w13)))+(((0.+-4.j)*(u2*((v14**2)*w13)))+aux550);
    aux552=(-16.*(u2*(v11*(v23*(v44*(w12**2))))))+((16.*(u1*(v12*(v23*(v44*(w12**2))))))+aux551);
    aux553=(-16.*(u1*(v13*(v22*(v44*(w12**2))))))+((-8.*(u2*(v23*(v44*(w12**2)))))+aux552);
    aux554=(-16.*(s3*(v11*(v22*(v44*(w12**2))))))+((16.*(u3*(v11*(v22*(v44*(w12**2))))))+aux553);
    aux555=(-8.*(s3*(v22*(v44*(w12**2)))))+((8.*(u3*(v22*(v44*(w12**2)))))+aux554);
    aux556=(-8.*(u1*(v13*(v44*(w12**2)))))+((16.*(u2*(v12*(v13*(v44*(w12**2))))))+aux555);
    aux557=(16.*(s3*((v12**2)*(v44*(w12**2)))))+((-16.*(u3*((v12**2)*(v44*(w12**2)))))+aux556);
    aux558=(-8.*(s3*(v11*(v44*(w12**2)))))+((8.*(u3*(v11*(v44*(w12**2)))))+aux557);
    aux559=(-16.*(u1*(v12*(v24*(v34*(w12**2))))))+((-4.*(s3*(v44*(w12**2))))+((4.*(u3*(v44*(w12**2))))+aux558));
    aux560=(8.*(u2*(v24*(v34*(w12**2)))))+((16.*(u2*(v11*(v24*(v34*(w12**2))))))+aux559);
    aux561=(-16.*(u2*(v12*(v14*(v34*(w12**2))))))+((16.*(u1*(v14*(v22*(v34*(w12**2))))))+aux560);
    aux562=(16.*(u1*(v13*((v24**2)*(w12**2)))))+((8.*(u1*(v14*(v34*(w12**2)))))+aux561);
    aux563=(16.*(s3*(v11*((v24**2)*(w12**2)))))+((-16.*(u3*(v11*((v24**2)*(w12**2)))))+aux562);
    aux564=(-16.*(u1*(v14*(v23*(v24*(w12**2))))))+((8.*(s3*((v24**2)*(w12**2))))+((-8.*(u3*((v24**2)*(w12**2))))+aux563));
    aux565=(32.*(u3*(v12*(v14*(v24*(w12**2))))))+((-16.*(u2*(v13*(v14*(v24*(w12**2))))))+aux564);
    aux566=(16.*(u2*((v14**2)*(v23*(w12**2)))))+((-32.*(s3*(v12*(v14*(v24*(w12**2))))))+aux565);
    aux567=(16.*(s3*((v14**2)*(v22*(w12**2)))))+((-16.*(u3*((v14**2)*(v22*(w12**2)))))+aux566);
    aux568=(8.*(s1*(v11*(v22*(v23*(v44*w12))))))+((8.*(s3*((v14**2)*(w12**2))))+((-8.*(u3*((v14**2)*(w12**2))))+aux567));
    aux569=(4.*(s1*(v22*(v23*(v44*w12)))))+((-4.*(u1*(v22*(v23*(v44*w12)))))+aux568);
    aux570=(4.*(u2*(v12*(v23*(v44*w12)))))+((-8.*(s1*((v12**2)*(v23*(v44*w12)))))+aux569);
    aux571=(-8.*(s2*(v12*(v23*(v44*w12)))))+(((0.+4.j)*(u1*(v12*(v23*(v44*w12)))))+aux570);
    aux572=((0.+-4.j)*(u2*(v11*(v23*(v44*w12)))))+(((0.+8.j)*(s1*(v12*(v23*(v44*w12)))))+aux571);
    aux573=(12.*(s1*(v11*(v23*(v44*w12)))))+(((0.+8.j)*(s2*(v11*(v23*(v44*w12)))))+aux572);
    aux574=((0.+4.j)*(s2*(v23*(v44*w12))))+((-10.*(u1*(v23*(v44*w12))))+(((0.+-10.j)*(u2*(v23*(v44*w12))))+aux573));
    aux575=((0.+-8.j)*(s1*(v13*(v22*(v44*w12)))))+((8.*(s2*(v13*(v22*(v44*w12)))))+((6.*(s1*(v23*(v44*w12))))+aux574));
    aux576=((0.+-8.j)*(s3*(v22*(v44*w12))))+(((0.+8.j)*(u3*(v22*(v44*w12))))+aux575);
    aux577=(-8.*(s1*(v12*(v13*(v44*w12)))))+(((0.+-8.j)*(s2*(v12*(v13*(v44*w12)))))+aux576);
    aux578=(4.*(s2*(v13*(v44*w12))))+(((0.+8.j)*(u1*(v13*(v44*w12))))+((-8.*(u2*(v13*(v44*w12))))+aux577));
    aux579=(-16.*(s3*(v12*(v44*w12))))+((16.*(u3*(v12*(v44*w12))))+(((0.+-4.j)*(s1*(v13*(v44*w12))))+aux578));
    aux580=((0.+8.j)*(s3*(v11*(v44*w12))))+(((0.+-8.j)*(u3*(v11*(v44*w12))))+aux579);
    aux581=((0.+-8.j)*(s1*(v12*(v24*(v34*w12)))))+((8.*(s2*(v12*(v24*(v34*w12)))))+aux580);
    aux582=(-8.*(s1*(v11*(v24*(v34*w12)))))+(((0.+-8.j)*(s2*(v11*(v24*(v34*w12)))))+aux581);
    aux583=((0.+-4.j)*(s2*(v24*(v34*w12))))+((8.*(u1*(v24*(v34*w12))))+(((0.+8.j)*(u2*(v24*(v34*w12))))+aux582));
    aux584=((0.+8.j)*(s1*(v14*(v22*(v34*w12)))))+((-8.*(s2*(v14*(v22*(v34*w12)))))+((-4.*(s1*(v24*(v34*w12))))+aux583));
    aux585=(8.*(s1*(v12*(v14*(v34*w12)))))+(((0.+8.j)*(s2*(v12*(v14*(v34*w12)))))+aux584);
    aux586=(-4.*(s2*(v14*(v34*w12))))+(((0.+-8.j)*(u1*(v14*(v34*w12))))+((8.*(u2*(v14*(v34*w12))))+aux585));
    aux587=(-8.*(s1*(v11*(v23*((v24**2)*w12)))))+(((0.+4.j)*(s1*(v14*(v34*w12))))+aux586);
    aux588=(-4.*(s1*(v23*((v24**2)*w12))))+((4.*(u1*(v23*((v24**2)*w12))))+aux587);
    aux589=((0.+8.j)*(s1*(v13*((v24**2)*w12))))+((-8.*(s2*(v13*((v24**2)*w12))))+aux588);
    aux590=((0.+8.j)*(s3*((v24**2)*w12)))+(((0.+-8.j)*(u3*((v24**2)*w12)))+aux589);
    aux591=(-4.*(u2*(v14*(v23*(v24*w12)))))+((16.*(s1*(v12*(v14*(v23*(v24*w12))))))+aux590);
    aux592=(8.*(s2*(v14*(v23*(v24*w12)))))+(((0.+-4.j)*(u1*(v14*(v23*(v24*w12)))))+aux591);
    aux593=((0.+8.j)*(s2*(v13*(v14*(v24*w12)))))+(((0.+-8.j)*(s1*(v14*(v23*(v24*w12)))))+aux592);
    aux594=(16.*(s3*(v14*(v24*w12))))+((-16.*(u3*(v14*(v24*w12))))+((8.*(s1*(v13*(v14*(v24*w12)))))+aux593));
    aux595=((0.+4.j)*(u2*((v14**2)*(v23*w12))))+((-8.*(s1*((v14**2)*(v22*(v23*w12)))))+aux594);
    aux596=(-12.*(s1*((v14**2)*(v23*w12))))+(((0.+-8.j)*(s2*((v14**2)*(v23*w12))))+aux595);
    aux597=((0.+-8.j)*(s3*((v14**2)*w12)))+(((0.+8.j)*(u3*((v14**2)*w12)))+aux596);
    aux598=((0.+-4.j)*(u1*(v22*(v23*(v44*w11)))))+((-8.*(s2*(v11*(v22*(v23*(v44*w11))))))+aux597);
    aux599=(8.*(s2*((v12**2)*(v23*(v44*w11)))))+((-4.*(s2*(v22*(v23*(v44*w11)))))+aux598);
    aux600=(-12.*(u1*(v12*(v23*(v44*w11)))))+(((0.+4.j)*(u2*(v12*(v23*(v44*w11)))))+aux599);
    aux601=(12.*(u2*(v11*(v23*(v44*w11)))))+(((0.+-8.j)*(s2*(v12*(v23*(v44*w11)))))+aux600);
    aux602=((0.+-6.j)*(u1*(v23*(v44*w11))))+((10.*(u2*(v23*(v44*w11))))+((-12.*(s2*(v11*(v23*(v44*w11)))))+aux601));
    aux603=((0.+8.j)*(s2*(v13*(v22*(v44*w11)))))+((8.*(u1*(v13*(v22*(v44*w11)))))+((-6.*(s2*(v23*(v44*w11))))+aux602));
    aux604=(8.*(s3*(v11*(v22*(v44*w11)))))+((-8.*(u3*(v11*(v22*(v44*w11)))))+aux603);
    aux605=(-8.*(u2*(v12*(v13*(v44*w11)))))+((8.*(s3*(v22*(v44*w11))))+((-8.*(u3*(v22*(v44*w11))))+aux604));
    aux606=((0.+-4.j)*(u2*(v13*(v44*w11))))+((8.*(s2*(v12*(v13*(v44*w11)))))+aux605);
    aux607=(8.*(u3*((v12**2)*(v44*w11))))+(((0.+4.j)*(s2*(v13*(v44*w11))))+aux606);
    aux608=((0.+8.j)*(u3*(v12*(v44*w11))))+((-8.*(s3*((v12**2)*(v44*w11))))+aux607);
    aux609=(2.*(s3*(v44*w11)))+((-2.*(u3*(v44*w11)))+(((0.+-8.j)*(s3*(v12*(v44*w11))))+aux608));
    aux610=((0.+8.j)*(s2*(v12*(v24*(v34*w11)))))+((8.*(u1*(v12*(v24*(v34*w11)))))+aux609);
    aux611=(8.*(s2*(v11*(v24*(v34*w11)))))+((-8.*(u2*(v11*(v24*(v34*w11)))))+aux610);
    aux612=(4.*(s2*(v24*(v34*w11))))+(((0.+4.j)*(u1*(v24*(v34*w11))))+((-8.*(u2*(v24*(v34*w11))))+aux611));
    aux613=((0.+-8.j)*(s2*(v14*(v22*(v34*w11)))))+((-8.*(u1*(v14*(v22*(v34*w11)))))+aux612);
    aux614=(-8.*(s2*(v12*(v14*(v34*w11)))))+((8.*(u2*(v12*(v14*(v34*w11)))))+aux613);
    aux615=((0.+-4.j)*(s2*(v14*(v34*w11))))+(((0.+4.j)*(u2*(v14*(v34*w11))))+aux614);
    aux616=((0.+4.j)*(u1*(v23*((v24**2)*w11))))+((8.*(s2*(v11*(v23*((v24**2)*w11)))))+aux615);
    aux617=(-8.*(u1*(v13*((v24**2)*w11))))+((4.*(s2*(v23*((v24**2)*w11))))+aux616);
    aux618=(8.*(u3*(v11*((v24**2)*w11))))+(((0.+-8.j)*(s2*(v13*((v24**2)*w11))))+aux617);
    aux619=(-8.*(s3*((v24**2)*w11)))+((8.*(u3*((v24**2)*w11)))+((-8.*(s3*(v11*((v24**2)*w11))))+aux618));
    aux620=((0.+-4.j)*(u2*(v14*(v23*(v24*w11)))))+((-16.*(s2*(v12*(v14*(v23*(v24*w11))))))+aux619);
    aux621=((0.+8.j)*(s2*(v14*(v23*(v24*w11)))))+((12.*(u1*(v14*(v23*(v24*w11)))))+aux620);
    aux622=(-8.*(s2*(v13*(v14*(v24*w11)))))+((8.*(u2*(v13*(v14*(v24*w11)))))+aux621);
    aux623=(16.*(s3*(v12*(v14*(v24*w11)))))+((-16.*(u3*(v12*(v14*(v24*w11)))))+aux622);
    aux624=((0.+8.j)*(s3*(v14*(v24*w11))))+(((0.+-8.j)*(u3*(v14*(v24*w11))))+aux623);
    aux625=(-12.*(u2*((v14**2)*(v23*w11))))+((8.*(s2*((v14**2)*(v22*(v23*w11)))))+aux624);
    aux626=(8.*(u3*((v14**2)*(v22*w11))))+((12.*(s2*((v14**2)*(v23*w11))))+aux625);
    aux627=(-4.*(s2*(v11*(v22*(v23*v44)))))+((-8.*(s3*((v14**2)*(v22*w11))))+aux626);
    aux628=((0.+2.j)*(s1*(v22*(v23*v44))))+(((0.+-2.j)*(u1*(v22*(v23*v44))))+aux627);
    aux629=((0.+2.j)*(u2*(v12*(v23*v44))))+((4.*(s2*((v12**2)*(v23*v44))))+aux628);
    aux630=(8.*(s1*(v12*(v23*v44))))+(((0.+-8.j)*(s2*(v12*(v23*v44))))+((-6.*(u1*(v12*(v23*v44))))+aux629));
    aux631=((0.+-6.j)*(s1*(v11*(v23*v44))))+((-8.*(s2*(v11*(v23*v44))))+((6.*(u2*(v11*(v23*v44))))+aux630));
    aux632=(-3.*(s2*(v23*v44)))+(((0.+-1.j)*(u1*(v23*v44)))+((3.*(u2*(v23*v44)))+aux631));
    aux633=((0.+4.j)*(s2*(v13*(v22*v44))))+((4.*(u1*(v13*(v22*v44))))+(((0.+-2.j)*(s1*(v23*v44)))+aux632));
    aux634=(4.*(s3*(v11*(v22*v44))))+((-4.*(u3*(v11*(v22*v44))))+((-4.*(s1*(v13*(v22*v44))))+aux633));
    aux635=(-4.*(u2*(v12*(v13*v44))))+((2.*(s3*(v22*v44)))+((-2.*(u3*(v22*v44)))+aux634));
    aux636=(2.*(u1*(v13*v44)))+(((0.+4.j)*(s1*(v12*(v13*v44))))+((4.*(s2*(v12*(v13*v44))))+aux635));
    aux637=(4.*(u3*((v12**2)*v44)))+((-2.*(s1*(v13*v44)))+(((0.+2.j)*(s2*(v13*v44)))+aux636));
    aux638=(2.*(s3*(v11*v44)))+((-2.*(u3*(v11*v44)))+((-4.*(s3*((v12**2)*v44)))+aux637));
    aux639=((0.+4.j)*(s2*(v12*(v24*v34))))+((4.*(u1*(v12*(v24*v34))))+((s3*v44)+aux638));
    aux640=(4.*(s2*(v11*(v24*v34))))+((-4.*(u2*(v11*(v24*v34))))+((-4.*(s1*(v12*(v24*v34))))+aux639));
    aux641=(2.*(s2*(v24*v34)))+((-2.*(u2*(v24*v34)))+(((0.+4.j)*(s1*(v11*(v24*v34))))+aux640));
    aux642=((0.+-4.j)*(s2*(v14*(v22*v34))))+((-4.*(u1*(v14*(v22*v34))))+(((0.+2.j)*(s1*(v24*v34)))+aux641));
    aux643=(-4.*(s2*(v12*(v14*v34))))+((4.*(u2*(v12*(v14*v34))))+((4.*(s1*(v14*(v22*v34))))+aux642));
    aux644=((0.+-2.j)*(s2*(v14*v34)))+((-2.*(u1*(v14*v34)))+(((0.+-4.j)*(s1*(v12*(v14*v34))))+aux643));
    aux645=((0.+2.j)*(u1*(v23*(v24**2))))+((4.*(s2*(v11*(v23*(v24**2)))))+((2.*(s1*(v14*v34)))+aux644));
    aux646=((0.+-4.j)*(s2*(v13*(v24**2))))+((-4.*(u1*(v13*(v24**2))))+(((0.+-2.j)*(s1*(v23*(v24**2))))+aux645));
    aux647=(-4.*(s3*(v11*(v24**2))))+((4.*(u3*(v11*(v24**2))))+((4.*(s1*(v13*(v24**2))))+aux646));
    aux648=(-8.*(s2*(v12*(v14*(v23*v24)))))+((-2.*(s3*(v24**2)))+((2.*(u3*(v24**2)))+aux647));
    aux649=((0.+8.j)*(s2*(v14*(v23*v24))))+((6.*(u1*(v14*(v23*v24))))+(((0.+-2.j)*(u2*(v14*(v23*v24))))+aux648));
    aux650=(-4.*(s2*(v13*(v14*v24))))+((4.*(u2*(v13*(v14*v24))))+((-8.*(s1*(v14*(v23*v24))))+aux649));
    aux651=(8.*(s3*(v12*(v14*v24))))+((-8.*(u3*(v12*(v14*v24))))+(((0.+-4.j)*(s1*(v13*(v14*v24))))+aux650));
    aux652=(8.*(s2*((v14**2)*v23)))+((-6.*(u2*((v14**2)*v23)))+((4.*(s2*((v14**2)*(v22*v23))))+aux651));
    aux653=(-4.*(s3*((v14**2)*v22)))+((4.*(u3*((v14**2)*v22)))+(((0.+6.j)*(s1*((v14**2)*v23)))+aux652));
    aux654=(((-2.*(s3*(v14**2)))+((2.*(u3*(v14**2)))+aux653))-(s2*(v44*w23)))-(u3*v44);
    aux655=(4.*((1.+w11)*w22))+(v22*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux656=(v24*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))))+(w24+((2.*(w11*w24))+((0.+-2.j)*(w12*w24))));
    aux657=(w14*(-1.+(((0.+-2.j)*w12)+(-2.*w22))))+(((0.+1.j)+(((0.+2.j)*w11)+(2.*w12)))*w24);
    aux658=(2.*(v12*((w14*((0.+1.j)+((-2.*w12)+((0.+2.j)*w22))))+aux656)))+((1.+(2.*v22))*aux657);
    aux659=(2.*(w12*w14))+(((0.+-1.j)*(w14*(1.+(2.*w22))))+((-1.+((-2.*w11)+((0.+2.j)*w12)))*w24));
    aux660=(-2.*(v22*(w11*(1.+w22))))+((v12**2)*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))));
    aux661=(2.*(v22*(w12*((0.+1.j)+w12))))+((v12*(((0.+2.j)*w11)+((4.*w12)+((0.+-2.j)*w22))))+aux660);
    aux662=(4.*((1.+w11)*w22))+(v22*(2.+((4.*w11)+((-8.*(w12**2))+((4.*w22)+(8.*(w11*w22)))))));
    aux663=(-2.*(w12**2))+((-4.*(v22*(w12**2)))+(2.*((1.+(v22+(w11+(2.*(v22*w11)))))*w22)));
    aux664=(-4.*((1.+(v22+(w11+(2.*(v22*w11)))))*(w24**2)))+(w44+(2.*((v22+((2.*(v22*w11))+(((0.+2.j)*w12)+aux663)))*w44)));
    aux665=(v44*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux662)))+((4.*(((0.+-1.j)+((2.+(4.*v22))*w12))*(w14*w24)))+aux664);
    aux666=((v22+(w11+(w22+(-2.*(((w12**2)+aux661)-(w11*w22))))))*w44)+(v11*((-4.*((w14**2)*(v22+(w22+(2.*(v22*w22))))))+aux665));
    aux667=(-4.*(v22*(w11*(w24**2))))+((2.*((1.+((2.*v11)+((0.+2.j)*v12)))*(v24*aux659)))+aux666);
    aux668=(4.*((v12**2)*(w24**2)))+((-2.*(w11*(w24**2)))+((8.*((v12**2)*(w11*(w24**2))))+aux667));
    aux669=(-16.*((v12**2)*(w12*(w14*w24))))+((8.*(v22*(w12*(w14*w24))))+(((0.+-4.j)*(v12*(w24**2)))+aux668));
    aux670=(8.*(v12*(w14*w24)))+(((0.+4.j)*(v22*(w14*w24)))+((4.*(w12*(w14*w24)))+aux669));
    aux671=(-2.*((w14**2)*w22))+((8.*((v12**2)*((w14**2)*w22)))+((-4.*(v22*((w14**2)*w22)))+aux670));
    aux672=(2.*(v44*(w11*w22)))+((-8.*((v12**2)*(v44*(w11*w22))))+((4.*(v22*(v44*(w11*w22))))+aux671));
    aux673=(v44*w22)+(((0.+4.j)*(v12*(v44*w22)))+((-4.*((v12**2)*(v44*w22)))+aux672));
    aux674=((0.+4.j)*(v12*(w14**2)))+((4.*((v12**2)*(w14**2)))+((-4.*(v22*(w14**2)))+aux673));
    aux675=(-2.*(v44*(w12**2)))+((8.*((v12**2)*(v44*(w12**2))))+((-4.*(v22*(v44*(w12**2))))+aux674));
    aux676=(4.*(v22*(v44*w11)))+((-8.*(v12*(v44*w12)))+(((0.+-4.j)*(v22*(v44*w12)))+aux675));
    aux677=(v44*w11)+(((0.+-4.j)*(v12*(v44*w11)))+((-4.*((v12**2)*(v44*w11)))+aux676));
    aux678=(4.*(w11*(1.+w22)))+(v11*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux679=(((-2.*((v12**2)*v44))+((v22*v44)+aux677))-(w24**2))-((v24**2)*(aux678-((((0.+1.j)+(2.*w12))**2))));
    aux680=(4.*(v14*((v24*(((0.+2.j)*w11)+((4.*w12)+((0.+-2.j)*w22))))+aux658)))+(w44+(2.*(aux679-(w14**2))));
    aux681=v44+((-2.*((v14**2)*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux655))))+aux680);
    output=((0.+1.j)*aux654)/aux681;
    return output

def g(V,W,R,S):
    v11,v12,v13,v14=separate(V,0)
    v21,v22,v23,v24=separate(V,1)
    v31,v32,v33,v34=separate(V,2)
    v41,v42,v43,v44=separate(V,3)
    w11,w12,w13,w14=separate(W,0)
    w21,w22,w23,w24=separate(W,1)
    w31,w32,w33,w34=separate(W,2)
    w41,w42,w43,w44=separate(W,3)
    u1,u2,u3,u4=R[0],R[1],R[2],R[3]
    s1,s2,s3,s4=S[0],S[1],S[2],S[3]
    aux0=1.+((v22*(2.+(4.*w11)))+((-4.*(w12*((0.+-1.j)+w12)))+((2.+(4.*w11))*w22)));
    aux1=v24+((2.*(v24*w11))+(((0.+1.j)*w14)+((-2.*(w12*w14))+(w24+(2.*(w11*w24))))));
    aux2=((v24*(((0.+1.j)*w11)+w12))+(((((0.+1.j)*w11)+w12)*w24)+(v12*aux1)))-(w14*(v22+(((0.+1.j)*w12)+w22)));
    aux3=(((v12**2)*(1.+(2.*w11)))+((w12**2)+(2.*(v12*(((0.+1.j)*w11)+w12)))))-(w11*(v22+w22));
    aux4=(2.*((1.+(2.*w11))*(w24**2)))+(4.*(v24*((((0.+1.j)+(-2.*w12))*w14)+(w24+(2.*(w11*w24))))));
    aux5=((v24**2)*(2.+(4.*w11)))+((4.*((w14**2)*(v22+w22)))+((4.*(((0.+1.j)+(-2.*w12))*(w14*w24)))+aux4));
    aux6=(v22*(2.+(4.*w11)))+((-4.*(w12*((0.+-1.j)+w12)))+((2.*w22)+(4.*(w11*w22))));
    aux7=(v22*(2.+(4.*w11)))+((-4.*(w12*((0.+-1.j)+w12)))+((2.*w22)+(4.*(w11*w22))));
    aux8=(2.*(v14*(w14+(-2.*aux2))))+((2.*(aux3*w44))+(v11*((aux5-((1.+aux6)*w44))-(v44*(1.+aux7)))));
    aux9=(-4.*(v12*(w14*w24)))+((-4.*(w12*(w14*w24)))+((2.*(w11*(w24**2)))+aux8));
    aux10=(-2.*(v44*(w11*w22)))+((2.*((w14**2)*w22))+(((v14**2)*aux0)+((4.*(v24*(w11*w24)))+aux9)));
    aux11=((0.+-4.j)*(v12*(w14**2)))+((-4.*((v12**2)*(w14**2)))+((2.*(v22*(w14**2)))+aux10));
    aux12=(2.*(v44*(w12**2)))+((-4.*(v12*(v24*w14)))+((-4.*(v24*(w12*w14)))+((w14**2)+aux11)));
    aux13=(4.*((v12**2)*(v44*w11)))+((-2.*(v22*(v44*w11)))+((4.*(v12*(v44*w12)))+aux12));
    aux14=(2.*((v12**2)*v44))+((2.*((v24**2)*w11))+(((0.+4.j)*(v12*(v44*w11)))+aux13));
    aux15=(4.*((1.+w11)*w22))+(v22*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux16=(v24*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))))+(w24+((2.*(w11*w24))+((0.+-2.j)*(w12*w24))));
    aux17=(w14*(-1.+(((0.+-2.j)*w12)+(-2.*w22))))+(((0.+1.j)+(((0.+2.j)*w11)+(2.*w12)))*w24);
    aux18=(2.*(v12*((w14*((0.+1.j)+((-2.*w12)+((0.+2.j)*w22))))+aux16)))+((1.+(2.*v22))*aux17);
    aux19=(2.*(w12*w14))+(((0.+-1.j)*(w14*(1.+(2.*w22))))+((-1.+((-2.*w11)+((0.+2.j)*w12)))*w24));
    aux20=(-2.*(v22*(w11*(1.+w22))))+((v12**2)*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))));
    aux21=(2.*(v22*(w12*((0.+1.j)+w12))))+((v12*(((0.+2.j)*w11)+((4.*w12)+((0.+-2.j)*w22))))+aux20);
    aux22=(4.*((1.+w11)*w22))+(v22*(2.+((4.*w11)+((-8.*(w12**2))+((4.*w22)+(8.*(w11*w22)))))));
    aux23=(-2.*(w12**2))+((-4.*(v22*(w12**2)))+(2.*((1.+(v22+(w11+(2.*(v22*w11)))))*w22)));
    aux24=(-4.*((1.+(v22+(w11+(2.*(v22*w11)))))*(w24**2)))+(w44+(2.*((v22+((2.*(v22*w11))+(((0.+2.j)*w12)+aux23)))*w44)));
    aux25=(v44*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux22)))+((4.*(((0.+-1.j)+((2.+(4.*v22))*w12))*(w14*w24)))+aux24);
    aux26=((v22+(w11+(w22+(-2.*(((w12**2)+aux21)-(w11*w22))))))*w44)+(v11*((-4.*((w14**2)*(v22+(w22+(2.*(v22*w22))))))+aux25));
    aux27=(-4.*(v22*(w11*(w24**2))))+((2.*((1.+((2.*v11)+((0.+2.j)*v12)))*(v24*aux19)))+aux26);
    aux28=(4.*((v12**2)*(w24**2)))+((-2.*(w11*(w24**2)))+((8.*((v12**2)*(w11*(w24**2))))+aux27));
    aux29=(-16.*((v12**2)*(w12*(w14*w24))))+((8.*(v22*(w12*(w14*w24))))+(((0.+-4.j)*(v12*(w24**2)))+aux28));
    aux30=(8.*(v12*(w14*w24)))+(((0.+4.j)*(v22*(w14*w24)))+((4.*(w12*(w14*w24)))+aux29));
    aux31=(-2.*((w14**2)*w22))+((8.*((v12**2)*((w14**2)*w22)))+((-4.*(v22*((w14**2)*w22)))+aux30));
    aux32=(2.*(v44*(w11*w22)))+((-8.*((v12**2)*(v44*(w11*w22))))+((4.*(v22*(v44*(w11*w22))))+aux31));
    aux33=(v44*w22)+(((0.+4.j)*(v12*(v44*w22)))+((-4.*((v12**2)*(v44*w22)))+aux32));
    aux34=((0.+4.j)*(v12*(w14**2)))+((4.*((v12**2)*(w14**2)))+((-4.*(v22*(w14**2)))+aux33));
    aux35=(-2.*(v44*(w12**2)))+((8.*((v12**2)*(v44*(w12**2))))+((-4.*(v22*(v44*(w12**2))))+aux34));
    aux36=(4.*(v22*(v44*w11)))+((-8.*(v12*(v44*w12)))+(((0.+-4.j)*(v22*(v44*w12)))+aux35));
    aux37=(v44*w11)+(((0.+-4.j)*(v12*(v44*w11)))+((-4.*((v12**2)*(v44*w11)))+aux36));
    aux38=(4.*(w11*(1.+w22)))+(v11*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux39=(((-2.*((v12**2)*v44))+((v22*v44)+aux37))-(w24**2))-((v24**2)*(aux38-((((0.+1.j)+(2.*w12))**2))));
    aux40=(4.*(v14*((v24*(((0.+2.j)*w11)+((4.*w12)+((0.+-2.j)*w22))))+aux18)))+(w44+(2.*(aux39-(w14**2))));
    output=(2.*((aux14-(w11*w44))-(v44*w11)))/(v44+((-2.*((v14**2)*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux15))))+aux40));
    return output


def h(V,W,R,S):
    v11,v12,v13,v14=separate(V,0)
    v21,v22,v23,v24=separate(V,1)
    v31,v32,v33,v34=separate(V,2)
    v41,v42,v43,v44=separate(V,3)
    w11,w12,w13,w14=separate(W,0)
    w21,w22,w23,w24=separate(W,1)
    w31,w32,w33,w34=separate(W,2)
    w41,w42,w43,w44=separate(W,3)
    u1,u2,u3,u4=R[0],R[1],R[2],R[3]
    s1,s2,s3,s4=S[0],S[1],S[2],S[3]
    aux0=(0.+1.j)*((v11+(w11+((2.*(v22*w11))+((0.+2.j)*(v11*((1.+(2.*v22))*w12))))))*w24);
    aux1=(v14*((2.*w12)+((0.+-1.j)*(1.+(2.*w22)))))+((-1.+((2.*w11)+((0.+-2.j)*w12)))*w24);
    aux2=(w14*((0.+-1.j)+((-2.*w12)+((0.+2.j)*w22))))+((2.*(v24*((w11+(2.*(w11*w22)))-(w12*((0.+1.j)+(2.*w12))))))+aux1);
    aux3=aux0+((v12*aux2)+(-2.*((v12**2)*(w14+((2.*(w14*w22))+(-2.*(w12*w24)))))));
    aux4=((0.+2.j)*(v11*(v24*w22)))+((2.*(v11*(w14*w22)))+((4.*(v11*(v22*(w14*w22))))+aux3));
    aux5=(2.*(v11*(v22*w14)))+(((0.+-1.j)*(w12*w14))+(((0.+-2.j)*(v22*(w12*w14)))+aux4));
    aux6=((0.+1.j)*(v24*w11))+((v24*w12)+((-2.*(v11*(v24*w12)))+((v22*w14)+aux5)));
    aux7=(2.*(w11*w22))+(2.*(v22*((w11+(2.*(w11*w22)))-(w12*((0.+1.j)+(2.*w12))))));
    aux8=((0.+1.j)*(v24+((2.*(v11*v24))+w24)))+(2.*(aux6-(v14*((((0.+1.j)+(-2.*w12))*w12)+(w22+aux7)))));
    aux9=((0.+-1.j)*(1.+((2.+(4.*v22))*w11)))+(4.*((v11+((((0.+1.j)+(-2.*v12))*v12)+(2.*(v11*v22))))*w12));
    aux10=(2.*(s1*(v11+((((0.+1.j)+(-2.*v12))*v12)+(2.*(v11*v22))))))+(u1*(1.+(((0.+2.j)*v12)+((2.*w11)+(4.*(v22*w11))))));
    aux11=(v11*((0.+2.j)+((-4.*w12)+((0.+4.j)*w22))))+(w11*((0.+2.j)+((4.*v12)+(8.*(v12*w22)))));
    aux12=(-2.*(aux10*w22))+(u2*(aux11-(((0.+1.j)+(2.*w12))*(-1.+(4.*(v12*w12))))));
    aux13=(8.*(u1*(v22*(w12**2))))+((s2*(((0.+-2.j)*v11)+((v12*(2.+(-4.*w11)))+aux9)))+aux12);
    aux14=((0.+4.j)*(s1*(v22*w12)))+(((0.+4.j)*(u1*(v22*w12)))+((4.*(u1*(w12**2)))+aux13));
    aux15=((0.+2.j)*(s1*w12))+(((0.+-2.j)*(u1*w12))+((4.*(s1*(v12*w12)))+((4.*(u1*(v12*w12)))+aux14)));
    aux16=(s1*(((0.+2.j)*v12)+((4.*(v12**2))+(-2.*v22))))+((-4.*(s1*(v11*v22)))+((-4.*(u1*(v22*w11)))+aux15));
    aux17=(8.*(u1*(v22*(w11*(w24**2)))))+((s4*aux8)+((((0.+-2.j)*(u1*v12))+aux16)*w44));
    aux18=(8.*(s1*(v11*(v22*(w24**2)))))+((4.*(u1*(w11*(w24**2))))+((-8.*(u2*(v12*(w11*(w24**2)))))+aux17));
    aux19=((0.+4.j)*(s1*(v12*(w24**2))))+(((0.+4.j)*(u1*(v12*(w24**2))))+((-8.*(s1*((v12**2)*(w24**2))))+aux18));
    aux20=(2.*(u1*(w24**2)))+((4.*(s1*(v11*(w24**2))))+(((0.+-4.j)*(u2*(v11*(w24**2))))+aux19));
    aux21=(16.*(u2*(v12*(w12*(w14*w24)))))+((-16.*(u1*(v22*(w12*(w14*w24)))))+aux20);
    aux22=((0.+-4.j)*(u1*(v22*(w14*w24))))+((-8.*(s2*(v11*(v22*(w14*w24)))))+((-8.*(u1*(w12*(w14*w24))))+aux21));
    aux23=(8.*(s2*((v12**2)*(w14*w24))))+(((0.+-4.j)*(s1*(v22*(w14*w24))))+aux22);
    aux24=((0.+-4.j)*(s2*(v12*(w14*w24))))+((-4.*(u1*(v12*(w14*w24))))+(((0.+4.j)*(u2*(v12*(w14*w24))))+aux23));
    aux25=(-4.*(s2*(v11*(w14*w24))))+((4.*(u2*(v11*(w14*w24))))+((-4.*(s1*(v12*(w14*w24))))+aux24));
    aux26=((0.+-2.j)*(s1*(w14*w24)))+(((0.+2.j)*(u1*(w14*w24)))+((-2.*(u2*(w14*w24)))+aux25));
    aux27=(8.*(s1*(v12*(v24*(w12*w24)))))+((8.*(u1*(v12*(v24*(w12*w24)))))+aux26);
    aux28=((0.+-8.j)*(u1*(v24*(w12*w24))))+((-8.*(u2*(v11*(v24*(w12*w24)))))+aux27);
    aux29=(-8.*(s1*(v14*(v22*(w12*w24)))))+((-8.*(u1*(v14*(v22*(w12*w24)))))+aux28);
    aux30=((0.+4.j)*(u2*(v14*(w12*w24))))+((8.*(u2*(v12*(v14*(w12*w24)))))+aux29);
    aux31=(-8.*(s2*(v12*(v24*(w11*w24)))))+((-4.*(s1*(v14*(w12*w24))))+((-4.*(u1*(v14*(w12*w24))))+aux30));
    aux32=(8.*(s2*(v14*(v22*(w11*w24)))))+((8.*(u1*(v24*(w11*w24))))+(((0.+4.j)*(u2*(v24*(w11*w24))))+aux31));
    aux33=((0.+8.j)*(s1*(v12*(v24*w24))))+((4.*(s2*(v14*(w11*w24))))+((-4.*(u2*(v14*(w11*w24))))+aux32));
    aux34=(2.*(u1*(v24*w24)))+((8.*(s1*(v11*(v24*w24))))+(((0.+-4.j)*(s2*(v11*(v24*w24))))+aux33));
    aux35=((0.+4.j)*(s2*(v12*(v14*w24))))+(((0.+-8.j)*(s1*(v14*(v22*w24))))+((2.*(s1*(v24*w24)))+aux34));
    aux36=((0.+2.j)*(u1*(v14*w24)))+((-4.*(u2*(v14*w24)))+((-8.*(s1*(v12*(v14*w24))))+aux35));
    aux37=(8.*(u1*(v22*((w14**2)*w22))))+(((0.+-2.j)*(s1*(v14*w24)))+((2.*(s2*(v14*w24)))+aux36));
    aux38=(-8.*(u1*(v12*(v24*(w14*w22)))))+((4.*(u1*((w14**2)*w22)))+((-8.*(u2*(v12*((w14**2)*w22))))+aux37));
    aux39=(8.*(u2*(v11*(v24*(w14*w22)))))+((-8.*(s1*(v12*(v24*(w14*w22)))))+aux38);
    aux40=(8.*(u1*(v14*(v22*(w14*w22)))))+(((0.+8.j)*(u1*(v24*(w14*w22))))+aux39);
    aux41=(-8.*(u2*(v12*(v14*(w14*w22)))))+((8.*(s1*(v14*(v22*(w14*w22)))))+aux40);
    aux42=(4.*(s1*(v14*(w14*w22))))+((4.*(u1*(v14*(w14*w22))))+(((0.+-4.j)*(u2*(v14*(w14*w22))))+aux41));
    aux43=(8.*(u2*(v12*(v44*(w11*w22)))))+((-8.*(u1*(v22*(v44*(w11*w22)))))+aux42);
    aux44=(-8.*(u2*(v14*(v24*(w11*w22)))))+((8.*(u1*((v24**2)*(w11*w22))))+((-4.*(u1*(v44*(w11*w22))))+aux43));
    aux45=(8.*(s1*((v12**2)*(v44*w22))))+((-8.*(s1*(v11*(v22*(v44*w22)))))+aux44);
    aux46=((0.+-4.j)*(s1*(v12*(v44*w22))))+(((0.+-4.j)*(u1*(v12*(v44*w22))))+aux45);
    aux47=(-2.*(u1*(v44*w22)))+((-4.*(s1*(v11*(v44*w22))))+(((0.+4.j)*(u2*(v11*(v44*w22))))+aux46));
    aux48=(-16.*(s1*(v12*(v14*(v24*w22)))))+((8.*(s1*(v11*((v24**2)*w22))))+aux47);
    aux49=((0.+4.j)*(s1*(v14*(v24*w22))))+(((0.+4.j)*(u1*(v14*(v24*w22))))+aux48);
    aux50=(4.*(s1*((v14**2)*w22)))+(((0.+-4.j)*(u2*((v14**2)*w22)))+((8.*(s1*((v14**2)*(v22*w22))))+aux49));
    aux51=(-4.*(u2*(v12*(w14**2))))+(((0.+4.j)*(s2*(v22*(w14**2))))+((4.*(u1*(v22*(w14**2))))+aux50));
    aux52=((0.+2.j)*(s2*(w14**2)))+(((0.+-2.j)*(u2*(w14**2)))+((4.*(s2*(v12*(w14**2))))+aux51));
    aux53=((0.+-4.j)*(u2*(v24*(w12*w14))))+((8.*(s2*(v12*(v24*(w12*w14)))))+aux52);
    aux54=(4.*(u2*(v14*(w12*w14))))+((-8.*(s2*(v14*(v22*(w12*w14)))))+((-8.*(u1*(v24*(w12*w14))))+aux53));
    aux55=((0.+-4.j)*(s2*(v12*(v24*w14))))+((-4.*(u1*(v12*(v24*w14))))+((-4.*(s2*(v14*(w12*w14))))+aux54));
    aux56=(-4.*(s2*(v11*(v24*w14))))+((4.*(u2*(v11*(v24*w14))))+((-4.*(s1*(v12*(v24*w14))))+aux55));
    aux57=(-4.*(s2*(v24*w14)))+(((0.+2.j)*(u1*(v24*w14)))+((2.*(u2*(v24*w14)))+aux56));
    aux58=((0.+4.j)*(s2*(v14*(v22*w14))))+((4.*(u1*(v14*(v22*w14))))+(((0.+-2.j)*(s1*(v24*w14)))+aux57));
    aux59=(4.*(s2*(v12*(v14*w14))))+((-4.*(u2*(v12*(v14*w14))))+((4.*(s1*(v14*(v22*w14))))+aux58));
    aux60=(8.*(u1*(v22*(v44*(w12**2)))))+(((0.+4.j)*(s2*(v14*w14)))+(((0.+-4.j)*(u2*(v14*w14)))+aux59));
    aux61=(-8.*(u1*((v24**2)*(w12**2))))+((4.*(u1*(v44*(w12**2))))+((-8.*(u2*(v12*(v44*(w12**2)))))+aux60));
    aux62=((0.+4.j)*(u1*(v22*(v44*w12))))+((8.*(s2*(v11*(v22*(v44*w12)))))+((8.*(u2*(v14*(v24*(w12**2)))))+aux61));
    aux63=(-8.*(s2*((v12**2)*(v44*w12))))+(((0.+4.j)*(s1*(v22*(v44*w12))))+aux62);
    aux64=((0.+4.j)*(s2*(v12*(v44*w12))))+((4.*(u1*(v12*(v44*w12))))+(((0.+-4.j)*(u2*(v12*(v44*w12))))+aux63));
    aux65=(4.*(s2*(v11*(v44*w12))))+((-4.*(u2*(v11*(v44*w12))))+((4.*(s1*(v12*(v44*w12))))+aux64));
    aux66=((0.+2.j)*(s1*(v44*w12)))+(((0.+-2.j)*(u1*(v44*w12)))+((2.*(u2*(v44*w12)))+aux65));
    aux67=((0.+-4.j)*(u1*((v24**2)*w12)))+((-8.*(s2*(v11*((v24**2)*w12))))+aux66);
    aux68=(16.*(s2*(v12*(v14*(v24*w12)))))+(((0.+-4.j)*(s1*((v24**2)*w12)))+aux67);
    aux69=((0.+-4.j)*(s2*(v14*(v24*w12))))+((-4.*(u1*(v14*(v24*w12))))+(((0.+4.j)*(u2*(v14*(v24*w12))))+aux68));
    aux70=(4.*(u2*((v14**2)*w12)))+((-8.*(s2*((v14**2)*(v22*w12))))+((-4.*(s1*(v14*(v24*w12))))+aux69));
    aux71=((0.+-4.j)*(s2*(v22*(v44*w11))))+((-4.*(u1*(v22*(v44*w11))))+((-4.*(s2*((v14**2)*w12)))+aux70));
    aux72=((0.+2.j)*(u2*(v44*w11)))+((-4.*(s2*(v12*(v44*w11))))+((4.*(u2*(v12*(v44*w11))))+aux71));
    aux73=((0.+4.j)*(s2*((v24**2)*w11)))+((4.*(u1*((v24**2)*w11)))+(((0.+-2.j)*(s2*(v44*w11)))+aux72));
    aux74=(-4.*(s1*(v11*(v22*v44))))+((4.*(s2*(v14*(v24*w11))))+((-4.*(u2*(v14*(v24*w11))))+aux73));
    aux75=((0.+-2.j)*(u1*(v12*v44)))+((4.*(s1*((v12**2)*v44)))+((-2.*(s1*(v22*v44)))+aux74));
    aux76=((0.+2.j)*(u2*(v11*v44)))+(((0.+2.j)*(s1*(v12*v44)))+((2.*(s2*(v12*v44)))+aux75));
    aux77=((0.+-1.j)*(s2*v44))+(((0.+1.j)*(u2*v44))+(((0.+-2.j)*(s2*(v11*v44)))+aux76));
    aux78=(-8.*(s1*(v12*(v14*v24))))+((2.*(s1*(v24**2)))+((4.*(s1*(v11*(v24**2))))+aux77));
    aux79=((0.+-2.j)*(s1*(v14*v24)))+((-2.*(s2*(v14*v24)))+(((0.+2.j)*(u1*(v14*v24)))+aux78));
    aux80=((0.+2.j)*(s2*(v14**2)))+(((0.+-2.j)*(u2*(v14**2)))+((4.*(s1*((v14**2)*v22)))+aux79));
    aux81=(0.+1.j)*((v11+(w11+((2.*(v22*w11))+((0.+2.j)*(v11*((1.+(2.*v22))*w12))))))*w24);
    aux82=(v14*((2.*w12)+((0.+-1.j)*(1.+(2.*w22)))))+((-1.+((2.*w11)+((0.+-2.j)*w12)))*w24);
    aux83=(w14*((0.+-1.j)+((-2.*w12)+((0.+2.j)*w22))))+((2.*(v24*((w11+(2.*(w11*w22)))-(w12*((0.+1.j)+(2.*w12))))))+aux82);
    aux84=aux81+((v12*aux83)+(-2.*((v12**2)*(w14+((2.*(w14*w22))+(-2.*(w12*w24)))))));
    aux85=((0.+2.j)*(v11*(v24*w22)))+((2.*(v11*(w14*w22)))+((4.*(v11*(v22*(w14*w22))))+aux84));
    aux86=(2.*(v11*(v22*w14)))+(((0.+-1.j)*(w12*w14))+(((0.+-2.j)*(v22*(w12*w14)))+aux85));
    aux87=((0.+1.j)*(v24*w11))+((v24*w12)+((-2.*(v11*(v24*w12)))+((v22*w14)+aux86)));
    aux88=(2.*(w11*w22))+(2.*(v22*((w11+(2.*(w11*w22)))-(w12*((0.+1.j)+(2.*w12))))));
    aux89=((0.+1.j)*(v24+((2.*(v11*v24))+w24)))+(2.*(aux87-(v14*((((0.+1.j)+(-2.*w12))*w12)+(w22+aux88)))));
    aux90=(4.*((1.+w11)*w22))+(v22*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux91=(v24*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))))+(w24+((2.*(w11*w24))+((0.+-2.j)*(w12*w24))));
    aux92=(w14*(-1.+(((0.+-2.j)*w12)+(-2.*w22))))+(((0.+1.j)+(((0.+2.j)*w11)+(2.*w12)))*w24);
    aux93=(2.*(v12*((w14*((0.+1.j)+((-2.*w12)+((0.+2.j)*w22))))+aux91)))+((1.+(2.*v22))*aux92);
    aux94=(2.*(w12*w14))+(((0.+-1.j)*(w14*(1.+(2.*w22))))+((-1.+((-2.*w11)+((0.+2.j)*w12)))*w24));
    aux95=(-2.*(v22*(w11*(1.+w22))))+((v12**2)*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))));
    aux96=(2.*(v22*(w12*((0.+1.j)+w12))))+((v12*(((0.+2.j)*w11)+((4.*w12)+((0.+-2.j)*w22))))+aux95);
    aux97=(4.*((1.+w11)*w22))+(v22*(2.+((4.*w11)+((-8.*(w12**2))+((4.*w22)+(8.*(w11*w22)))))));
    aux98=(-2.*(w12**2))+((-4.*(v22*(w12**2)))+(2.*((1.+(v22+(w11+(2.*(v22*w11)))))*w22)));
    aux99=(-4.*((1.+(v22+(w11+(2.*(v22*w11)))))*(w24**2)))+(w44+(2.*((v22+((2.*(v22*w11))+(((0.+2.j)*w12)+aux98)))*w44)));
    aux100=(v44*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux97)))+((4.*(((0.+-1.j)+((2.+(4.*v22))*w12))*(w14*w24)))+aux99);
    aux101=((v22+(w11+(w22+(-2.*(((w12**2)+aux96)-(w11*w22))))))*w44)+(v11*((-4.*((w14**2)*(v22+(w22+(2.*(v22*w22))))))+aux100));
    aux102=(-4.*(v22*(w11*(w24**2))))+((2.*((1.+((2.*v11)+((0.+2.j)*v12)))*(v24*aux94)))+aux101);
    aux103=(4.*((v12**2)*(w24**2)))+((-2.*(w11*(w24**2)))+((8.*((v12**2)*(w11*(w24**2))))+aux102));
    aux104=(-16.*((v12**2)*(w12*(w14*w24))))+((8.*(v22*(w12*(w14*w24))))+(((0.+-4.j)*(v12*(w24**2)))+aux103));
    aux105=(8.*(v12*(w14*w24)))+(((0.+4.j)*(v22*(w14*w24)))+((4.*(w12*(w14*w24)))+aux104));
    aux106=(-2.*((w14**2)*w22))+((8.*((v12**2)*((w14**2)*w22)))+((-4.*(v22*((w14**2)*w22)))+aux105));
    aux107=(2.*(v44*(w11*w22)))+((-8.*((v12**2)*(v44*(w11*w22))))+((4.*(v22*(v44*(w11*w22))))+aux106));
    aux108=(v44*w22)+(((0.+4.j)*(v12*(v44*w22)))+((-4.*((v12**2)*(v44*w22)))+aux107));
    aux109=((0.+4.j)*(v12*(w14**2)))+((4.*((v12**2)*(w14**2)))+((-4.*(v22*(w14**2)))+aux108));
    aux110=(-2.*(v44*(w12**2)))+((8.*((v12**2)*(v44*(w12**2))))+((-4.*(v22*(v44*(w12**2))))+aux109));
    aux111=(4.*(v22*(v44*w11)))+((-8.*(v12*(v44*w12)))+(((0.+-4.j)*(v22*(v44*w12)))+aux110));
    aux112=(v44*w11)+(((0.+-4.j)*(v12*(v44*w11)))+((-4.*((v12**2)*(v44*w11)))+aux111));
    aux113=(4.*(w11*(1.+w22)))+(v11*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux114=(((-2.*((v12**2)*v44))+((v22*v44)+aux112))-(w24**2))-((v24**2)*(aux113-((((0.+1.j)+(2.*w12))**2))));
    aux115=(4.*(v14*((v24*(((0.+2.j)*w11)+((4.*w12)+((0.+-2.j)*w22))))+aux93)))+(w44+(2.*(aux114-(w14**2))));
    output=(-2.*(aux80-(u4*aux89)))/(v44+((-2.*((v14**2)*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux90))))+aux115));
    return output


def j(V,W,R,S):
    v11,v12,v13,v14=separate(V,0)
    v21,v22,v23,v24=separate(V,1)
    v31,v32,v33,v34=separate(V,2)
    v41,v42,v43,v44=separate(V,3)
    w11,w12,w13,w14=separate(W,0)
    w21,w22,w23,w24=separate(W,1)
    w31,w32,w33,w34=separate(W,2)
    w41,w42,w43,w44=separate(W,3)
    u1,u2,u3,u4=R[0],R[1],R[2],R[3]
    s1,s2,s3,s4=S[0],S[1],S[2],S[3]
    aux0=(1.+((2.*v11)+((2.*w11)+(((0.+-2.j)*w12)+(v12*((0.+2.j)+(4.*w12)))))))*w24;
    aux1=((((0.+1.j)*v22)+(w12+(2.*(v22*w12))))*w24)+(v12*(v24+((2.*(v24*w22))+w24)));
    aux2=v14*(((v24*(w12+((0.+-1.j)*w22)))+aux1)-(w14*(v22+(w22+(2.*(v22*w22))))));
    aux3=(w12*(w12+(2.*(v22*((0.+1.j)+w12)))))+((2.*(v12*(w12+((0.+-1.j)*w22))))+((v12**2)*(1.+(2.*w22))));
    aux4=(2.*(v22*w11))+(w22+((2.*(v11*w22))+(-2.*(aux3-((w11+(2.*(v22*(v11+w11))))*w22)))));
    aux5=(-4.*(v22*(w11*(w24**2))))+((4.*aux2)+((v22+((2.*(v11*v22))+aux4))*w44));
    aux6=(4.*((v12**2)*(w24**2)))+((-4.*(v11*(v22*(w24**2))))+((-2.*(w11*(w24**2)))+aux5));
    aux7=(8.*(v22*(w12*(w14*w24))))+((-2.*(v11*(w24**2)))+(((0.+-4.j)*(v12*(w24**2)))+aux6));
    aux8=(4.*(v12*(w14*w24)))+(((0.+4.j)*(v22*(w14*w24)))+((4.*(w12*(w14*w24)))+aux7));
    aux9=(4.*(v24*(w14*(v12+(w12+(((0.+-1.j)*w22)+(2.*(v12*w22))))))))+((-2.*((v14**2)*(v22+(w22+(2.*(v22*w22))))))+((-2.*(v24*aux0))+aux8));
    aux10=(4.*(v22*(v44*(w11*w22))))+((-2.*((w14**2)*w22))+((-4.*(v22*((w14**2)*w22)))+aux9));
    aux11=(-4.*((v12**2)*(v44*w22)))+((4.*(v11*(v22*(v44*w22))))+((2.*(v44*(w11*w22)))+aux10));
    aux12=(-2.*(v22*(w14**2)))+((v44*w22)+((2.*(v11*(v44*w22)))+(((0.+4.j)*(v12*(v44*w22)))+aux11)));
    aux13=((0.+-4.j)*(v22*(v44*w12)))+((-2.*(v44*(w12**2)))+((-4.*(v22*(v44*(w12**2))))+aux12));
    aux14=(2.*(v11*(v22*v44)))+((2.*(v22*(v44*w11)))+((-4.*(v12*(v44*w12)))+aux13));
    aux15=(v24**2)*(((2.*v11)+((2.*w11)+(4.*((v11+w11)*w22))))-((((0.+1.j)+(2.*w12))**2)));
    aux16=(4.*((1.+w11)*w22))+(v22*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux17=(v24*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))))+(w24+((2.*(w11*w24))+((0.+-2.j)*(w12*w24))));
    aux18=(w14*(-1.+(((0.+-2.j)*w12)+(-2.*w22))))+(((0.+1.j)+(((0.+2.j)*w11)+(2.*w12)))*w24);
    aux19=(2.*(v12*((w14*((0.+1.j)+((-2.*w12)+((0.+2.j)*w22))))+aux17)))+((1.+(2.*v22))*aux18);
    aux20=(2.*(w12*w14))+(((0.+-1.j)*(w14*(1.+(2.*w22))))+((-1.+((-2.*w11)+((0.+2.j)*w12)))*w24));
    aux21=(-2.*(v22*(w11*(1.+w22))))+((v12**2)*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))));
    aux22=(2.*(v22*(w12*((0.+1.j)+w12))))+((v12*(((0.+2.j)*w11)+((4.*w12)+((0.+-2.j)*w22))))+aux21);
    aux23=(4.*((1.+w11)*w22))+(v22*(2.+((4.*w11)+((-8.*(w12**2))+((4.*w22)+(8.*(w11*w22)))))));
    aux24=(-2.*(w12**2))+((-4.*(v22*(w12**2)))+(2.*((1.+(v22+(w11+(2.*(v22*w11)))))*w22)));
    aux25=(-4.*((1.+(v22+(w11+(2.*(v22*w11)))))*(w24**2)))+(w44+(2.*((v22+((2.*(v22*w11))+(((0.+2.j)*w12)+aux24)))*w44)));
    aux26=(v44*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux23)))+((4.*(((0.+-1.j)+((2.+(4.*v22))*w12))*(w14*w24)))+aux25);
    aux27=((v22+(w11+(w22+(-2.*(((w12**2)+aux22)-(w11*w22))))))*w44)+(v11*((-4.*((w14**2)*(v22+(w22+(2.*(v22*w22))))))+aux26));
    aux28=(-4.*(v22*(w11*(w24**2))))+((2.*((1.+((2.*v11)+((0.+2.j)*v12)))*(v24*aux20)))+aux27);
    aux29=(4.*((v12**2)*(w24**2)))+((-2.*(w11*(w24**2)))+((8.*((v12**2)*(w11*(w24**2))))+aux28));
    aux30=(-16.*((v12**2)*(w12*(w14*w24))))+((8.*(v22*(w12*(w14*w24))))+(((0.+-4.j)*(v12*(w24**2)))+aux29));
    aux31=(8.*(v12*(w14*w24)))+(((0.+4.j)*(v22*(w14*w24)))+((4.*(w12*(w14*w24)))+aux30));
    aux32=(-2.*((w14**2)*w22))+((8.*((v12**2)*((w14**2)*w22)))+((-4.*(v22*((w14**2)*w22)))+aux31));
    aux33=(2.*(v44*(w11*w22)))+((-8.*((v12**2)*(v44*(w11*w22))))+((4.*(v22*(v44*(w11*w22))))+aux32));
    aux34=(v44*w22)+(((0.+4.j)*(v12*(v44*w22)))+((-4.*((v12**2)*(v44*w22)))+aux33));
    aux35=((0.+4.j)*(v12*(w14**2)))+((4.*((v12**2)*(w14**2)))+((-4.*(v22*(w14**2)))+aux34));
    aux36=(-2.*(v44*(w12**2)))+((8.*((v12**2)*(v44*(w12**2))))+((-4.*(v22*(v44*(w12**2))))+aux35));
    aux37=(4.*(v22*(v44*w11)))+((-8.*(v12*(v44*w12)))+(((0.+-4.j)*(v22*(v44*w12)))+aux36));
    aux38=(v44*w11)+(((0.+-4.j)*(v12*(v44*w11)))+((-4.*((v12**2)*(v44*w11)))+aux37));
    aux39=(4.*(w11*(1.+w22)))+(v11*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux40=(((-2.*((v12**2)*v44))+((v22*v44)+aux38))-(w24**2))-((v24**2)*(aux39-((((0.+1.j)+(2.*w12))**2))));
    aux41=(4.*(v14*((v24*(((0.+2.j)*w11)+((4.*w12)+((0.+-2.j)*w22))))+aux19)))+(w44+(2.*(aux40-(w14**2))));
    output=(-2.*((((-2.*((v12**2)*v44))+((v22*v44)+aux14))-(w24**2))-aux15))/(v44+((-2.*((v14**2)*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux16))))+aux41));
    return output

def i(V,W,R,S):
    v11,v12,v13,v14=separate(V,0)
    v21,v22,v23,v24=separate(V,1)
    v31,v32,v33,v34=separate(V,2)
    v41,v42,v43,v44=separate(V,3)
    w11,w12,w13,w14=separate(W,0)
    w21,w22,w23,w24=separate(W,1)
    w31,w32,w33,w34=separate(W,2)
    w41,w42,w43,w44=separate(W,3)
    u1,u2,u3,u4=R[0],R[1],R[2],R[3]
    s1,s2,s3,s4=S[0],S[1],S[2],S[3]
    aux0=(-2.*(w12*(v12+(w12+(2.*(v11*w12))))))+((2.*(v11*w22))+((2.+(4.*v11))*(w11*w22)));
    aux1=v24*(w11+(((0.+-2.j)*(v12*w11))+(((0.+1.j)*((-1.+(2.*v11))*w12))+aux0)));
    aux2=(4.*(v11*(v22*w12)))+(((0.+2.j)*(v11*w22))+((-2.*(v12*w22))+((0.+1.j)*(v22+w22))));
    aux3=v12+(((0.+-2.j)*(v12*w12))+((-4.*((v12**2)*w12))+((2.*(v22*w12))+aux2)));
    aux4=(v11*(v22*(2.+(4.*w11))))+(((0.+1.j)*w12)+(((0.+2.j)*(v11*w12))+(-2.*(v12*w12))));
    aux5=(v11+((2.*(v22*w11))+aux4))-(v12*((0.+-1.j)+((2.*v12)+(((0.+2.j)*w11)+(4.*(v12*w11))))));
    aux6=(-2.*(v14*(((0.+-1.j)+(v12*(2.+(4.*w11))))*w22)))+((2.*aux1)+((2.*(w14*aux3))+(-2.*(aux5*w24))));
    aux7=(v14*(((0.+-1.j)+(2.*w12))*(-1.+(4.*(v12*w12)))))+(((0.+1.j)*w14)+aux6);
    aux8=((0.+-2.j)*(v12*v24))+((v14*(v22*((0.+2.j)+(((0.+4.j)*w11)+(4.*w12)))))+aux7);
    aux9=((0.+-2.j)*(v22*(1.+((2.*w11)+((0.+-2.j)*w12)))))+(2.*(((0.+-1.j)+((2.*v12)+(4.*(v12*w11))))*w22));
    aux10=(w11+((2.*(v11*w22))+((2.+(4.*v11))*(w11*w22))))-(w12*((0.+1.j)+((2.*w12)+(v11*((0.+-2.j)+(4.*w12))))));
    aux11=-2.*(((1.+(2.*v11))*(w14*((2.*(v22*w12))+((0.+1.j)*w22))))+(v24*aux10));
    aux12=(2.*(v11*v22))+((2.*(v22*w11))+((4.*(v11*(v22*w11)))+((0.+1.j)*((1.+(2.*v11))*w12))));
    aux13=(w14*((0.+1.j)+((2.*w12)+((0.+-2.j)*w22))))+(w24+((-2.*(w11*w24))+((0.+2.j)*(w12*w24))));
    aux14=(-4.*((v12**2)*((-2.*(w12*w14))+(w24+(2.*(w11*w24))))))+((0.+2.j)*(v12*((v24*(1.+((2.*w11)+((0.+-2.j)*w12))))+aux13)));
    aux15=(v14*(aux9-(((0.+-1.j)+(2.*w12))*(-1.+(4.*(v12*w12))))))+(aux11+((2.*((v11+aux12)*w24))+aux14));
    aux16=(v12*(2.+(((0.+-4.j)*w12)+(-4.*w22))))+((0.+1.j)*(1.+((2.*w22)+(4.*(v11*w22)))));
    aux17=(-8.*((v12**2)*w12))+((v22*((0.+2.j)+((4.*w12)+(8.*(v11*w12)))))+aux16);
    aux18=(v12*((0.+1.j)+(((0.+-2.j)*w11)+(-2.*w12))))+((0.+1.j)*((1.+(2.*v11))*w12));
    aux19=(-2.*((v12**2)*(1.+(2.*w11))))+((2.*(v22*(v11+(w11+(2.*(v11*w11))))))+aux18);
    aux20=((0.+1.j)*((-1.+(2.*v11))*w12))+((-2.*((1.+(2.*v11))*(w12**2)))+(2.*((v11+(w11+(2.*(v11*w11))))*w22)));
    aux21=(w12*(-1.+(((0.+-2.j)*v12)+(4.*(v12*w12)))))+(((0.+1.j)+((-2.*v12)+(-4.*(v12*w11))))*w22);
    aux22=(u2*(w11+(((0.+-1.j)*(v12*(1.+((2.*w11)+((0.+-2.j)*w12)))))+aux20)))+(u1*((v22*((0.+1.j)+(((0.+2.j)*w11)+(2.*w12))))+aux21));
    aux23=(((0.+-1.j)*u1)+((-2.*(s2*v11))+((s1*aux17)+(-2.*((s2*aux19)+aux22)))))*w44;
    aux24=(-8.*(u1*(v12*(w11*(w24**2)))))+((u4*aux8)+((s4*(((0.+-1.j)*(w14+(2.*(v22*w14))))+aux15))+aux23));
    aux25=(-4.*(u1*(v12*(w24**2))))+((4.*(u2*(w11*(w24**2))))+((8.*(u2*(v11*(w11*(w24**2)))))+aux24));
    aux26=((0.+-4.j)*(s1*(v11*(w24**2))))+((4.*(u2*(v11*(w24**2))))+((4.*(s1*(v12*(w24**2))))+aux25));
    aux27=(16.*(u1*(v12*(w12*(w14*w24)))))+(((0.+-2.j)*(s1*(w24**2)))+(((0.+2.j)*(u1*(w24**2)))+aux26));
    aux28=(-8.*(s1*(v11*(v22*(w14*w24)))))+((-8.*(u2*(w12*(w14*w24))))+((-16.*(u2*(v11*(w12*(w14*w24)))))+aux27));
    aux29=(8.*(s1*((v12**2)*(w14*w24))))+((-4.*(s1*(v22*(w14*w24))))+((4.*(u1*(v22*(w14*w24))))+aux28));
    aux30=(-4.*(s2*(v12*(w14*w24))))+(((0.+-4.j)*(u1*(v12*(w14*w24))))+((-4.*(u2*(v12*(w14*w24))))+aux29));
    aux31=((0.+4.j)*(u2*(v11*(w14*w24))))+(((0.+4.j)*(s1*(v12*(w14*w24))))+aux30);
    aux32=(-2.*(u1*(w14*w24)))+(((0.+-2.j)*(u2*(w14*w24)))+(((0.+4.j)*(s2*(v11*(w14*w24))))+aux31));
    aux33=(4.*(u1*(v24*(w12*w24))))+((-8.*(s1*(v11*(v24*(w12*w24)))))+(((0.+2.j)*(s2*(w14*w24)))+aux32));
    aux34=(-8.*(u2*(v14*(w12*w24))))+((8.*(s1*(v12*(v14*(w12*w24)))))+((-4.*(s1*(v24*(w12*w24))))+aux33));
    aux35=(-8.*(u1*(v12*(v24*(w11*w24)))))+(((0.+4.j)*(u1*(v14*(w12*w24))))+aux34);
    aux36=(8.*(s2*(v11*(v24*(w11*w24)))))+((8.*(u2*(v11*(v24*(w11*w24)))))+aux35);
    aux37=(4.*(s2*(v24*(w11*w24))))+(((0.+4.j)*(u1*(v24*(w11*w24))))+((4.*(u2*(v24*(w11*w24))))+aux36));
    aux38=(-8.*(u2*(v12*(v14*(w11*w24)))))+((8.*(u1*(v14*(v22*(w11*w24)))))+aux37);
    aux39=((0.+-8.j)*(u2*(v14*(w11*w24))))+((-8.*(s2*(v12*(v14*(w11*w24)))))+aux38);
    aux40=(4.*(u2*(v11*(v24*w24))))+((4.*(s1*(v12*(v24*w24))))+((-4.*(u1*(v12*(v24*w24))))+aux39));
    aux41=((0.+4.j)*(u1*(v24*w24)))+(((0.+-4.j)*(s1*(v11*(v24*w24))))+((4.*(s2*(v11*(v24*w24))))+aux40));
    aux42=(-4.*(s1*(v14*(v22*w24))))+((4.*(u1*(v14*(v22*w24))))+(((0.+-4.j)*(s1*(v24*w24)))+aux41));
    aux43=((0.+4.j)*(s1*(v12*(v14*w24))))+((-4.*(s2*(v12*(v14*w24))))+((-4.*(u2*(v12*(v14*w24))))+aux42));
    aux44=((0.+2.j)*(s2*(v14*w24)))+((2.*(u1*(v14*w24)))+(((0.+-2.j)*(u2*(v14*w24)))+aux43));
    aux45=(8.*(u2*(v11*((w14**2)*w22))))+((-8.*(u1*(v12*((w14**2)*w22))))+((-4.*(s1*(v14*w24)))+aux44));
    aux46=(-4.*(u1*(v24*(w14*w22))))+((8.*(s1*(v11*(v24*(w14*w22)))))+((4.*(u2*((w14**2)*w22)))+aux45));
    aux47=(8.*(u2*(v14*(w14*w22))))+((-8.*(s1*(v12*(v14*(w14*w22)))))+((4.*(s1*(v24*(w14*w22))))+aux46));
    aux48=(8.*(u1*(v12*(v44*(w11*w22)))))+(((0.+-4.j)*(u1*(v14*(w14*w22))))+aux47);
    aux49=(-8.*(u1*(v14*(v24*(w11*w22)))))+((-4.*(u2*(v44*(w11*w22))))+((-8.*(u2*(v11*(v44*(w11*w22)))))+aux48));
    aux50=(-4.*(s1*(v12*(v44*w22))))+((4.*(u1*(v12*(v44*w22))))+((8.*(u2*((v14**2)*(w11*w22))))+aux49));
    aux51=((0.+-2.j)*(u1*(v44*w22)))+(((0.+4.j)*(s1*(v11*(v44*w22))))+((-4.*(u2*(v11*(v44*w22))))+aux50));
    aux52=(4.*(s1*(v14*(v24*w22))))+((-4.*(u1*(v14*(v24*w22))))+(((0.+2.j)*(s1*(v44*w22)))+aux51));
    aux53=(8.*(s2*(v11*(v22*(w14**2)))))+(((0.+-4.j)*(s1*((v14**2)*w22)))+((4.*(u2*((v14**2)*w22)))+aux52));
    aux54=(-8.*(s2*((v12**2)*(w14**2))))+((4.*(s2*(v22*(w14**2))))+(((0.+4.j)*(u1*(v22*(w14**2))))+aux53));
    aux55=((0.+-4.j)*(s2*(v12*(w14**2))))+(((0.+-4.j)*(u2*(v12*(w14**2))))+aux54);
    aux56=(-8.*(u2*(v11*(v24*(w12*w14)))))+((8.*(u1*(v12*(v24*(w12*w14)))))+((2.*(u2*(w14**2)))+aux55));
    aux57=((0.+-4.j)*(u1*(v24*(w12*w14))))+((-4.*(u2*(v24*(w12*w14))))+((-8.*(s2*(v11*(v24*(w12*w14)))))+aux56));
    aux58=(8.*(u2*(v12*(v14*(w12*w14)))))+((-8.*(u1*(v14*(v22*(w12*w14)))))+((-4.*(s2*(v24*(w12*w14))))+aux57));
    aux59=((0.+8.j)*(u2*(v14*(w12*w14))))+((8.*(s2*(v12*(v14*(w12*w14)))))+aux58);
    aux60=((0.+8.j)*(s2*(v11*(v24*w14))))+(((0.+-4.j)*(s1*(v12*(v24*w14))))+((-8.*(s2*(v12*(v24*w14))))+aux59));
    aux61=((0.+2.j)*(s2*(v24*w14)))+((-4.*(u1*(v24*w14)))+(((0.+-2.j)*(u2*(v24*w14)))+aux60));
    aux62=((0.+4.j)*(s1*(v14*(v22*w14))))+((8.*(s2*(v14*(v22*w14))))+((2.*(s1*(v24*w14)))+aux61));
    aux63=(2.*(s2*(v14*w14)))+((2.*(u2*(v14*w14)))+(((0.+-8.j)*(s2*(v12*(v14*w14))))+aux62));
    aux64=(4.*(u2*(v44*(w12**2))))+((8.*(u2*(v11*(v44*(w12**2)))))+((-8.*(u1*(v12*(v44*(w12**2)))))+aux63));
    aux65=(8.*(s1*(v11*(v22*(v44*w12)))))+((-8.*(u2*((v14**2)*(w12**2))))+((8.*(u1*(v14*(v24*(w12**2)))))+aux64));
    aux66=(-8.*(s1*((v12**2)*(v44*w12))))+((4.*(s1*(v22*(v44*w12))))+((-4.*(u1*(v22*(v44*w12))))+aux65));
    aux67=(4.*(s2*(v12*(v44*w12))))+(((0.+4.j)*(u1*(v12*(v44*w12))))+((4.*(u2*(v12*(v44*w12))))+aux66));
    aux68=((0.+-4.j)*(u2*(v11*(v44*w12))))+(((0.+-4.j)*(s1*(v12*(v44*w12))))+aux67);
    aux69=(2.*(u1*(v44*w12)))+(((0.+2.j)*(u2*(v44*w12)))+(((0.+-4.j)*(s2*(v11*(v44*w12))))+aux68));
    aux70=(4.*(u1*((v24**2)*w12)))+((-8.*(s1*(v11*((v24**2)*w12))))+(((0.+-2.j)*(s2*(v44*w12)))+aux69));
    aux71=(-4.*(u2*(v14*(v24*w12))))+((16.*(s1*(v12*(v14*(v24*w12)))))+((-4.*(s1*((v24**2)*w12)))+aux70));
    aux72=((0.+4.j)*(s1*(v14*(v24*w12))))+((-4.*(s2*(v14*(v24*w12))))+(((0.+-4.j)*(u1*(v14*(v24*w12))))+aux71));
    aux73=((0.+4.j)*(s2*((v14**2)*w12)))+(((0.+4.j)*(u2*((v14**2)*w12)))+((-8.*(s1*((v14**2)*(v22*w12))))+aux72));
    aux74=((0.+-4.j)*(u1*(v22*(v44*w11))))+((-8.*(s2*(v11*(v22*(v44*w11)))))+aux73);
    aux75=((0.+4.j)*(u2*(v12*(v44*w11))))+((8.*(s2*((v12**2)*(v44*w11))))+((-4.*(s2*(v22*(v44*w11))))+aux74));
    aux76=(8.*(s2*(v11*((v24**2)*w11))))+((-2.*(u2*(v44*w11)))+(((0.+4.j)*(s2*(v12*(v44*w11))))+aux75));
    aux77=(-16.*(s2*(v12*(v14*(v24*w11)))))+((4.*(s2*((v24**2)*w11)))+(((0.+4.j)*(u1*((v24**2)*w11)))+aux76));
    aux78=((0.+-4.j)*(s2*(v14*(v24*w11))))+(((0.+-4.j)*(u2*(v14*(v24*w11))))+aux77);
    aux79=((0.+-2.j)*(u1*(v22*v44)))+((-4.*(s2*(v11*(v22*v44))))+((8.*(s2*((v14**2)*(v22*w11))))+aux78));
    aux80=((0.+2.j)*(u2*(v12*v44)))+((4.*(s2*((v12**2)*v44)))+(((0.+2.j)*(s1*(v22*v44)))+aux79));
    aux81=(-2.*(s2*(v11*v44)))+((2.*(s1*(v12*v44)))+(((0.+-2.j)*(s2*(v12*v44)))+aux80));
    aux82=(4.*(s2*(v11*(v24**2))))+(((0.+1.j)*(s1*v44))+(((0.+-1.j)*(u1*v44))+aux81));
    aux83=(-8.*(s2*(v12*(v14*v24))))+(((0.+-2.j)*(s1*(v24**2)))+(((0.+2.j)*(u1*(v24**2)))+aux82));
    aux84=(-2.*(s1*(v14*v24)))+(((0.+2.j)*(s2*(v14*v24)))+(((0.+-2.j)*(u2*(v14*v24)))+aux83));
    aux85=(4.*((1.+w11)*w22))+(v22*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux86=(v24*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))))+(w24+((2.*(w11*w24))+((0.+-2.j)*(w12*w24))));
    aux87=(w14*(-1.+(((0.+-2.j)*w12)+(-2.*w22))))+(((0.+1.j)+(((0.+2.j)*w11)+(2.*w12)))*w24);
    aux88=(2.*(v12*((w14*((0.+1.j)+((-2.*w12)+((0.+2.j)*w22))))+aux86)))+((1.+(2.*v22))*aux87);
    aux89=(2.*(w12*w14))+(((0.+-1.j)*(w14*(1.+(2.*w22))))+((-1.+((-2.*w11)+((0.+2.j)*w12)))*w24));
    aux90=(-2.*(v22*(w11*(1.+w22))))+((v12**2)*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))));
    aux91=(2.*(v22*(w12*((0.+1.j)+w12))))+((v12*(((0.+2.j)*w11)+((4.*w12)+((0.+-2.j)*w22))))+aux90);
    aux92=(4.*((1.+w11)*w22))+(v22*(2.+((4.*w11)+((-8.*(w12**2))+((4.*w22)+(8.*(w11*w22)))))));
    aux93=(-2.*(w12**2))+((-4.*(v22*(w12**2)))+(2.*((1.+(v22+(w11+(2.*(v22*w11)))))*w22)));
    aux94=(-4.*((1.+(v22+(w11+(2.*(v22*w11)))))*(w24**2)))+(w44+(2.*((v22+((2.*(v22*w11))+(((0.+2.j)*w12)+aux93)))*w44)));
    aux95=(v44*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux92)))+((4.*(((0.+-1.j)+((2.+(4.*v22))*w12))*(w14*w24)))+aux94);
    aux96=((v22+(w11+(w22+(-2.*(((w12**2)+aux91)-(w11*w22))))))*w44)+(v11*((-4.*((w14**2)*(v22+(w22+(2.*(v22*w22))))))+aux95));
    aux97=(-4.*(v22*(w11*(w24**2))))+((2.*((1.+((2.*v11)+((0.+2.j)*v12)))*(v24*aux89)))+aux96);
    aux98=(4.*((v12**2)*(w24**2)))+((-2.*(w11*(w24**2)))+((8.*((v12**2)*(w11*(w24**2))))+aux97));
    aux99=(-16.*((v12**2)*(w12*(w14*w24))))+((8.*(v22*(w12*(w14*w24))))+(((0.+-4.j)*(v12*(w24**2)))+aux98));
    aux100=(8.*(v12*(w14*w24)))+(((0.+4.j)*(v22*(w14*w24)))+((4.*(w12*(w14*w24)))+aux99));
    aux101=(-2.*((w14**2)*w22))+((8.*((v12**2)*((w14**2)*w22)))+((-4.*(v22*((w14**2)*w22)))+aux100));
    aux102=(2.*(v44*(w11*w22)))+((-8.*((v12**2)*(v44*(w11*w22))))+((4.*(v22*(v44*(w11*w22))))+aux101));
    aux103=(v44*w22)+(((0.+4.j)*(v12*(v44*w22)))+((-4.*((v12**2)*(v44*w22)))+aux102));
    aux104=((0.+4.j)*(v12*(w14**2)))+((4.*((v12**2)*(w14**2)))+((-4.*(v22*(w14**2)))+aux103));
    aux105=(-2.*(v44*(w12**2)))+((8.*((v12**2)*(v44*(w12**2))))+((-4.*(v22*(v44*(w12**2))))+aux104));
    aux106=(4.*(v22*(v44*w11)))+((-8.*(v12*(v44*w12)))+(((0.+-4.j)*(v22*(v44*w12)))+aux105));
    aux107=(v44*w11)+(((0.+-4.j)*(v12*(v44*w11)))+((-4.*((v12**2)*(v44*w11)))+aux106));
    aux108=(4.*(w11*(1.+w22)))+(v11*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux109=(((-2.*((v12**2)*v44))+((v22*v44)+aux107))-(w24**2))-((v24**2)*(aux108-((((0.+1.j)+(2.*w12))**2))));
    aux110=(4.*(v14*((v24*(((0.+2.j)*w11)+((4.*w12)+((0.+-2.j)*w22))))+aux88)))+(w44+(2.*(aux109-(w14**2))));
    output=(-2.*((2.*(s2*(v14**2)))+((4.*(s2*((v14**2)*v22)))+aux84)))/(v44+((-2.*((v14**2)*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux85))))+aux110));
    return output

def k(V,W,R,S):
    v11,v12,v13,v14=separate(V,0)
    v21,v22,v23,v24=separate(V,1)
    v31,v32,v33,v34=separate(V,2)
    v41,v42,v43,v44=separate(V,3)
    w11,w12,w13,w14=separate(W,0)
    w21,w22,w23,w24=separate(W,1)
    w31,w32,w33,w34=separate(W,2)
    w41,w42,w43,w44=separate(W,3)
    u1,u2,u3,u4=R[0],R[1],R[2],R[3]
    s1,s2,s3,s4=S[0],S[1],S[2],S[3]
    aux0=(v22*((((0.+-2.j)+(4.*w12))*w14)+(-4.*(w11*w24))))+(((0.+1.j)+(2.*v12))*((2.*(w14*w22))-(((0.+1.j)+(2.*w12))*w24)));
    aux1=v14*(v24+((-4.*(v24*(w12*((2.*v12)+w12))))+((4.*(v24*(w11*w22)))+aux0)));
    aux2=((0.+-2.j)*(v11*(w22*w44)))+(4.*((v12**2)*((w12*(v44+w44))-(w14*w24))));
    aux3=((0.+2.j)*(v11*(w24**2)))+(aux1+(((0.+2.j)*(v22*(w11*w44)))+((-4.*(v11*(v22*(w12*w44))))+aux2)));
    aux4=(4.*(v11*(v24*(w12*w24))))+((w14*w24)+((4.*(v11*(v22*(w14*w24))))+aux3));
    aux5=(-4.*(v11*(v24*(w14*w22))))+(((0.+2.j)*(v11*(v24*w24)))+(((0.+-2.j)*(v24*(w11*w24)))+aux4));
    aux6=((v14**2)*((4.*(v22*w12))+((0.+2.j)*w22)))+(((0.+-2.j)*(v11*(v44*w22)))+aux5);
    aux7=((0.+-2.j)*(v22*(w14**2)))+((v24*(((0.+-2.j)*(v24*w11))+((4.*(v11*(v24*w12)))+w14)))+aux6);
    aux8=((0.+2.j)*(v22*(v44*w11)))+((-4.*(v11*(v22*(v44*w12))))+(((0.+2.j)*(v24*(w12*w14)))+aux7));
    aux9=(8.*(w12*(w14*w24)))+((-4.*(w11*(w24**2)))+(w44+((-4.*((w12**2)*w44))+(4.*(w11*(w22*w44))))));
    aux10=(4.*(v44*(w11*w22)))+((-4.*((w14**2)*w22))+((-4.*(v24*(w11*w24)))+aux9));
    aux11=(-4.*(v44*(w12**2)))+(((0.+-2.j)*(v24*w14))+((4.*(v24*(w12*w14)))+aux10));
    aux12=(4.*((1.+w11)*w22))+(v22*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux13=(v24*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))))+(w24+((2.*(w11*w24))+((0.+-2.j)*(w12*w24))));
    aux14=(w14*(-1.+(((0.+-2.j)*w12)+(-2.*w22))))+(((0.+1.j)+(((0.+2.j)*w11)+(2.*w12)))*w24);
    aux15=(2.*(v12*((w14*((0.+1.j)+((-2.*w12)+((0.+2.j)*w22))))+aux13)))+((1.+(2.*v22))*aux14);
    aux16=(2.*(w12*w14))+(((0.+-1.j)*(w14*(1.+(2.*w22))))+((-1.+((-2.*w11)+((0.+2.j)*w12)))*w24));
    aux17=(-2.*(v22*(w11*(1.+w22))))+((v12**2)*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))));
    aux18=(2.*(v22*(w12*((0.+1.j)+w12))))+((v12*(((0.+2.j)*w11)+((4.*w12)+((0.+-2.j)*w22))))+aux17);
    aux19=(4.*((1.+w11)*w22))+(v22*(2.+((4.*w11)+((-8.*(w12**2))+((4.*w22)+(8.*(w11*w22)))))));
    aux20=(-2.*(w12**2))+((-4.*(v22*(w12**2)))+(2.*((1.+(v22+(w11+(2.*(v22*w11)))))*w22)));
    aux21=(-4.*((1.+(v22+(w11+(2.*(v22*w11)))))*(w24**2)))+(w44+(2.*((v22+((2.*(v22*w11))+(((0.+2.j)*w12)+aux20)))*w44)));
    aux22=(v44*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux19)))+((4.*(((0.+-1.j)+((2.+(4.*v22))*w12))*(w14*w24)))+aux21);
    aux23=((v22+(w11+(w22+(-2.*(((w12**2)+aux18)-(w11*w22))))))*w44)+(v11*((-4.*((w14**2)*(v22+(w22+(2.*(v22*w22))))))+aux22));
    aux24=(-4.*(v22*(w11*(w24**2))))+((2.*((1.+((2.*v11)+((0.+2.j)*v12)))*(v24*aux16)))+aux23);
    aux25=(4.*((v12**2)*(w24**2)))+((-2.*(w11*(w24**2)))+((8.*((v12**2)*(w11*(w24**2))))+aux24));
    aux26=(-16.*((v12**2)*(w12*(w14*w24))))+((8.*(v22*(w12*(w14*w24))))+(((0.+-4.j)*(v12*(w24**2)))+aux25));
    aux27=(8.*(v12*(w14*w24)))+(((0.+4.j)*(v22*(w14*w24)))+((4.*(w12*(w14*w24)))+aux26));
    aux28=(-2.*((w14**2)*w22))+((8.*((v12**2)*((w14**2)*w22)))+((-4.*(v22*((w14**2)*w22)))+aux27));
    aux29=(2.*(v44*(w11*w22)))+((-8.*((v12**2)*(v44*(w11*w22))))+((4.*(v22*(v44*(w11*w22))))+aux28));
    aux30=(v44*w22)+(((0.+4.j)*(v12*(v44*w22)))+((-4.*((v12**2)*(v44*w22)))+aux29));
    aux31=((0.+4.j)*(v12*(w14**2)))+((4.*((v12**2)*(w14**2)))+((-4.*(v22*(w14**2)))+aux30));
    aux32=(-2.*(v44*(w12**2)))+((8.*((v12**2)*(v44*(w12**2))))+((-4.*(v22*(v44*(w12**2))))+aux31));
    aux33=(4.*(v22*(v44*w11)))+((-8.*(v12*(v44*w12)))+(((0.+-4.j)*(v22*(v44*w12)))+aux32));
    aux34=(v44*w11)+(((0.+-4.j)*(v12*(v44*w11)))+((-4.*((v12**2)*(v44*w11)))+aux33));
    aux35=(4.*(w11*(1.+w22)))+(v11*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux36=(((-2.*((v12**2)*v44))+((v22*v44)+aux34))-(w24**2))-((v24**2)*(aux35-((((0.+1.j)+(2.*w12))**2))));
    aux37=(4.*(v14*((v24*(((0.+2.j)*w11)+((4.*w12)+((0.+-2.j)*w22))))+aux15)))+(w44+(2.*(aux36-(w14**2))));
    output=(-4.*(((aux8-(v12*(v44+aux11)))-(w12*w44))-(v44*w12)))/(v44+((-2.*((v14**2)*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux12))))+aux37));
    return output


def l(V,W,R,S):
    v11,v12,v13,v14=separate(V,0)
    v21,v22,v23,v24=separate(V,1)
    v31,v32,v33,v34=separate(V,2)
    v41,v42,v43,v44=separate(V,3)
    w11,w12,w13,w14=separate(W,0)
    w21,w22,w23,w24=separate(W,1)
    w31,w32,w33,w34=separate(W,2)
    w41,w42,w43,w44=separate(W,3)
    u1,u2,u3,u4=R[0],R[1],R[2],R[3]
    s1,s2,s3,s4=S[0],S[1],S[2],S[3]
    aux0=(u1*((0.+1.j)+((2.*v12)+((0.+2.j)*v22))))-(u2*(1.+((2.*v11)+((0.+2.j)*v12))));
    aux1=((0.+1.j)*v22)+(w12+(2.*((v11+((-2.*(v12**2))+(v22+(2.*(v11*v22)))))*w12)));
    aux2=(-2.*((v12**2)*(1.+(2.*w11))))+(2.*(v11*(1.+(v22+(w11+(2.*(v22*w11)))))));
    aux3=(-2.*((((0.+-1.j)*v11)+((2.*v12)+aux1))*w14))+(w24+(2.*((((0.+2.j)*v12)+(w11+((2.*(v22*w11))+aux2)))*w24)));
    aux4=((1.+((2.*v11)+((0.+2.j)*v12)))*(v24*(1.+((2.*w11)+((0.+-2.j)*w12)))))+aux3;
    aux5=v14*(((0.+1.j)+((2.*v12)+((0.+2.j)*v22)))*(1.+((2.*w11)+((0.+-2.j)*w12))));
    aux6=((0.+1.j)+((2.*v12)+((0.+2.j)*v22)))*((2.*w12)+((0.+-1.j)*(1.+(2.*w22))));
    aux7=(-2.*((v12**2)*(1.+(2.*w22))))+(2.*(v22*(1.+(v11+(w22+(2.*(v11*w22)))))));
    aux8=((0.+1.j)*v22)+(w12+(2.*((v11+((-2.*(v12**2))+(v22+(2.*(v11*v22)))))*w12)));
    aux9=(2.*(w14*(((0.+-2.j)*v12)+(w22+((2.*(v11*w22))+aux7)))))+(-2.*((((0.+-1.j)*v11)+((2.*v12)+aux8))*w24));
    aux10=(1.+((2.*v11)+((0.+2.j)*v12)))*(v24*((2.*w12)+((0.+-1.j)*(1.+(2.*w22)))));
    aux11=(aux0*((1.+((2.*w11)+((0.+-2.j)*w12)))*w24))+((s2*(aux4-aux5))+(s1*((w14+((v14*aux6)+aux9))-aux10)));
    aux12=((0.+4.j)*(u1*(v12*(w14*w22))))+((4.*(u2*(v12*(w14*w22))))+((-4.*(u1*(v22*(w14*w22))))+aux11));
    aux13=(-2.*(u1*(w14*w22)))+(((0.+-2.j)*(u2*(w14*w22)))+(((0.+-4.j)*(u2*(v11*(w14*w22))))+aux12));
    aux14=(-8.*(u2*(v11*(v24*(w11*w22)))))+((8.*(u1*(v12*(v24*(w11*w22)))))+aux13);
    aux15=(8.*(u2*(v12*(v14*(w11*w22)))))+((-8.*(u1*(v14*(v22*(w11*w22)))))+((-4.*(u2*(v24*(w11*w22))))+aux14));
    aux16=(-4.*(u2*(v11*(v24*w22))))+((4.*(u1*(v12*(v24*w22))))+((-4.*(u1*(v14*(w11*w22))))+aux15));
    aux17=(4.*(u2*(v12*(v14*w22))))+((-4.*(u1*(v14*(v22*w22))))+(((0.+-2.j)*(u1*(v24*w22)))+aux16));
    aux18=((0.+-4.j)*(u1*(v22*(w12*w14))))+((-4.*(u1*(v14*w22)))+(((0.+-2.j)*(u2*(v14*w22)))+aux17));
    aux19=(4.*(u2*(v11*(w12*w14))))+((-4.*(u1*(v12*(w12*w14))))+(((0.+4.j)*(u2*(v12*(w12*w14))))+aux18));
    aux20=(-2.*(u1*(v22*w14)))+(((0.+-2.j)*(u1*(w12*w14)))+((2.*(u2*(w12*w14)))+aux19));
    aux21=((0.+-2.j)*(u2*(v11*w14)))+(((0.+2.j)*(u1*(v12*w14)))+((2.*(u2*(v12*w14)))+aux20));
    aux22=(8.*(u2*(v11*(v24*(w12**2)))))+((-8.*(u1*(v12*(v24*(w12**2)))))+(((0.+-1.j)*(u2*w14))+aux21));
    aux23=(-8.*(u2*(v12*(v14*(w12**2)))))+((8.*(u1*(v14*(v22*(w12**2)))))+((4.*(u2*(v24*(w12**2))))+aux22));
    aux24=(4.*(u1*(v24*w12)))+(((0.+4.j)*(u2*(v24*w12)))+((4.*(u1*(v14*(w12**2))))+aux23));
    aux25=(4.*(u1*(v12*(v24*w11))))+(((0.+-4.j)*(u1*(v14*w12)))+((4.*(u2*(v14*w12)))+aux24));
    aux26=((0.+2.j)*(u1*(v24*w11)))+((-4.*(u2*(v24*w11)))+((-4.*(u2*(v11*(v24*w11))))+aux25));
    aux27=((0.+2.j)*(u2*(v14*w11)))+((4.*(u2*(v12*(v14*w11))))+((-4.*(u1*(v14*(v22*w11))))+aux26));
    aux28=(-2.*(u1*(v14*v22)))+((-2.*(u2*(v11*v24)))+((2.*(u1*(v12*v24)))+aux27));
    aux29=(-2.*(v22*(w11*(1.+w22))))+((v12**2)*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))));
    aux30=(2.*(v22*(w12*((0.+1.j)+w12))))+((v12*(((0.+2.j)*w11)+((4.*w12)+((0.+-2.j)*w22))))+aux29);
    aux31=(4.*((1.+w11)*w22))+(v22*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux32=(-4.*(((w12**2)+aux30)-(w11*w22)))+(2.*(v11*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux31))));
    aux33=(u1*((0.+1.j)+((2.*v12)+((0.+2.j)*v22))))-(u2*(1.+((2.*v11)+((0.+2.j)*v12))));
    aux34=((0.+1.j)*v22)+(w12+(2.*((v11+((-2.*(v12**2))+(v22+(2.*(v11*v22)))))*w12)));
    aux35=(-2.*((v12**2)*(1.+(2.*w11))))+(2.*(v11*(1.+(v22+(w11+(2.*(v22*w11)))))));
    aux36=(-2.*((((0.+-1.j)*v11)+((2.*v12)+aux34))*w14))+(w24+(2.*((((0.+2.j)*v12)+(w11+((2.*(v22*w11))+aux35)))*w24)));
    aux37=((1.+((2.*v11)+((0.+2.j)*v12)))*(v24*(1.+((2.*w11)+((0.+-2.j)*w12)))))+aux36;
    aux38=v14*(((0.+1.j)+((2.*v12)+((0.+2.j)*v22)))*(1.+((2.*w11)+((0.+-2.j)*w12))));
    aux39=((0.+1.j)+((2.*v12)+((0.+2.j)*v22)))*((2.*w12)+((0.+-1.j)*(1.+(2.*w22))));
    aux40=(-2.*((v12**2)*(1.+(2.*w22))))+(2.*(v22*(1.+(v11+(w22+(2.*(v11*w22)))))));
    aux41=((0.+1.j)*v22)+(w12+(2.*((v11+((-2.*(v12**2))+(v22+(2.*(v11*v22)))))*w12)));
    aux42=(2.*(w14*(((0.+-2.j)*v12)+(w22+((2.*(v11*w22))+aux40)))))+(-2.*((((0.+-1.j)*v11)+((2.*v12)+aux41))*w24));
    aux43=(1.+((2.*v11)+((0.+2.j)*v12)))*(v24*((2.*w12)+((0.+-1.j)*(1.+(2.*w22)))));
    aux44=(aux33*((1.+((2.*w11)+((0.+-2.j)*w12)))*w24))+((s2*(aux37-aux38))+(s1*((w14+((v14*aux39)+aux42))-aux43)));
    aux45=((0.+4.j)*(u1*(v12*(w14*w22))))+((4.*(u2*(v12*(w14*w22))))+((-4.*(u1*(v22*(w14*w22))))+aux44));
    aux46=(-2.*(u1*(w14*w22)))+(((0.+-2.j)*(u2*(w14*w22)))+(((0.+-4.j)*(u2*(v11*(w14*w22))))+aux45));
    aux47=(-8.*(u2*(v11*(v24*(w11*w22)))))+((8.*(u1*(v12*(v24*(w11*w22)))))+aux46);
    aux48=(8.*(u2*(v12*(v14*(w11*w22)))))+((-8.*(u1*(v14*(v22*(w11*w22)))))+((-4.*(u2*(v24*(w11*w22))))+aux47));
    aux49=(-4.*(u2*(v11*(v24*w22))))+((4.*(u1*(v12*(v24*w22))))+((-4.*(u1*(v14*(w11*w22))))+aux48));
    aux50=(4.*(u2*(v12*(v14*w22))))+((-4.*(u1*(v14*(v22*w22))))+(((0.+-2.j)*(u1*(v24*w22)))+aux49));
    aux51=((0.+-4.j)*(u1*(v22*(w12*w14))))+((-4.*(u1*(v14*w22)))+(((0.+-2.j)*(u2*(v14*w22)))+aux50));
    aux52=(4.*(u2*(v11*(w12*w14))))+((-4.*(u1*(v12*(w12*w14))))+(((0.+4.j)*(u2*(v12*(w12*w14))))+aux51));
    aux53=(-2.*(u1*(v22*w14)))+(((0.+-2.j)*(u1*(w12*w14)))+((2.*(u2*(w12*w14)))+aux52));
    aux54=((0.+-2.j)*(u2*(v11*w14)))+(((0.+2.j)*(u1*(v12*w14)))+((2.*(u2*(v12*w14)))+aux53));
    aux55=(8.*(u2*(v11*(v24*(w12**2)))))+((-8.*(u1*(v12*(v24*(w12**2)))))+(((0.+-1.j)*(u2*w14))+aux54));
    aux56=(-8.*(u2*(v12*(v14*(w12**2)))))+((8.*(u1*(v14*(v22*(w12**2)))))+((4.*(u2*(v24*(w12**2))))+aux55));
    aux57=(4.*(u1*(v24*w12)))+(((0.+4.j)*(u2*(v24*w12)))+((4.*(u1*(v14*(w12**2))))+aux56));
    aux58=(4.*(u1*(v12*(v24*w11))))+(((0.+-4.j)*(u1*(v14*w12)))+((4.*(u2*(v14*w12)))+aux57));
    aux59=((0.+2.j)*(u1*(v24*w11)))+((-4.*(u2*(v24*w11)))+((-4.*(u2*(v11*(v24*w11))))+aux58));
    aux60=((0.+2.j)*(u2*(v14*w11)))+((4.*(u2*(v12*(v14*w11))))+((-4.*(u1*(v14*(v22*w11))))+aux59));
    aux61=(-2.*(u1*(v14*v22)))+((-2.*(u2*(v11*v24)))+((2.*(u1*(v12*v24)))+aux60));
    aux62=(u4*(1.+((2.*v22)+((2.*w11)+((2.*w22)+aux32)))))+(2.*(((((2.*(u2*(v12*v14)))+aux61)-(u1*w14))-(u2*v24))-(u1*v14)));
    aux63=((v11*w22)+(w11*(1.+(v11+(w22+(2.*(v11*w22)))))))-(w12*((0.+1.j)+(w12+(2.*(v11*w12)))));
    aux64=((0.+-1.j)*w22)+(v12*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))));
    aux65=(4.*((1.+w11)*w22))+(v22*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux66=(-4.*(u1*(u2*(((0.+1.j)*w11)+((2.*w12)+aux64)))))+((u1**2)*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux65)));
    aux67=(v24*((0.+-1.j)+(v12*(2.+(4.*w11)))))+((-1.+(((0.+2.j)*v12)+(-2.*v22)))*w14);
    aux68=((v24**2)*(1.+(2.*w11)))+(((0.+2.j)*(v24*w14))+((1.+(2.*v22))*(w14**2)));
    aux69=(2.*(v24*((v24*w11)+((0.+1.j)*w14))))+((-4.*(v12*(v24*w14)))+((1.+((-4.*(v12**2))+(2.*v22)))*(w14**2)));
    aux70=(2.*(v12*(((0.+-1.j)+v12)*v44)))+(((-1.+((4.*(v12**2))+(-2.*v22)))*(v44*w11))+aux69);
    aux71=(-2.*((v12**2)*(1.+(2.*w11))))+(2.*(v11*(1.+(v22+(w11+(2.*(v22*w11)))))));
    aux72=(-2.*aux70)+(w44+(2.*((((0.+2.j)*v12)+(w11+((2.*(v22*w11))+aux71)))*w44)));
    aux73=(4.*(v14*aux67))+((-4.*(v11*(aux68-(v44*(1.+(v22+(w11+(2.*(v22*w11)))))))))+aux72);
    aux74=(v24*((0.+1.j)+(v12*(2.+(4.*w22)))))+(((0.+1.j)+((2.*v12)+((0.+2.j)*v22)))*w24);
    aux75=(-2.*((v12**2)*(1.+(2.*w22))))+(2.*(v22*(1.+(v11+(w22+(2.*(v11*w22)))))));
    aux76=(4.*(v14*aux74))+(w44+(2.*((((0.+-2.j)*v12)+(w22+((2.*(v11*w22))+aux75)))*w44)));
    aux77=(-2.*((1.+((-4.*(v12**2))+((2.*v22)+(v11*(2.+(4.*v22))))))*(w24**2)))+aux76;
    aux78=(-4.*((v14**2)*(v22+(w22+(2.*(v22*w22))))))+((-4.*((1.+((2.*v11)+((0.+2.j)*v12)))*(v24*w24)))+aux77);
    aux79=(2.*((1.+((-4.*(v12**2))+((2.*v22)+(v11*(2.+(4.*v22))))))*(v44*w22)))+((-4.*((v24**2)*(1.+(v11+(w22+(2.*(v11*w22)))))))+aux78);
    aux80=(-4.*(v12*(((0.+1.j)+v12)*v44)))+((4.*(v22*v44))+((4.*(v11*(v22*v44)))+aux79));
    aux81=(v24*((0.+1.j)+((2.*w12)+(4.*(v11*w12)))))+(w14+(2.*((v11+((0.+1.j)*v12))*w14)));
    aux82=(2.*(v24*(v11+(w11+(2.*(v11*w11))))))+((0.+1.j)*((1.+((2.*v11)+((0.+2.j)*v12)))*w14));
    aux83=w14+(((0.+-1.j)*w24)+(2.*(v12*((-2.*(w12*w14))+(w24+(2.*(w11*w24)))))));
    aux84=(-2.*(aux82*w24))+(2.*(v14*((v24*((0.+1.j)+(((0.+2.j)*w11)+(2.*w12))))+aux83)));
    aux85=(((v14**2)*(2.+((4.*w11)+((0.+-4.j)*w12))))+((2.*(w14*aux81))+aux84))-((1.+((2.*v11)+((0.+2.j)*v12)))*((1.+((2.*w11)+((0.+-2.j)*w12)))*w44));
    aux86=aux85-((1.+((2.*v11)+((0.+2.j)*v12)))*(v44*(1.+((2.*w11)+((0.+-2.j)*w12)))));
    aux87=w14+((-4.*(v12*(w12*w14)))+(((0.+-1.j)+((2.*v12)+(4.*(v12*w11))))*w24));
    aux88=(((0.+-1.j)+((2.*w12)+(4.*(v22*w12))))*w14)+(-2.*((1.+(v22+(w11+(2.*(v22*w11)))))*w24));
    aux89=(-2.*(w14**2))+(((0.+2.j)*(w14*w24))+(w44+((2.*(w11*w44))+((0.+-2.j)*(w12*w44)))));
    aux90=((0.+1.j)+((2.*v12)+((0.+2.j)*v22)))*(v44+((2.*(v44*w11))+(((0.+-2.j)*(v44*w12))+aux89)));
    aux91=(2.*(v24*aux87))+((2.*(v14*((v24*(-1.+((-2.*w11)+((0.+2.j)*w12))))+aux88)))+aux90);
    aux92=(u2*aux86)+(u1*(((0.+-2.j)*((v24**2)*(1.+((2.*w11)+((0.+-2.j)*w12)))))+aux91));
    aux93=(v24*(2.+(-8.*(v12*w12))))-(((0.+1.j)+((2.*v12)+((0.+2.j)*v22)))*(w14+((0.+1.j)*w24)));
    aux94=(v14*aux93)+((1.+((2.*v11)+((0.+2.j)*v12)))*(v24*(w14+((0.+1.j)*w24))));
    aux95=((v24**2)*((0.+1.j)+((2.+(4.*v11))*w12)))+(((v14**2)*((0.+-1.j)+((2.+(4.*v22))*w12)))+aux94);
    aux96=((0.+1.j)*v22)+(w12+(2.*((v11+((-2.*(v12**2))+(v22+(2.*(v11*v22)))))*w12)));
    aux97=(((0.+1.j)*(((v11+((0.+2.j)*v12))-v22)*v44))+aux95)-((((0.+-1.j)*v11)+((2.*v12)+aux96))*w44);
    aux98=(1.+((-4.*(v12**2))+((2.*v22)+(v11*(2.+(4.*v22))))))*((v44*w12)-(w14*w24));
    aux99=(w14+(2.*((v11+((0.+1.j)*v12))*w14)))-(v24*((0.+1.j)+((2.*w12)+(4.*(v11*w12)))));
    aux100=((v24*(1.+(((0.+2.j)*w12)+(2.*w22))))+((-1.+(4.*(v12*w12)))*w24))-(w14*((0.+1.j)+((2.*v12)+(4.*(v12*w22)))));
    aux101=(0.+1.j)*((1.+((2.*v11)+((0.+2.j)*v12)))*((1.+(((0.+2.j)*w12)+(2.*w22)))*w44));
    aux102=((0.+-2.j)*((1.+((2.*v11)+((0.+2.j)*v12)))*(w24**2)))+((2.*(v14*aux100))+aux101);
    aux103=((v14**2)*((4.*w12)+((0.+-2.j)*(1.+(2.*w22)))))+((2.*(aux99*w24))+aux102);
    aux104=(1.+((2.*v11)+((0.+2.j)*v12)))*(v44*((0.+-1.j)+((2.*w12)+((0.+-2.j)*w22))));
    aux105=-2.*(v24*((w14*((0.+1.j)+(v12*(2.+(4.*w22)))))+(w24+(-4.*(v12*(w12*w24))))));
    aux106=(4.*(w14*(v22+(w22+(2.*(v22*w22))))))+(((0.+2.j)*w24)+(-4.*((1.+(2.*v22))*(w12*w24))));
    aux107=(-2.*(w14*w24))+(((0.+2.j)*(w24**2))+((2.*(w12*w44))+((0.+-1.j)*((1.+(2.*w22))*w44))));
    aux108=((0.+1.j)+((2.*v12)+((0.+2.j)*v22)))*((2.*(v44*w12))+(((0.+-1.j)*(v44*(1.+(2.*w22))))+aux107));
    aux109=aux105+((v14*((v24*((0.+2.j)+((-4.*w12)+((0.+4.j)*w22))))+aux106))+aux108);
    aux110=(u2*(((4.*(v24*(w14*(1.+(v11+(w22+(2.*(v11*w22))))))))+aux103)-aux104))+(u1*(((v24**2)*(-2.+(((0.+-4.j)*w12)+(-4.*w22))))+aux109));
    aux111=((s1**2)*(v44+aux80))+((2.*(s2*aux92))+(-2.*(s1*((-2.*(s2*(aux97-aux98)))+aux110))));
    aux112=((s2**2)*(v44+((-4.*((v14**2)*(1.+(v22+(w11+(2.*(v22*w11)))))))+aux73)))+aux111;
    aux113=(-8.*((u1**2)*(v22*(w11*(w24**2)))))+(((((u2**2)*(1.+(2.*v11)))+((4.*((u2**2)*aux63))+aux66))*w44)+aux112);
    aux114=(-8.*((u2**2)*(v11*(w11*(w24**2)))))+((16.*(u1*(u2*(v12*(w11*(w24**2))))))+aux113);
    aux115=(-4.*((u1**2)*(v22*(w24**2))))+((-4.*((u1**2)*(w11*(w24**2))))+((-4.*((u2**2)*(w11*(w24**2))))+aux114));
    aux116=((0.+-4.j)*(u1*(u2*(w24**2))))+((-4.*((u2**2)*(v11*(w24**2))))+((8.*(u1*(u2*(v12*(w24**2)))))+aux115));
    aux117=(16.*((u1**2)*(v22*(w12*(w14*w24)))))+((-4.*((u1**2)*(w24**2)))+aux116);
    aux118=(16.*((u2**2)*(v11*(w12*(w14*w24)))))+((-32.*(u1*(u2*(v12*(w12*(w14*w24))))))+aux117);
    aux119=((0.+4.j)*((u2**2)*(w14*w24)))+((8.*((u1**2)*(w12*(w14*w24))))+((8.*((u2**2)*(w12*(w14*w24))))+aux118));
    aux120=(-8.*(u1*(u2*(v24*(w12*w24)))))+(((0.+-4.j)*((u1**2)*(w14*w24)))+((8.*(u1*(u2*(w14*w24))))+aux119));
    aux121=(8.*((u2**2)*(v14*(w12*w24))))+(((0.+8.j)*((u1**2)*(v24*(w12*w24))))+aux120);
    aux122=((0.+-8.j)*(u1*(u2*(v24*(w11*w24)))))+(((0.+-8.j)*(u1*(u2*(v14*(w12*w24)))))+aux121);
    aux123=((0.+8.j)*((u2**2)*(v14*(w11*w24))))+((-8.*((u1**2)*(v24*(w11*w24))))+aux122);
    aux124=((0.+-4.j)*(u1*(u2*(v24*w24))))+((8.*(u1*(u2*(v14*(w11*w24)))))+aux123);
    aux125=(4.*(u1*(u2*(v14*w24))))+(((0.+4.j)*((u2**2)*(v14*w24)))+((-4.*((u1**2)*(v24*w24)))+aux124));
    aux126=(16.*(u1*(u2*(v12*((w14**2)*w22)))))+((-8.*((u1**2)*(v22*((w14**2)*w22))))+aux125);
    aux127=(-4.*((u2**2)*((w14**2)*w22)))+((-8.*((u2**2)*(v11*((w14**2)*w22))))+aux126);
    aux128=((0.+-8.j)*((u1**2)*(v24*(w14*w22))))+((8.*(u1*(u2*(v24*(w14*w22)))))+((-4.*((u1**2)*((w14**2)*w22)))+aux127));
    aux129=((0.+8.j)*(u1*(u2*(v14*(w14*w22)))))+((-8.*((u2**2)*(v14*(w14*w22))))+aux128);
    aux130=(-16.*(u1*(u2*(v12*(v44*(w11*w22))))))+((8.*((u1**2)*(v22*(v44*(w11*w22)))))+aux129);
    aux131=(4.*((u2**2)*(v44*(w11*w22))))+((8.*((u2**2)*(v11*(v44*(w11*w22)))))+aux130);
    aux132=(-8.*((u1**2)*((v24**2)*(w11*w22))))+((4.*((u1**2)*(v44*(w11*w22))))+aux131);
    aux133=(-8.*((u2**2)*((v14**2)*(w11*w22))))+((16.*(u1*(u2*(v14*(v24*(w11*w22))))))+aux132);
    aux134=(-8.*(u1*(u2*(v12*(v44*w22)))))+((4.*((u1**2)*(v22*(v44*w22))))+aux133);
    aux135=(4.*((u1**2)*(v44*w22)))+(((0.+4.j)*(u1*(u2*(v44*w22))))+((4.*((u2**2)*(v11*(v44*w22))))+aux134));
    aux136=(-4.*((u2**2)*((v14**2)*w22)))+((8.*(u1*(u2*(v14*(v24*w22)))))+((-4.*((u1**2)*((v24**2)*w22)))+aux135));
    aux137=(-4.*((u2**2)*(v11*(w14**2))))+((8.*(u1*(u2*(v12*(w14**2)))))+((-4.*((u1**2)*(v22*(w14**2))))+aux136));
    aux138=((0.+8.j)*(u1*(u2*(v24*(w12*w14)))))+(((0.+4.j)*(u1*(u2*(w14**2))))+((-4.*((u2**2)*(w14**2)))+aux137));
    aux139=((0.+-8.j)*((u2**2)*(v14*(w12*w14))))+((8.*((u1**2)*(v24*(w12*w14))))+aux138);
    aux140=((0.+-4.j)*((u1**2)*(v24*w14)))+((4.*(u1*(u2*(v24*w14))))+((-8.*(u1*(u2*(v14*(w12*w14)))))+aux139));
    aux141=(-8.*((u1**2)*(v22*(v44*(w12**2)))))+(((0.+4.j)*(u1*(u2*(v14*w14))))+((-4.*((u2**2)*(v14*w14)))+aux140));
    aux142=(-8.*((u2**2)*(v11*(v44*(w12**2)))))+((16.*(u1*(u2*(v12*(v44*(w12**2))))))+aux141);
    aux143=(8.*((u1**2)*((v24**2)*(w12**2))))+((-4.*((u1**2)*(v44*(w12**2))))+((-4.*((u2**2)*(v44*(w12**2))))+aux142));
    aux144=(8.*((u2**2)*((v14**2)*(w12**2))))+((-16.*(u1*(u2*(v14*(v24*(w12**2))))))+aux143);
    aux145=((0.+4.j)*((u1**2)*(v44*w12)))+((-8.*(u1*(u2*(v44*w12))))+(((0.+-4.j)*((u2**2)*(v44*w12)))+aux144));
    aux146=(-8.*(u1*(u2*(v12*(v44*w11)))))+((4.*((u1**2)*(v22*(v44*w11))))+aux145);
    aux147=((0.+-4.j)*(u1*(u2*(v44*w11))))+((4.*((u2**2)*(v44*w11)))+((4.*((u2**2)*(v11*(v44*w11))))+aux146));
    aux148=(-4.*((u2**2)*((v14**2)*w11)))+((8.*(u1*(u2*(v14*(v24*w11)))))+((-4.*((u1**2)*((v24**2)*w11)))+aux147));
    aux149=(2.*((u2**2)*(v11*v44)))+((-4.*(u1*(u2*(v12*v44))))+((2.*((u1**2)*(v22*v44)))+aux148));
    aux150=(4.*(u1*(u2*(v14*v24))))+((-2.*((u1**2)*(v24**2)))+(((u1**2)*v44)+(((u2**2)*v44)+aux149)));
    aux151=(-4.*(u4*(((((2.*(u2*(v12*v14)))+aux28)-(u1*w14))-(u2*v24))-(u1*v14))))+((2.*(s4*aux62))+(-2.*((-2.*((u2**2)*(v14**2)))+aux150)));
    aux152=(-2.*(v22*(w11*(1.+w22))))+((v12**2)*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))));
    aux153=(2.*(v22*(w12*((0.+1.j)+w12))))+((v12*(((0.+2.j)*w11)+((4.*w12)+((0.+-2.j)*w22))))+aux152);
    aux154=(4.*((1.+w11)*w22))+(v22*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux155=(-4.*(((w12**2)+aux153)-(w11*w22)))+(2.*(v11*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux154))));
    aux156=(-2.*(v22*(w11*(1.+w22))))+((v12**2)*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))));
    aux157=(2.*(v22*(w12*((0.+1.j)+w12))))+((v12*(((0.+2.j)*w11)+((4.*w12)+((0.+-2.j)*w22))))+aux156);
    aux158=(4.*((1.+w11)*w22))+(v22*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux159=(-4.*(((w12**2)+aux157)-(w11*w22)))+(2.*(v11*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux158))));
    aux160=(aux151-((u4**2)*(1.+((2.*v22)+((2.*w11)+((2.*w22)+aux155))))))-((s4**2)*(1.+((2.*v22)+((2.*w11)+((2.*w22)+aux159)))));
    aux161=(4.*((1.+w11)*w22))+(v22*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux162=(v24*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))))+(w24+((2.*(w11*w24))+((0.+-2.j)*(w12*w24))));
    aux163=(w14*(-1.+(((0.+-2.j)*w12)+(-2.*w22))))+(((0.+1.j)+(((0.+2.j)*w11)+(2.*w12)))*w24);
    aux164=(2.*(v12*((w14*((0.+1.j)+((-2.*w12)+((0.+2.j)*w22))))+aux162)))+((1.+(2.*v22))*aux163);
    aux165=(2.*(w12*w14))+(((0.+-1.j)*(w14*(1.+(2.*w22))))+((-1.+((-2.*w11)+((0.+2.j)*w12)))*w24));
    aux166=(-2.*(v22*(w11*(1.+w22))))+((v12**2)*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))));
    aux167=(2.*(v22*(w12*((0.+1.j)+w12))))+((v12*(((0.+2.j)*w11)+((4.*w12)+((0.+-2.j)*w22))))+aux166);
    aux168=(4.*((1.+w11)*w22))+(v22*(2.+((4.*w11)+((-8.*(w12**2))+((4.*w22)+(8.*(w11*w22)))))));
    aux169=(-2.*(w12**2))+((-4.*(v22*(w12**2)))+(2.*((1.+(v22+(w11+(2.*(v22*w11)))))*w22)));
    aux170=(-4.*((1.+(v22+(w11+(2.*(v22*w11)))))*(w24**2)))+(w44+(2.*((v22+((2.*(v22*w11))+(((0.+2.j)*w12)+aux169)))*w44)));
    aux171=(v44*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux168)))+((4.*(((0.+-1.j)+((2.+(4.*v22))*w12))*(w14*w24)))+aux170);
    aux172=((v22+(w11+(w22+(-2.*(((w12**2)+aux167)-(w11*w22))))))*w44)+(v11*((-4.*((w14**2)*(v22+(w22+(2.*(v22*w22))))))+aux171));
    aux173=(-4.*(v22*(w11*(w24**2))))+((2.*((1.+((2.*v11)+((0.+2.j)*v12)))*(v24*aux165)))+aux172);
    aux174=(4.*((v12**2)*(w24**2)))+((-2.*(w11*(w24**2)))+((8.*((v12**2)*(w11*(w24**2))))+aux173));
    aux175=(-16.*((v12**2)*(w12*(w14*w24))))+((8.*(v22*(w12*(w14*w24))))+(((0.+-4.j)*(v12*(w24**2)))+aux174));
    aux176=(8.*(v12*(w14*w24)))+(((0.+4.j)*(v22*(w14*w24)))+((4.*(w12*(w14*w24)))+aux175));
    aux177=(-2.*((w14**2)*w22))+((8.*((v12**2)*((w14**2)*w22)))+((-4.*(v22*((w14**2)*w22)))+aux176));
    aux178=(2.*(v44*(w11*w22)))+((-8.*((v12**2)*(v44*(w11*w22))))+((4.*(v22*(v44*(w11*w22))))+aux177));
    aux179=(v44*w22)+(((0.+4.j)*(v12*(v44*w22)))+((-4.*((v12**2)*(v44*w22)))+aux178));
    aux180=((0.+4.j)*(v12*(w14**2)))+((4.*((v12**2)*(w14**2)))+((-4.*(v22*(w14**2)))+aux179));
    aux181=(-2.*(v44*(w12**2)))+((8.*((v12**2)*(v44*(w12**2))))+((-4.*(v22*(v44*(w12**2))))+aux180));
    aux182=(4.*(v22*(v44*w11)))+((-8.*(v12*(v44*w12)))+(((0.+-4.j)*(v22*(v44*w12)))+aux181));
    aux183=(v44*w11)+(((0.+-4.j)*(v12*(v44*w11)))+((-4.*((v12**2)*(v44*w11)))+aux182));
    aux184=(4.*(w11*(1.+w22)))+(v11*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux185=(((-2.*((v12**2)*v44))+((v22*v44)+aux183))-(w24**2))-((v24**2)*(aux184-((((0.+1.j)+(2.*w12))**2))));
    aux186=(4.*(v14*((v24*(((0.+2.j)*w11)+((4.*w12)+((0.+-2.j)*w22))))+aux164)))+(w44+(2.*(aux185-(w14**2))));
    aux187=v44+((-2.*((v14**2)*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux161))))+aux186);
    output=(0.5*aux160)/aux187;
    return output

def integral(V,B,R,S):
    cons1=c(V,B,R,S);
    cons2=d(V,B,R,S);
    cons3=e(V,B,R,S);
    cons4=f(V,B,R,S);
    cons5=g(V,B,R,S);
    cons6=h(V,B,R,S);
    cons7=i(V,B,R,S);
    cons8=j(V,B,R,S);
    cons9=k(V,B,R,S);
    cons10=l(V,B,R,S);
    pi=np.pi;
    aux0=(4.*(cons1*(cons6*cons8)))+((cons3*(cons4*cons9))+(-2.*(cons1*(cons7*cons9))));
    aux1=((cons2*(cons3*cons7))+((-2.*(cons2*(cons4*cons8)))+aux0))-((cons3**2)*cons6);
    aux2=(-2.*(cons4*(cons5*cons7)))+((cons2*(cons6*cons7))+(cons4*(cons6*cons9)));
    aux3=((cons3**2)*cons5)+(((cons2**2)*cons8)+((-4.*(cons1*(cons5*cons8)))+(cons1*(cons9**2))));
    aux4=(-4.*(cons1*(cons6*(cons7*cons9))))+((2.*(cons3*aux2))+(4.*(cons10*(aux3-(cons2*(cons3*cons9))))));
    aux5=(4.*(cons1*((cons6**2)*cons8)))+((2.*(cons2*(cons4*(cons7*cons9))))+aux4);
    aux6=(4.*((cons4**2)*(cons5*cons8)))+((-4.*(cons2*(cons4*(cons6*cons8))))+aux5);
    aux7=(((4.*(cons1*(cons5*(cons7**2))))+aux6)-((cons4**2)*(cons9**2)))-((cons2**2)*(cons7**2));
    aux8=((cons3**2)*cons5)+(((cons2**2)*cons8)+(cons1*((-4.*(cons5*cons8))+(cons9**2))));
    aux9=np.exp(((0.25*(aux7-((cons3**2)*(cons6**2))))/(aux8-(cons2*(cons3*cons9)))));
    aux10=(((4.*(cons1*(cons5*cons8)))+(cons2*(cons3*cons9)))-(cons1*(cons9**2)))-((cons2**2)*cons8);
    aux11=((aux10-((cons3**2)*cons5))/(((cons3**2)*pi)+(-4.*(cons1*(cons8*pi)))))**-0.5;
    aux12=((-cons1)**-0.5)*(((((cons3**2)/cons1)+(-4.*cons8))**-0.5)*(aux1*(aux9*(pi*(aux11)))));
    aux13=((cons3**2)*cons5)+(((cons2**2)*cons8)+(cons1*((-4.*(cons5*cons8))+(cons9**2))));
    output=aux12/(aux13-(cons2*(cons3*cons9)));
    return output


def cons(V,W,R,S):
    v11,v12,v13,v14=separate(V,0)
    v21,v22,v23,v24=separate(V,1)
    v31,v32,v33,v34=separate(V,2)
    v41,v42,v43,v44=separate(V,3)
    w11,w12,w13,w14=separate(W,0)
    w21,w22,w23,w24=separate(W,1)
    w31,w32,w33,w34=separate(W,2)
    w41,w42,w43,w44=separate(W,3)
    u1,u2,u3,u4=R[0],R[1],R[2],R[3]
    s1,s2,s3,s4=S[0],S[1],S[2],S[3]
    pi=np.pi;
    aux0=(4.*((1.+w11)*w22))+(v22*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux1=(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux0))/(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22))))));
    aux2=(-2.*(v22*(w11*(1.+w22))))+((v12**2)*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))));
    aux3=(2.*(v22*(w12*((0.+1.j)+w12))))+((v12*(((0.+2.j)*w11)+((4.*w12)+((0.+-2.j)*w22))))+aux2);
    aux4=(4.*((1.+w11)*w22))+(v22*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux5=(-4.*(((w12**2)+aux3)-(w11*w22)))+(2.*(v11*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux4))));
    aux6=(4.*((1.+w11)*w22))+(v22*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux7=(1.+((2.*v22)+((2.*w11)+((2.*w22)+aux5))))/(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux6));
    aux8=(4.*((1.+w11)*w22))+(v22*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux9=(v24*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))))+(w24+((2.*(w11*w24))+((0.+-2.j)*(w12*w24))));
    aux10=(w14*(-1.+(((0.+-2.j)*w12)+(-2.*w22))))+(((0.+1.j)+(((0.+2.j)*w11)+(2.*w12)))*w24);
    aux11=(2.*(v12*((w14*((0.+1.j)+((-2.*w12)+((0.+2.j)*w22))))+aux9)))+((1.+(2.*v22))*aux10);
    aux12=(2.*(w12*w14))+(((0.+-1.j)*(w14*(1.+(2.*w22))))+((-1.+((-2.*w11)+((0.+2.j)*w12)))*w24));
    aux13=(-2.*(v22*(w11*(1.+w22))))+((v12**2)*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))));
    aux14=(2.*(v22*(w12*((0.+1.j)+w12))))+((v12*(((0.+2.j)*w11)+((4.*w12)+((0.+-2.j)*w22))))+aux13);
    aux15=(4.*((1.+w11)*w22))+(v22*(2.+((4.*w11)+((-8.*(w12**2))+((4.*w22)+(8.*(w11*w22)))))));
    aux16=(-2.*(w12**2))+((-4.*(v22*(w12**2)))+(2.*((1.+(v22+(w11+(2.*(v22*w11)))))*w22)));
    aux17=(-4.*((1.+(v22+(w11+(2.*(v22*w11)))))*(w24**2)))+(w44+(2.*((v22+((2.*(v22*w11))+(((0.+2.j)*w12)+aux16)))*w44)));
    aux18=(v44*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux15)))+((4.*(((0.+-1.j)+((2.+(4.*v22))*w12))*(w14*w24)))+aux17);
    aux19=((v22+(w11+(w22+(-2.*(((w12**2)+aux14)-(w11*w22))))))*w44)+(v11*((-4.*((w14**2)*(v22+(w22+(2.*(v22*w22))))))+aux18));
    aux20=(-4.*(v22*(w11*(w24**2))))+((2.*((1.+((2.*v11)+((0.+2.j)*v12)))*(v24*aux12)))+aux19);
    aux21=(4.*((v12**2)*(w24**2)))+((-2.*(w11*(w24**2)))+((8.*((v12**2)*(w11*(w24**2))))+aux20));
    aux22=(-16.*((v12**2)*(w12*(w14*w24))))+((8.*(v22*(w12*(w14*w24))))+(((0.+-4.j)*(v12*(w24**2)))+aux21));
    aux23=(8.*(v12*(w14*w24)))+(((0.+4.j)*(v22*(w14*w24)))+((4.*(w12*(w14*w24)))+aux22));
    aux24=(-2.*((w14**2)*w22))+((8.*((v12**2)*((w14**2)*w22)))+((-4.*(v22*((w14**2)*w22)))+aux23));
    aux25=(2.*(v44*(w11*w22)))+((-8.*((v12**2)*(v44*(w11*w22))))+((4.*(v22*(v44*(w11*w22))))+aux24));
    aux26=(v44*w22)+(((0.+4.j)*(v12*(v44*w22)))+((-4.*((v12**2)*(v44*w22)))+aux25));
    aux27=((0.+4.j)*(v12*(w14**2)))+((4.*((v12**2)*(w14**2)))+((-4.*(v22*(w14**2)))+aux26));
    aux28=(-2.*(v44*(w12**2)))+((8.*((v12**2)*(v44*(w12**2))))+((-4.*(v22*(v44*(w12**2))))+aux27));
    aux29=(4.*(v22*(v44*w11)))+((-8.*(v12*(v44*w12)))+(((0.+-4.j)*(v22*(v44*w12)))+aux28));
    aux30=(v44*w11)+(((0.+-4.j)*(v12*(v44*w11)))+((-4.*((v12**2)*(v44*w11)))+aux29));
    aux31=(4.*(w11*(1.+w22)))+(v11*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux32=(((-2.*((v12**2)*v44))+((v22*v44)+aux30))-(w24**2))-((v24**2)*(aux31-((((0.+1.j)+(2.*w12))**2))));
    aux33=(4.*(v14*((v24*(((0.+2.j)*w11)+((4.*w12)+((0.+-2.j)*w22))))+aux11)))+(w44+(2.*(aux32-(w14**2))));
    aux34=(-2.*(v22*(w11*(1.+w22))))+((v12**2)*(1.+((-4.*(w12**2))+((2.*w22)+(w11*(2.+(4.*w22)))))));
    aux35=(2.*(v22*(w12*((0.+1.j)+w12))))+((v12*(((0.+2.j)*w11)+((4.*w12)+((0.+-2.j)*w22))))+aux34);
    aux36=(4.*((1.+w11)*w22))+(v22*(2.+((-8.*(w12**2))+((4.*w22)+(w11*(4.+(8.*w22)))))));
    aux37=(-4.*(((w12**2)+aux35)-(w11*w22)))+(2.*(v11*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux36))));
    aux38=(v44+((-2.*((v14**2)*(1.+((-4.*(w12*((0.+-1.j)+w12)))+aux8))))+aux33))/(1.+((2.*v22)+((2.*w11)+((2.*w22)+aux37))));
    aux39=((1.+((2.*w11)+((-4.*(w12**2))/(1.+(2.*w22)))))**-0.5)*((aux1**-0.5)*((aux7**-0.5)*(aux38**-0.5)));
    output=16.*((pi**2.5)*(((0.5+w22)**-0.5)*aux39));
    return output

def integral3(V,B,R,S):
    pi=np.pi;
    cons1=c(V,B,R,S)
    cons2=d(V,B,R,S)
    cons3=e(V,B,R,S)
    cons4=f(V,B,R,S)
    cons5=g(V,B,R,S)
    cons6=h(V,B,R,S)
    cons7=i(V,B,R,S)
    cons8=j(V,B,R,S)
    cons9=k(V,B,R,S)
    cons10=l(V,B,R,S)
    aux0=(4.*(cons1*(cons6*cons8)))+((cons3*(cons4*cons9))+(-2.*(cons1*(cons7*cons9))));
    aux1=((cons2*(cons3*cons7))+((-2.*(cons2*(cons4*cons8)))+aux0))-((cons3**2)*cons6);
    aux2=(-2.*(cons4*(cons5*cons7)))+((cons2*(cons6*cons7))+(cons4*(cons6*cons9)));
    aux3=((cons3**2)*cons5)+(((cons2**2)*cons8)+((-4.*(cons1*(cons5*cons8)))+(cons1*(cons9**2))));
    aux4=(-4.*(cons1*(cons6*(cons7*cons9))))+((2.*(cons3*aux2))+(4.*(cons10*(aux3-(cons2*(cons3*cons9))))));
    aux5=(4.*(cons1*((cons6**2)*cons8)))+((2.*(cons2*(cons4*(cons7*cons9))))+aux4);
    aux6=(4.*((cons4**2)*(cons5*cons8)))+((-4.*(cons2*(cons4*(cons6*cons8))))+aux5);
    aux7=(((4.*(cons1*(cons5*(cons7**2))))+aux6)-((cons4**2)*(cons9**2)))-((cons2**2)*(cons7**2));
    aux8=((cons3**2)*cons5)+(((cons2**2)*cons8)+(cons1*((-4.*(cons5*cons8))+(cons9**2))));
    aux9=np.exp(((0.25*(aux7-((cons3**2)*(cons6**2))))/(aux8-(cons2*(cons3*cons9)))));
    aux10=(((4.*(cons1*(cons5*cons8)))+(cons2*(cons3*cons9)))-(cons1*(cons9**2)))-((cons2**2)*cons8);
    aux11=((aux10-((cons3**2)*cons5))/(((cons3**2)*pi)+(-4.*(cons1*(cons8*pi)))))**-0.5;
    aux12=((-cons1)**-0.5)*(((((cons3**2)/cons1)+(-4.*cons8))**-0.5)*(aux1*(aux9*(pi*(aux11)))));
    aux13=((cons3**2)*cons5)+(((cons2**2)*cons8)+(cons1*((-4.*(cons5*cons8))+(cons9**2))));
    output=aux12/(aux13-(cons2*(cons3*cons9)));
    return (np.sqrt(2)/((2*pi)**4))*output*(cons(V,B,R,S))

def integral__(vector1,vector2):
    V=[[vector1[5,0],vector1[7,0],vector1[6,0],vector1[8,0]],[vector1[7,0],vector1[12,0],vector1[10,0],vector1[13,0]],[vector1[6,0],vector1[10,0],vector1[9,0],vector1[13,0]],[vector1[8,0],vector1[11,0],vector1[13,0],vector1[14,0]]]
    R=[vector1[i,0] for i in range(1,5)]
    B=[[vector2[5,0],vector2[7,0],vector2[6,0],vector2[8,0]],[vector2[7,0],vector2[12,0],vector2[10,0],vector2[13,0]],[vector2[6,0],vector2[10,0],vector2[9,0],vector2[13,0]],[vector2[8,0],vector2[11,0],vector2[13,0],vector2[14,0]]]
    S=[vector2[i,0] for i in range(1,5)]
    S[1],S[2]=S[2],S[1]
    R[1],R[2]=R[2],R[1]
    return integral3(V,B,R,S)


def fidelity_sq(vector1,vector2):
    V=[[vector1[5,0],vector1[7,0],vector1[6,0],vector1[8,0]],[vector1[7,0],vector1[12,0],vector1[10,0],vector1[13,0]],[vector1[6,0],vector1[10,0],vector1[9,0],vector1[13,0]],[vector1[8,0],vector1[11,0],vector1[13,0],vector1[14,0]]]
    R=[vector1[i,0] for i in range(1,5)]
    B=[[vector2[5,0],vector2[7,0],vector2[6,0],vector2[8,0]],[vector2[7,0],vector2[12,0],vector2[10,0],vector2[13,0]],[vector2[6,0],vector2[10,0],vector2[9,0],vector2[13,0]],[vector2[8,0],vector2[11,0],vector2[13,0],vector2[14,0]]]
    S=[vector2[i,0] for i in range(1,5)]
    V,R,B,S=np.array(V),np.array(R),np.array(B),np.array(S)
    delta=np.linalg.det(V+B)
    J=np.array([[0,1,0,0],[-1,0,0,0],[0,0,0,1],[0,0,-1,0]])
    gamma=(2**4)*np.linalg.det(np.dot(np.dot(J,B),np.dot(J,V))- np.eye(4)/4 )
    Lambda=(2**4)*np.linalg.det(V + 1j*J/2 )*np.linalg.det(B + 1j*J/2 )
    a=(np.sqrt(gamma)+np.sqrt(Lambda))-np.sqrt(((np.sqrt(gamma)+np.sqrt(Lambda))**2 - delta))
    d=np.array(S)-np.array(R)
    b=np.exp(-(1/2)*np.dot(np.dot(d.T,np.linalg.inv(B+V)),d))
    return np.sqrt(b/a)

def overlap2(vector1,vector2):
    V = [[vector1[5, 0], vector1[7, 0], vector1[6, 0], vector1[8, 0]],
         [vector1[7, 0], vector1[12, 0], vector1[10, 0], vector1[13, 0]],
         [vector1[6, 0], vector1[10, 0], vector1[9, 0], vector1[13, 0]],
         [vector1[8, 0], vector1[11, 0], vector1[13, 0], vector1[14, 0]]]
    R = [vector1[i, 0] for i in range(1, 5)]
    B = [[vector2[5, 0], vector2[7, 0], vector2[6, 0], vector2[8, 0]],
         [vector2[7, 0], vector2[12, 0], vector2[10, 0], vector2[13, 0]],
         [vector2[6, 0], vector2[10, 0], vector2[9, 0], vector2[13, 0]],
         [vector2[8, 0], vector2[11, 0], vector2[13, 0], vector2[14, 0]]]
    S = [vector2[i, 0] for i in range(1, 5)]
    V, R, B, S = np.array(V), np.array(R), np.array(B), np.array(S)
    delta = np.linalg.det(V + B)
    b = np.exp(-(1 / 2) * np.dot(np.dot(d.T, np.linalg.inv(B + V)), d))
    output=4/np.sqrt(delta)*b
    return output


def overlap2a(vector1,vector2):
    R=[vector1[i,0] for i in range(1,5)]
    S=[vector2[i,0] for i in range(1,5)]
    a=1/2*(R[0]**2+R[2]**2)+1/2*(R[1]**2+R[3]**2)
    b=1/2*(S[0]**2+S[2]**2)+1/2*(S[1]**2+S[3]**2)
    c=1/2*(R[0]+1j*R[2])*(S[0]-1j*S[2])+1/2*(R[1]+1j*R[3])*(S[1]-1j*S[3])
    return np.exp(-1/2*(a+b)+c)


def integral(vector1,vector2):
    pi=np.pi
    V=[[vector1[5,0],vector1[7,0],vector1[6,0],vector1[8,0]],[vector1[7,0],vector1[12,0],vector1[10,0],vector1[13,0]],[vector1[6,0],vector1[10,0],vector1[9,0],vector1[13,0]],[vector1[8,0],vector1[11,0],vector1[13,0],vector1[14,0]]]
    R=[vector1[i,0] for i in range(1,5)]
    B=[[vector2[5,0],vector2[7,0],vector2[6,0],vector2[8,0]],[vector2[7,0],vector2[12,0],vector2[10,0],vector2[13,0]],[vector2[6,0],vector2[10,0],vector2[9,0],vector2[13,0]],[vector2[8,0],vector2[11,0],vector2[13,0],vector2[14,0]]]
    S=[vector2[i,0] for i in range(1,5)]
    V,R,B,S=np.array(V),np.array(R),np.array(B),np.array(S)
    cons1=c(V,B,R,S)
    cons2=d(V,B,R,S)
    cons3=e(V,B,R,S)
    cons4=f(V,B,R,S)
    cons5=g(V,B,R,S)
    cons6=h(V,B,R,S)
    cons7=i(V,B,R,S)
    cons8=j(V,B,R,S)
    cons9=k(V,B,R,S)
    cons10=l(V,B,R,S)
    vect=[cons1,cons2,cons3,cons4,cons5,cons6,cons7,cons8,cons9,cons10]
    a3=segunda_a(vect)
    b3=segunda_b(vect)
    c3=segunda_c(vect)
    a4=tercera_a(vect)
    b4=tercera_b(vect)
    c4=tercera_c(vect)
    aux0=(((b4**2)*c3)+((-2.*(((b3*b4)+c3)*c4))+(4.*(a3*(c4**2)))))*((np.exp((a4+((-0.25*(b4**2))/c4))))*(np.sqrt((1.+0j)*np.pi)));
    output=0.25*(((-c4)**-2.5)*aux0);
    return (np.sqrt(2)/((2*pi)**4))*output

def segunda_a(vect):
    cons1,cons2,cons3,cons4,cons5,cons6,cons7,cons8,cons9,cons10=vect
    pi=np.pi;
    aux0=((((cons3**2)/cons1)+(-4.*cons8))**-0.5)*((((cons3**2)+(-4.*(\
    cons1*cons8)))**-2.)*pi);
    aux1=((((cons3**2)/cons1)+(-4.*cons8))**-0.5)*((((cons3**2)+(-4.*(\
    cons1*cons8)))**-2.)*pi);
    aux2=((((cons3**2)/cons1)+(-4.*cons8))**-0.5)*((((cons3**2)+(-4.*(\
    cons1*cons8)))**-2.)*pi);
    aux3=((((cons3**2)/cons1)+(-4.*cons8))**-0.5)*((((cons3**2)+(-4.*(\
    cons1*cons8)))**-2.)*pi);
    aux4=((((cons3**2)/cons1)+(-4.*cons8))**-0.5)*(cons8*((((cons3**2)+(-\
    4.*(cons1*cons8)))**-2.)*pi));
    aux5=(8.*(((-cons1)**-0.5)*((cons1**2)*((cons7**2)*aux3))))+(-16.*(((-\
    cons1)**-0.5)*((cons1**2)*aux4)));
    aux6=(2.*(((-cons1)**-0.5)*((cons3**2)*((cons4**2)*aux1))))+((-8.*(((-\
    cons1)**-0.5)*(cons1*(cons3*(cons4*(cons7*aux2))))))+aux5);
    output=(4.*(((-cons1)**-0.5)*(cons1*((cons3**2)*aux0))))+aux6;
    return output

def segunda_b(vect):
    pi=np.pi;
    cons1,cons2,cons3,cons4,cons5,cons6,cons7,cons8,cons9,cons10=vect
    aux0=((((cons3**2)/cons1)+(-4.*cons8))**-0.5)*((((cons3**2)+(-4.*(\
    cons1*cons8)))**-2.)*pi);
    aux1=((((cons3**2)/cons1)+(-4.*cons8))**-0.5)*((((cons3**2)+(-4.*(\
    cons1*cons8)))**-2.)*pi);
    aux2=((((cons3**2)/cons1)+(-4.*cons8))**-0.5)*((((cons3**2)+(-4.*(\
    cons1*cons8)))**-2.)*(cons9*pi));
    aux3=((((cons3**2)/cons1)+(-4.*cons8))**-0.5)*((((cons3**2)+(-4.*(\
    cons1*cons8)))**-2.)*(cons9*pi));
    aux4=(-8.*(((-cons1)**-0.5)*(cons1*(cons3*(cons4*aux2)))))+(16.*(((-\
    cons1)**-0.5)*((cons1**2)*(cons7*aux3))));
    output=(4.*(((-cons1)**-0.5)*(cons2*((cons3**2)*(cons4*aux0)))))+((-8.\
    *(((-cons1)**-0.5)*(cons1*(cons2*(cons3*(cons7*aux1))))))+aux4);
    return output

def segunda_c(vect):
    pi=np.pi;
    cons1,cons2,cons3,cons4,cons5,cons6,cons7,cons8,cons9,cons10=vect
    aux0=((((cons3**2)/cons1)+(-4.*cons8))**-0.5)*((((cons3**2)+(-4.*(\
    cons1*cons8)))**-2.)*pi);
    aux1=((((cons3**2)/cons1)+(-4.*cons8))**-0.5)*(cons8*((((cons3**2)+(-\
    4.*(cons1*cons8)))**-2.)*pi));
    aux2=((((cons3**2)/cons1)+(-4.*cons8))**-0.5)*((cons8**2)*((((\
    cons3**2)+(-4.*(cons1*cons8)))**-2.)*pi));
    aux3=((((cons3**2)/cons1)+(-4.*cons8))**-0.5)*((((cons3**2)+(-4.*(\
    cons1*cons8)))**-2.)*(cons9*pi));
    aux4=((((cons3**2)/cons1)+(-4.*cons8))**-0.5)*((((cons3**2)+(-4.*(\
    cons1*cons8)))**-2.)*((cons9**2)*pi));
    aux5=(-8.*(((-cons1)**-0.5)*(cons1*(cons2*(cons3*aux3)))))+(8.*(((-\
    cons1)**-0.5)*((cons1**2)*aux4)));
    aux6=(-16.*(((-cons1)**-0.5)*(cons1*((cons3**2)*aux1))))+((32.*(((-\
    cons1)**-0.5)*((cons1**2)*aux2)))+aux5);
    output=(2.*(((-cons1)**-0.5)*((cons3**2)*(((cons2**2)+(cons3**2))*\
    aux0))))+aux6;
    return output

def tercera_a(vect):
    cons1,cons2,cons3,cons4,cons5,cons6,cons7,cons8,cons9,cons10=vect
    aux0=((0.25*((cons3**2)*(cons4**2)))/((cons3**2)+(-4.*(cons1*cons8))))/cons1;
    aux1=((-0.25*(cons4**2))/cons1)+(aux0+((cons1*(cons7**2))/((cons3**2)+(-4.*(cons1*cons8)))));
    output=(cons10+aux1)-((cons3*(cons4*cons7))/((cons3**2)+(-4.*(cons1*cons8))));
    return output

def tercera_b(vect):
    cons1,cons2,cons3,cons4,cons5,cons6,cons7,cons8,cons9,cons10=vect
    aux0=((0.5*(cons2*((cons3**2)*cons4)))/((cons3**2)+(-4.*(cons1*cons8))))/cons1;
    aux1=cons6+(aux0+((2.*(cons1*(cons7*cons9)))/((cons3**2)+(-4.*(cons1*cons8)))));
    aux2=(((-0.5*(cons2*cons4))/cons1)+aux1)-((cons3*(cons4*cons9))/((\
    cons3**2)+(-4.*(cons1*cons8))));
    output=aux2-((cons2*(cons3*cons7))/((cons3**2)+(-4.*(cons1*cons8))));
    return output

def tercera_c(vect):
    cons1,cons2,cons3,cons4,cons5,cons6,cons7,cons8,cons9,cons10=vect
    aux0=((0.25*((cons2**2)*(cons3**2)))/((cons3**2)+(-4.*(cons1*cons8))))/cons1;
    aux1=((-0.25*(cons2**2))/cons1)+(cons5+(aux0+((cons1*(cons9**2))/((cons3**2)+(-4.*(cons1*cons8))))));
    output=aux1-((cons2*(cons3*cons9))/((cons3**2)+(-4.*(cons1*cons8))));
    return output